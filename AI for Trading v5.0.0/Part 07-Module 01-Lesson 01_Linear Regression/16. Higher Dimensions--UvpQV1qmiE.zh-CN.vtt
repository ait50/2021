WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.399
所以在之前的例子中

00:00:01.399 --> 00:00:03.850
我们有一列输入栏和一列输出栏

00:00:03.850 --> 00:00:07.083
输入是房屋的大小 输出是价格

00:00:07.083 --> 00:00:09.515
所以我们这是个二维问题

00:00:09.515 --> 00:00:12.519
对价格的预测是一条直线

00:00:12.519 --> 00:00:15.978
方程是一个常数乘面积再加上另一个常数

00:00:16.178 --> 00:00:18.078
如果有多个输入栏应该会怎么办呢？

00:00:18.079 --> 00:00:20.079
例如 大小和学校质量

00:00:20.079 --> 00:00:22.539
现在我们得到一个三维图 因为

00:00:22.539 --> 00:00:25.103
我们有两个维度表示输入 一个维度表示输出

00:00:25.303 --> 00:00:27.428
现在我们这些点并不在平面上

00:00:27.428 --> 00:00:30.803
而是看起来像是漂浮在三维空间上的点

00:00:30.803 --> 00:00:33.978
这里我们要做的是拟合平面 而不是拟合直线

00:00:33.978 --> 00:00:38.969
方程也不再是常数乘以变量 再加上另一个常数

00:00:38.969 --> 00:00:42.420
而是常数乘以学校质量

00:00:42.420 --> 00:00:46.140
加上另一个常数乘以大小 再加上第三个常数 

00:00:46.140 --> 00:00:48.795
这是我们在三维中的情况

00:00:48.795 --> 00:00:51.179
那么在 n 维中会是什么呢？

00:00:51.179 --> 00:00:56.524
在这个案例中 我们有 n-1 列输入和一列输出

00:00:56.524 --> 00:00:58.289
例如输入包括大小

00:00:58.289 --> 00:01:00.829
学校质量 房间数量等等

00:01:00.829 --> 00:01:05.304
现在数据存在于 n 维空间 我们也采取相同做法

00:01:05.305 --> 00:01:09.118
所以对于输入我们有 n-1 个变量

00:01:09.319 --> 00:01:13.213
分别是 X1 X2 直到 Xn-1 对于输出的预测

00:01:13.215 --> 00:01:15.909
我们只有一个变量 y-hat

00:01:15.909 --> 00:01:21.774
并且预测可以是 n-1 维的

00:01:21.775 --> 00:01:26.090
因为很难绘制 n 维图 只能想象包含 n 个变量的线性方程

00:01:26.090 --> 00:01:31.868
y-hat = W1X1 + W2X2 +...+ Wn-1Xn-1 + Wn

00:01:32.069 --> 00:01:38.269
这是我们对多维度进行预测的做法 

00:01:38.269 --> 00:01:41.060
为了找到权重 W1 到 Wn

00:01:41.060 --> 00:01:44.524
这个算法与包含两个变量的算法完全相同

00:01:44.724 --> 00:01:47.539
我们可以使用绝对值技巧或平方技巧

00:01:47.540 --> 00:01:50.625
或者计算平均绝对误差或平方误差

00:01:50.625 --> 00:01:55.625
并且利用梯度下降法进行最小化

