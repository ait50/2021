WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.190
你已经掌握了很多数据处理和 RNN 实践经验

00:00:05.190 --> 00:00:07.290
所以对于这个模型的定义

00:00:07.290 --> 00:00:09.135
我就不废话那么多了

00:00:09.135 --> 00:00:11.210
只说说大概流程

00:00:11.210 --> 00:00:14.760
模型将接受字词标记

00:00:14.760 --> 00:00:18.360
这些标记首先会进入嵌入层

00:00:18.360 --> 00:00:20.725
数据集大约有 74,000 个不同字词

00:00:20.725 --> 00:00:24.600
这一层负责将整数字词标记

00:00:24.600 --> 00:00:28.255
转换为特定大小的嵌入向量

00:00:28.255 --> 00:00:31.645
我们可以单独训练 Word2Vec 模型

00:00:31.645 --> 00:00:35.930
并将学习到的字词嵌入当做输入传入 LSTM 层

00:00:35.930 --> 00:00:39.410
虽然这些嵌入层没有接受训练

00:00:39.410 --> 00:00:43.100
并学习字词之间的语义关系

00:00:43.100 --> 00:00:45.020
但是这些嵌入层也很有用

00:00:45.020 --> 00:00:48.200
这个嵌入层主要用于降维

00:00:48.200 --> 00:00:51.380
它将查看庞大的词汇表

00:00:51.380 --> 00:00:54.945
并将每个字词映射到具有指定嵌入维度的向量

00:00:54.945 --> 00:00:56.850
在嵌入层之后

00:00:56.850 --> 00:00:58.810
是 LSTM 层

00:00:58.810 --> 00:01:02.150
LSTM 层由隐藏状态大小和层级数量进行定义

00:01:02.150 --> 00:01:07.775
在每一步 这些 LSTM 单元将生成输出和新的隐藏状态

00:01:07.775 --> 00:01:11.010
隐藏状态将当做输入传入下个单元

00:01:11.010 --> 00:01:14.110
这就是模型的记忆方式

00:01:14.110 --> 00:01:19.700
输出将传入 S 型激活函数全连接输出层

00:01:19.700 --> 00:01:21.800
此层级将负责

00:01:21.800 --> 00:01:25.560
将 LSTM 层输出映射到期望的输出大小

00:01:25.560 --> 00:01:29.885
即情感类别“positive”或“negative”的数量

00:01:29.885 --> 00:01:32.990
S 型激活函数负责

00:01:32.990 --> 00:01:36.800
将所有这些输出转换为 0-1 之间的值

00:01:36.800 --> 00:01:40.290
这是我们期望的编码情感标签的范围

00:01:40.290 --> 00:01:43.615
0 表示 negative 1 表示 positive

00:01:43.615 --> 00:01:47.920
模型将查看构成影评的字词序列

00:01:47.920 --> 00:01:52.820
但是我们只关心最后的 S 型函数输出

00:01:52.820 --> 00:01:55.040
因为该层级将在模型处理完

00:01:55.040 --> 00:01:57.875
影评中的字词序序列后生成 1 个标签

00:01:57.875 --> 00:02:02.890
这部分是解释说明和参考文档

00:02:02.890 --> 00:02:04.375
在下面的第一个单元格中

00:02:04.375 --> 00:02:07.370
我将检查是否有可供训练模型的 GPU

00:02:07.370 --> 00:02:09.980
请在这里完成该模型

00:02:09.980 --> 00:02:13.360
它包含以下参数

00:02:13.360 --> 00:02:15.580
vocab 大小、输出大小、嵌入维度

00:02:15.580 --> 00:02:17.635
隐藏维度、层级数量

00:02:17.635 --> 00:02:19.934
以及可选的丢弃概率

00:02:19.934 --> 00:02:23.045
并创建完整的情感分析 RNN 模型

00:02:23.045 --> 00:02:27.670
你需要完成 init 和 forward 函数

00:02:27.670 --> 00:02:32.810
注意 输出只能是 S 型输出层的最后一个值

00:02:32.810 --> 00:02:37.265
请完成 LSTM 层级的 init 隐藏函数

00:02:37.265 --> 00:02:39.935
它应该将隐藏状态和单元状态全初始化为 0

00:02:39.935 --> 00:02:43.235
并将它们移到 GPU 上（如果有的话）

00:02:43.235 --> 00:02:47.790
建议查阅文档或参考其他代码示例

00:02:47.790 --> 00:02:51.635
你已经掌握了所有必要知识 能够自己完成这个模型了

00:02:51.635 --> 00:02:54.945
如果你对模型定义很有信心

00:02:54.945 --> 00:02:59.110
之后就可以定义模型参数并训练模型啦

00:02:59.110 --> 00:03:02.450
接下来我将演示如何定义情感分析 RNN 模型

00:03:02.450 --> 00:03:06.375
这个任务很有趣 记得自己尝试一下哟

00:03:06.375 --> 00:03:09.140
这道练习可以促使你思考

00:03:09.140 --> 00:03:12.670
数据经过模型时是如何变形的加油！

