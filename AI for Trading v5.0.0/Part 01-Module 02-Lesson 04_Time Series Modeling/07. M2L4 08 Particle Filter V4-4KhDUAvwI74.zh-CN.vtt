WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.375
接下来我们将讨论粒子滤波器

00:00:03.375 --> 00:00:06.209
这是一种基因算法

00:00:06.209 --> 00:00:10.019
也用于无人驾驶汽车和时序运算

00:00:10.019 --> 00:00:16.050
基因算法是指我们通过自然选择来改进估算结果

00:00:16.050 --> 00:00:18.480
稍后你会明白的

00:00:18.480 --> 00:00:20.949
先举个例子

00:00:20.949 --> 00:00:24.544
假设我们可以雇佣很多小精灵

00:00:24.545 --> 00:00:29.795
每个小精灵都能根据市场数据从某个角度判断股票收益率的变化趋势

00:00:29.795 --> 00:00:34.230
这些小精灵能够预测第二天的股票收益率

00:00:34.229 --> 00:00:35.479
在第二天

00:00:35.479 --> 00:00:37.544
你将知道它们有多准确

00:00:37.545 --> 00:00:41.370
每天判断准确的小精灵会被重点关注

00:00:41.369 --> 00:00:45.169
并且判断错误的小精灵会被较少关注

00:00:45.170 --> 00:00:50.245
慢慢地 只有判断准确的小精灵会继续提供预测

00:00:50.244 --> 00:00:52.753
通过自然选择流程

00:00:52.753 --> 00:00:54.619
我们找到了最准确的小精灵

00:00:54.619 --> 00:00:58.354
并将它们的平均预测结果作为最佳估算值

00:00:58.354 --> 00:01:02.239
因为这一流程看起来像自然选择和进化论

00:01:02.240 --> 00:01:05.629
所以粒子滤波器被视为一种基因算法

00:01:05.629 --> 00:01:08.089
小精灵称为粒子

00:01:08.090 --> 00:01:13.025
这些粒子是一个个模型 模型参数随机设置

00:01:13.025 --> 00:01:16.225
当大多数粒子做出相似的预测时

00:01:16.224 --> 00:01:19.599
则表明更相信平均预测结果

00:01:19.599 --> 00:01:23.579
如果在任何时间点 数据分布有任何显著变化

00:01:23.579 --> 00:01:27.579
那么粒子可能会做出相互之间更不同的预测

00:01:27.579 --> 00:01:31.754
在这些情形下 当单个预测更加分散时

00:01:31.754 --> 00:01:34.239
我们对预测的置信水平更低

00:01:34.239 --> 00:01:37.549
粒子滤波器善于处理各种数据

00:01:37.549 --> 00:01:41.429
因为它们不假定数据是正态分布的

00:01:41.430 --> 00:01:45.200
此外 粒子滤波器不假定线性关系

00:01:45.200 --> 00:01:48.269
所以更适合非线性数据

