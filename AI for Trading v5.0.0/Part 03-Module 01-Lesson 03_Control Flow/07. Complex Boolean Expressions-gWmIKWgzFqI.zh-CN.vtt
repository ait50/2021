WEBVTT
Kind: captions
Language: zh-CN

00:00:02.919 --> 00:00:07.910
我们到目前为止见到的 if 和 elif 语句

00:00:07.910 --> 00:00:12.714
后面都只有一个布尔表达式 只检查一个条件

00:00:12.714 --> 00:00:17.579
但是 更复杂的布尔表达式也很有用

00:00:17.579 --> 00:00:20.584
如果条件处理的是数字变量

00:00:20.585 --> 00:00:23.359
你可能想要检查某个值是否位于特定范围内

00:00:23.359 --> 00:00:28.704
甚至进行一些计算 以便做出比较

00:00:28.704 --> 00:00:32.429
注意 这个条件使用了逻辑和代数

00:00:32.429 --> 00:00:35.295
依然可以在 Python 中正确运行

00:00:35.295 --> 00:00:38.145
存储身高和体重的值后

00:00:38.145 --> 00:00:41.395
我们可以快速输出关于任何一个人的信息

00:00:41.395 --> 00:00:45.385
某些情况可能需要逻辑运算符

00:00:45.384 --> 00:00:47.384
如果在下雨并且出太阳了

00:00:47.384 --> 00:00:49.414
我可能会看看有没有彩虹

00:00:49.414 --> 00:00:53.200
注意 这里的 if 语句

00:00:53.200 --> 00:00:57.815
要求这两个变量都必须为 true 整个条件才能为 true

00:00:57.814 --> 00:00:59.439
如果任何一个变量为 false

00:00:59.439 --> 00:01:02.229
那么这行代码将为 false

00:01:02.229 --> 00:01:04.854
print 语句将不运行

00:01:04.855 --> 00:01:08.980
假设我想向客户发送促销邮件

00:01:08.980 --> 00:01:12.160
前提条件是他们没有要求退出邮寄名单

00:01:12.159 --> 00:01:16.009
并且所在的位置能够兑换优惠

00:01:16.010 --> 00:01:18.370
对于非常复杂的条件

00:01:18.370 --> 00:01:20.635
可能需要用到一些 and

00:01:20.635 --> 00:01:22.870
or 和 not 运算符

00:01:22.870 --> 00:01:27.250
如果你想使条件更清晰 可以使用括号

00:01:27.250 --> 00:01:29.230
但是 无论是简单还是复杂的条件

00:01:29.230 --> 00:01:32.020
if 语句中的这一整行

00:01:32.019 --> 00:01:36.564
都必须是布尔表达式 评估结果为 true 或 false

00:01:36.564 --> 00:01:39.459
这个值决定了 if 语句中的缩进代码段

00:01:39.459 --> 00:01:43.000
是否会执行

