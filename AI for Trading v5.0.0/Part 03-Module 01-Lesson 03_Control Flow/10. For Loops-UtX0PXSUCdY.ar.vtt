WEBVTT
Kind: captions
Language: ar

00:00:02.069 --> 00:00:05.572
الآن وقد تعرفتم على التعابير الشرطية

00:00:05.672 --> 00:00:07.207
لننتقل إلى التكرارات الحلقية،

00:00:07.307 --> 00:00:10.043
والتي تسمح لنا بتكرار
كتل التعليمات البرمجية.

00:00:10.143 --> 00:00:12.279
هناك نوعان منها في Python،

00:00:12.379 --> 00:00:15.048
حلقات "for" وحلقات "while".

00:00:15.148 --> 00:00:17.718
دعونا أولاً نلقي نظرة إلى حلقة "for"،

00:00:17.818 --> 00:00:21.455
والتي بإمكاننا استخدامها للقيام بالتكرار
باستخدام عناصر كائن متعدد.

00:00:21.555 --> 00:00:26.560
الكائن المتعدد هو كائن يمكنه
إرجاع أحد عناصره في كل مرة.

00:00:26.660 --> 00:00:30.464
وهذا يشمل الأنواع المتسلسلة
كالسلاسل "strings" والقوائم "lists"

00:00:30.564 --> 00:00:33.934
والمجموعات "tuples"
بالإضافة إلى الأنواع غير المتسلسلة

00:00:34.034 --> 00:00:36.703
مثل القواميس "dictionaries" والملفات.

00:00:36.803 --> 00:00:41.909
يمكنك تعريف الكائنات باستخدام أسلوب
"iter" لإتاحة استخدامها ككائن متعدد،

00:00:42.009 --> 00:00:46.413
ويمكنك الاطلاع على المزيد من المعلومات
عن هذا الأسلوب في الملاحظات أدناه.

00:00:46.513 --> 00:00:50.184
تأمل حلقة "for" هذه والتي تقوم بالتكرار
باستخدام عناصر قائمة مدن

00:00:50.284 --> 00:00:53.754
وتحوّل الحرف الأول من اسم كل
مدينة إلى الحالة الكبيرة، ثم تطبعه.

00:00:53.854 --> 00:00:57.324
تدلنا الكلمة الأساسية "for"
على أن هذه حلقة "for".

00:00:57.424 --> 00:01:03.096
القائمة cities هي الكائن المتعدد
و city هي متغيّر التكرار،

00:01:03.197 --> 00:01:07.801
أي المتغيّر الذي يمثّل عنصر الكائن المتعدد

00:01:07.901 --> 00:01:10.270
الذي تتعامل معه الحلقة حالياً.

00:01:10.370 --> 00:01:12.573
لذا، في التكرار الأول،

00:01:12.673 --> 00:01:14.942
ستُسند إلى المتغيّر "city"
السلسلة "New York City"،

00:01:15.042 --> 00:01:16.877
وفي التكرار الثاني،

00:01:16.977 --> 00:01:19.713
ستُسند إليه السلسلة "Mountain View"،
وهكذا دواليك.

00:01:19.813 --> 00:01:22.883
يمكننا استخدام المتغيّر city
للإشارة إلى عنصر

00:01:22.983 --> 00:01:27.621
داخل صدر حلقة "for"
المُزاح إلى مستوى أدنى أثناء أي تكرار.

00:01:27.721 --> 00:01:32.593
كتلة الكود المُزاحة هذه يتم تنفيذه
مرة واحدة لكل عنصر في cities.

00:01:32.693 --> 00:01:36.330
يمكنك تسمية متغيّرات التكرار كيفما شئت،

00:01:36.430 --> 00:01:39.867
لكن هذا المثال يعرض نمطاً شائعاً.

00:01:39.967 --> 00:01:44.071
اسم القائمة "cities" هو جمع كلمة "city"،

00:01:44.171 --> 00:01:46.306
وهي اسم متغيّر التكرار.

00:01:46.406 --> 00:01:50.010
تسمية القوائم ومتغيّرات
التكرار بهذا الأسلوب

00:01:50.110 --> 00:01:54.815
يجعل من السهل على المبرمجين الآخرين
فهم الغرض من كل متغيّر.

00:01:54.915 --> 00:01:59.520
حتى الآن، كان الحلقات التي كتبناها
تستخلص المعلومات من القوائم.

00:01:59.620 --> 00:02:04.157
يمكننا أيضاً استخدام حلقات "for"
لإنشاء القوائم وتعديلها.

00:02:04.258 --> 00:02:05.993
لإنشاء قائمة جديدة،

00:02:06.093 --> 00:02:07.728
يمكننا البدء بقائمة فارغة،

00:02:07.828 --> 00:02:11.431
ثم استخدام أسلوب "append"
لإضافة بنود جديدة إليها.

00:02:11.532 --> 00:02:15.435
تقوم حلقة for هذه بالتكرار
باستخدام كل مدينة مدرجة في القائمة cities

00:02:15.536 --> 00:02:18.472
ثم تضيفها إلى قائمة capitalized_cities.

00:02:18.572 --> 00:02:25.078
تعديل القوائم أصعب قليلاً ويتطلب استخدام
دالة جديدة تُدعى range، وتعني نطاق.

00:02:25.179 --> 00:02:30.517
range هي دالة مضمنة تُستخدم
لإنشاء تسلسلات لا تقبل التعديل من الأعداد،

00:02:30.617 --> 00:02:33.921
ولها ثلاثة وسيطات
يجب أن تكون جميعها أعداد صحيحة،

00:02:34.021 --> 00:02:37.224
start و stop و step.

00:02:37.324 --> 00:02:40.027
start هي الرقم الأول في التسلسل.

00:02:40.127 --> 00:02:43.430
stop هي الرقم
الذي يسبق آخر رقم في التسلسل.

00:02:43.530 --> 00:02:47.334
وstep هي الفارق
بين الأرقام المدرجة في التسلسل.

00:02:47.434 --> 00:02:50.938
إذا لم يتم تحديدهما،
ستكون القيمة الافتراضية لـstart هي صفر،

00:02:51.038 --> 00:02:52.940
والقيمة الافتراضية لـstep هي 1.

00:02:53.040 --> 00:02:57.110
إن استدعاء range باستخدام عدد صحيح
يعني أن ذلك العدد هو الوسيطة stop

00:02:57.211 --> 00:03:02.516
وسيرجع تسلسلاً من الأعداد يبدأ بالصفر
وينتهي عند ذلك العدد الصحيح ناقص واحد.

00:03:02.616 --> 00:03:07.888
أي أن (4)range تعطينا تسلسلاً
من الصفر وحتى 4 ناقص واحد، أي 3.

00:03:07.988 --> 00:03:12.860
استدعاء range ومعها عددين صحيحين
يعني أنهما الوسيطتين start و stop،

00:03:12.960 --> 00:03:18.398
وسيُنتج تسلسلاً من الأعداد يبدأ بالعدد الأول
وينتهي بالعدد الثاني ناقص واحد.

00:03:18.498 --> 00:03:23.737
(2,6)range تُرجع تسلسلاً من 2 إلى 5.

00:03:23.837 --> 00:03:28.542
استدعاء range باستخدام ثلاثة أعداد صحيحة
سيُرجع تسلسلاً من الأعداد

00:03:28.642 --> 00:03:31.411
يبدأ بالعدد الأول وينتهي بالثاني ناقص واحد

00:03:31.512 --> 00:03:33.680
والأعداد فيه مُباعَدة بمقدار الثالث.

00:03:33.780 --> 00:03:35.449
أي أن (1,10,2)range

00:03:35.549 --> 00:03:40.921
ستُرجع تسلسلاً من الأعداد ما بين 1 و 9
بزيادة مقدارها 2 بين كل عدد والذي يليه.

00:03:41.021 --> 00:03:43.290
لاحظ أننا في هذه الأمثلة

00:03:43.390 --> 00:03:46.760
قمنا بوضع range
في كائن قائمة "list" قبل طباعتها.

00:03:46.860 --> 00:03:52.466
لأن طباعة مخرجات range فقط
سيعرض كائن range فحسب.

00:03:52.566 --> 00:03:55.302
يمكنك عرض قيم كائن range

00:03:55.402 --> 00:04:00.073
عن طريق تحويله إلى قائمة أو التكرار
مروراً بعناصره باستخدام حلقة for.

00:04:00.174 --> 00:04:02.409
بالعودة إلى مثال المدن،

00:04:02.509 --> 00:04:08.649
يمكننا استخدام دالة range لتوليد مؤشرات
فهرسة كل قيمة من قيم قائمة cities.

00:04:08.749 --> 00:04:13.787
هذا يتيح لنا الوصول إلى عناصر القائمة
باستخدام cities[index]،

00:04:13.887 --> 00:04:18.358
حتى نتمكن من تعديل
قيم قائمة cities وهي في مكانها.

00:04:18.458 --> 00:04:20.727
دعونا نستعرض تكراراً واحد من هذه الحلقة

00:04:20.827 --> 00:04:24.398
لنطّلع على آلية عمل
جميع هذه الأجزاء معاً.

00:04:24.498 --> 00:04:26.967
len(cities) تساوي 4،

00:04:27.067 --> 00:04:31.271
أي أن القائمة ستكون نطاقاً من صفر إلى 3.

00:04:31.371 --> 00:04:35.642
سيتخذ مؤشر الفهرسة كل واحدة
من هذه القيم تلو الأخرى قيمة له.

00:04:35.742 --> 00:04:37.477
إذن، في هذا التكرار الأول،

00:04:37.578 --> 00:04:39.680
تكون قيمة مؤشر الفهرسة هي صفر.

00:04:39.780 --> 00:04:44.651
يشير هذا الجزء هنا إلى المدينة الأولى،
New York City باستخدام مؤشر فهرستها،

00:04:44.751 --> 00:04:46.954
ويحول الحروف الأول من اسمها
إلى حالتها الكبيرة باستخدام title،

00:04:47.054 --> 00:04:51.325
ثم يستبدل بها اسم مدينة Ney York City
في موقعه الأصلي،

00:04:51.425 --> 00:04:56.163
ثم يُعاد إجراء هذه العملية
لكل واحدة من المدن الأخرى.

00:04:56.263 --> 00:05:01.935
يمكننا استخدام print لنرى التغيير
الطارئ على قائمة cities بعد كل تكرار.

00:05:02.035 --> 00:05:05.506
بالحصول على قائمة مؤشرات فهرسة
باستخدام دالة range،

00:05:05.606 --> 00:05:08.742
تمكنّا من الإشارة إلى كل عنصر
في قائمة باستخدام مؤشر فهرسته

00:05:08.842 --> 00:05:11.612
داخل حلقة for لتطبيق تغيير ما.

00:05:11.712 --> 00:05:15.949
بينما يعتبر التعديل على القوائم
أحد تطبيقات دالة range،

00:05:16.049 --> 00:05:18.519
إلا أنه ليس الاستخدام الوحيد لها.

00:05:18.619 --> 00:05:23.323
سوف تستخدم rage مراراً
لتكرار تنفيذ إجراء ما عدد معين من المرات.

