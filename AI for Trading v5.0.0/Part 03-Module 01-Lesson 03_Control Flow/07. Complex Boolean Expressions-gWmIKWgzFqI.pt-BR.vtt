WEBVTT
Kind: captions
Language: pt-BR

00:00:00.801 --> 00:00:03.534
BOOLEANAS PARA CONDIÇÕES,
EXPRESSÕES BOOLEANAS COMPLEXAS

00:00:03.601 --> 00:00:07.300
Todas as instruções "if" e "elif"
que vimos até o momento

00:00:07.334 --> 00:00:10.000
eram seguidas
de uma única expressão booleana

00:00:10.033 --> 00:00:12.534
que verificava
uma única condição.

00:00:12.601 --> 00:00:17.534
Contudo, booleanas mais complexas
também podem ser úteis.

00:00:17.601 --> 00:00:20.400
Se a condição está funcionando
com uma variável numérica,

00:00:20.434 --> 00:00:24.434
vale a pena verificar se um valor
está dentro de certo intervalo

00:00:24.501 --> 00:00:29.000
e até fazer alguns cálculos
para poder realizar uma comparação.

00:00:29.033 --> 00:00:32.434
A seguinte condição
usa lógica e álgebra

00:00:32.501 --> 00:00:35.601
e funciona corretamente
em Python.

00:00:35.634 --> 00:00:37.901
Armazenando valores
de altura e largura,

00:00:37.934 --> 00:00:41.701
podemos imprimir o resultado
rapidamente para qualquer indivíduo.

00:00:41.734 --> 00:00:45.334
Algumas situações
pedem operadores lógicos.

00:00:45.400 --> 00:00:49.100
Se estiver chovendo e ensolarado,
posso procurar um arco-íris.

00:00:49.901 --> 00:00:51.801
Perceba
que essa instrução "if"

00:00:51.834 --> 00:00:55.834
requer que ambas variáveis
sejam verdadeiras

00:00:55.901 --> 00:00:59.400
para que ela seja verdadeira.
Se alguma for falsa,

00:00:59.434 --> 00:01:02.501
esta linha
também será falsa,

00:01:02.534 --> 00:01:05.200
e nossa instrução "print"
não será executada.

00:01:05.234 --> 00:01:08.934
Digamos que eu queira enviar
um e-mail promocional a um cliente,

00:01:09.000 --> 00:01:12.100
caso ele não tenha pedido
para ser retirado dos destinatários

00:01:12.133 --> 00:01:16.200
e esteja em uma localidade
onde possa tirar proveito da oferta.

00:01:16.234 --> 00:01:18.234
Para condições
muito complicadas,

00:01:18.300 --> 00:01:22.934
você pode ter que combinar
"and", "or" e "not".

00:01:23.000 --> 00:01:26.934
Use parênteses para tornar
as combinações mais claras.

00:01:27.000 --> 00:01:29.133
Seja simples ou complexa,

00:01:29.200 --> 00:01:33.133
a linha toda de uma instrução "if"
deve ser uma expressão booleana

00:01:33.200 --> 00:01:36.501
que avalia
como verdadeiro ou falso,

00:01:36.534 --> 00:01:40.100
e é esse valor que decide
se o bloco indentado

00:01:40.133 --> 00:01:42.734
de uma instrução "if"
é executado ou não.

