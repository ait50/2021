WEBVTT
Kind: captions
Language: zh-CN

00:00:02.209 --> 00:00:06.915
for 循环会遍历一个序列中的所有元素

00:00:06.915 --> 00:00:11.693
而 while 循环会一直迭代 直到满足停止条件

00:00:11.694 --> 00:00:14.430
对于大多数情况来说 这两种循环都足够了

00:00:14.429 --> 00:00:18.314
但有时候需要更精确地控制何时应该停止循环

00:00:18.315 --> 00:00:22.050
在这些情况下 我们将使用关键字 break

00:00:22.050 --> 00:00:26.990
循环遇到 break 语句后将立即停止

00:00:26.989 --> 00:00:32.018
如果我们检测到满足某个条件 可以使用该关键字结束循环

00:00:32.018 --> 00:00:36.359
关键字 break 可以同时用在 for 和 while 循环中

00:00:36.359 --> 00:00:42.554
例如 假设你想向货船上装载货物清单中的货物

00:00:42.554 --> 00:00:46.664
该列表包含货物和重量元组

00:00:46.664 --> 00:00:50.039
理想情况下 你希望将所有货物都装载到货船上

00:00:50.039 --> 00:00:53.579
但是货船有重量上限

00:00:53.579 --> 00:00:56.820
因此 当达到货船的重量上限时

00:00:56.820 --> 00:00:58.755
你想要停止装载货物

00:00:58.755 --> 00:01:02.615
为了满足这一要求 我们使用 for 循环

00:01:02.615 --> 00:01:07.594
装载货物并记录到目前为止装载的所有货物的重量

00:01:07.594 --> 00:01:11.390
在每次添加一个货物时

00:01:11.390 --> 00:01:15.605
我们都将检查货船的总货物重量是否达到最大容量 100

00:01:15.605 --> 00:01:19.740
如果达到了 则使用 break 语句停止装载货物

00:01:19.739 --> 00:01:23.299
如果没达到 则装载下个货物并加上它的重量

00:01:23.299 --> 00:01:25.715
最终装载了这些货物

00:01:25.715 --> 00:01:27.388
情况不妙

00:01:27.388 --> 00:01:30.890
货船的货物重量远远超出了上限 100

00:01:30.890 --> 00:01:33.799
break 语句的确阻止我们将所有货物放入货船中

00:01:33.799 --> 00:01:38.129
但是我们依然比上限多出了 111

00:01:38.129 --> 00:01:41.829
很难看出哪里出错了

00:01:41.829 --> 00:01:46.060
一种策略是在代码中添加 print 语句

00:01:46.060 --> 00:01:49.885
这是一个非常实用的技巧

00:01:49.885 --> 00:01:53.770
因为它可以帮助我们了解代码逐步运行时发生了什么情况

00:01:53.769 --> 00:01:57.640
添加多个提供背景信息的 print 语句

00:01:57.640 --> 00:02:01.430
可以有效帮助我们了解哪里出错了

00:02:01.430 --> 00:02:04.536
这是添加调试语句后的循环

00:02:04.536 --> 00:02:09.372
调试是指找出代码中的错误并消除错误的流程

00:02:09.372 --> 00:02:13.845
在此示例中 可以看出直到重量超出 100 才跳出循环

00:02:13.844 --> 00:02:17.414
实际上 我们应该在添加该货物之前就跳出循环

00:02:17.414 --> 00:02:20.849
此外 可以看出如果不添加机器的话

00:02:20.849 --> 00:02:24.120
依然可以装载芝士

00:02:24.120 --> 00:02:26.159
这就要提到另一个语句

00:02:26.159 --> 00:02:29.685
有时候 我们需要跳过一次循环迭代

00:02:29.685 --> 00:02:34.680
而不是完全退出循环

00:02:34.680 --> 00:02:38.439
在这种情况下 我们可以使用关键字 continue

00:02:38.439 --> 00:02:40.990
在此示例中 我们遍历一个食品列表

00:02:40.990 --> 00:02:45.115
如果食品是水果 则使计数器递增

00:02:45.115 --> 00:02:50.784
如果 fruit 中没有该食品 则停止迭代

00:02:50.784 --> 00:02:53.995
否则 使 fruit_count 加一

00:02:53.995 --> 00:02:57.730
当这次循环的食品是鹰嘴豆泥或吐司时

00:02:57.729 --> 00:03:00.539
循环的剩余部分完全被跳过

