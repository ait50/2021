WEBVTT
Kind: captions
Language: pt-BR

00:00:00.775 --> 00:00:02.839
CONTROLE DE FLUXO

00:00:03.089 --> 00:00:06.664
Os loops for iteram sobre todos
os elementos em uma sequência

00:00:06.697 --> 00:00:10.962
e os loops while iteram
até que a condição stop é atendida.

00:00:11.416 --> 00:00:13.874
Isso é suficiente
para a maioria dos objetivos,

00:00:13.908 --> 00:00:16.250
mas, às vezes, precisamos
de um controle mais preciso

00:00:16.284 --> 00:00:18.159
sobre quando um loop
deve terminar.

00:00:18.640 --> 00:00:21.754
Nestes casos,
usamos a palavra-chave "break".

00:00:21.998 --> 00:00:26.446
Um loop terminará imediatamente
se encontrar uma instrução break.

00:00:26.479 --> 00:00:28.587
Podemos usar isso
para encerrar o loop

00:00:28.621 --> 00:00:31.283
se detectarmos
que alguma condição foi atendida.

00:00:31.566 --> 00:00:35.778
A palavra-chave "break" pode ser
usada nos loops for e while.

00:00:36.343 --> 00:00:39.852
Por exemplo, suponha que você queira
carregar um cargueiro

00:00:39.886 --> 00:00:42.368
com uma lista de itens
chamada manifest.

00:00:42.695 --> 00:00:46.273
Esta lista contém tuplas de itens
e seus pesos.

00:00:46.610 --> 00:00:50.397
Seria ideal carregar
todos os itens no navio,

00:00:50.430 --> 00:00:53.410
mas o navio tem
uma capacidade máxima de peso.

00:00:53.443 --> 00:00:56.655
Portanto, quando a capacidade
do navio é alcançada,

00:00:56.689 --> 00:00:58.661
você quer parar de carregar.

00:00:58.934 --> 00:01:03.081
Para fazer isso, vamos usar
um loop for para carregar cada item

00:01:03.115 --> 00:01:07.380
e acompanhar o peso de todos os itens
que carregamos até o momento.

00:01:07.413 --> 00:01:10.503
Aqui verificamos se o peso total
da carga do navio

00:01:10.537 --> 00:01:15.232
atinge sua capacidade máxima de 100
com cada adição de carga.

00:01:15.505 --> 00:01:16.626
Em caso afirmativo,

00:01:16.660 --> 00:01:19.261
usamos uma instrução break
para interromper o carregamento.

00:01:19.294 --> 00:01:23.158
Se não, carregamos o próximo item
e adicionamos seu peso.

00:01:23.365 --> 00:01:25.643
Aqui está o que acabamos
de carregar.

00:01:25.676 --> 00:01:27.202
Isso não é bom.

00:01:27.236 --> 00:01:30.508
O navio está seriamente acima
do limite de peso de 100.

00:01:30.542 --> 00:01:34.244
A instrução break nos impediu
de colocar todos os itens no navio,

00:01:34.278 --> 00:01:37.430
mas ainda assim ultrapassamos
o limite em 111.

00:01:38.777 --> 00:01:41.247
É difícil ver
o que deu errado.

00:01:41.281 --> 00:01:43.423
Uma estratégia
que podemos usar

00:01:43.457 --> 00:01:46.158
é adicionar instruções print
no código.

00:01:46.192 --> 00:01:49.709
Essa é uma técnica muito útil,
que pode nos dar uma ideia

00:01:49.743 --> 00:01:53.640
sobre o que acontece no código
quando é executado passo a passo.

00:01:53.673 --> 00:01:56.982
Ter instruções print
que forneçam contexto

00:01:57.016 --> 00:02:00.791
realmente pode nos ajudar
a entender o que deu errado aqui.

00:02:01.098 --> 00:02:02.178
Aqui temos o loop

00:02:02.212 --> 00:02:04.018
com instruções de depuração
adicionadas.

00:02:04.051 --> 00:02:05.766
A depuração é o processo

00:02:05.800 --> 00:02:08.938
que identifica e remove erros
no código.

00:02:08.972 --> 00:02:13.512
Aqui, podemos ver que não paramos
até o peso ultrapassar 100,

00:02:13.545 --> 00:02:17.396
quando na verdade, devemos parar
antes que o item seja adicionado.

00:02:17.430 --> 00:02:21.270
Além disso, podemos ver
que os queijos ainda poderiam caber

00:02:21.304 --> 00:02:23.636
se a máquina não fosse
adicionada.

00:02:23.669 --> 00:02:26.156
Isso nos leva
a outra instrução.

00:02:26.190 --> 00:02:29.546
Às vezes, em vez de sair
completamente do loop,

00:02:29.579 --> 00:02:31.474
haverá momentos
em que vamos querer

00:02:31.508 --> 00:02:33.893
simplesmente ignorar
uma iteração do loop.

00:02:33.926 --> 00:02:37.508
Nesse caso, usaríamos
a palavra-chave "continue".

00:02:37.821 --> 00:02:41.309
Neste exemplo,
iteramos uma lista de alimentos

00:02:41.342 --> 00:02:44.889
e aumentamos a conta
se food for uma fruit.

00:02:45.089 --> 00:02:47.759
Aqui terminamos uma iteração

00:02:47.793 --> 00:02:50.405
se food não for encontrada
em fruit.

00:02:50.890 --> 00:02:53.738
Caso contrário, adicionamos 1
à contagem de fruit.

00:02:54.172 --> 00:02:57.300
Então, quando a food é hummus
ou torrada neste loop,

00:02:57.572 --> 00:02:59.897
o resto do loop
é completamente ignorado.

