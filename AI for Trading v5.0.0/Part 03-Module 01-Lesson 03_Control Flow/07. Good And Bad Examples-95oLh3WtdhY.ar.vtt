WEBVTT
Kind: captions
Language: ar

00:00:03.203 --> 00:00:06.840
سنراجع بعض الأمثلة الجيدة والسيئة

00:00:06.940 --> 00:00:10.043
على التعابير المنطقية
المستخدمة في عبارات "if".

00:00:10.143 --> 00:00:13.480
مع أن كلمة "true"
هي تعبير منطقي أو Boolean صحيح ومقبول،

00:00:13.580 --> 00:00:18.685
إلا أنها ليست مفيدة كشرط
بما أن قيمتها ستكون دائماً صواب أو "true".

00:00:18.785 --> 00:00:21.488
لذا سيتم تشغيل التعليمات البرمجية
المدرجة في المستوى الأدنى دائماً.

00:00:21.588 --> 00:00:25.859
وبالمثل، لا ينبغي لك
تشغيل شرط "If false" أيضاً،

00:00:25.959 --> 00:00:29.363
لأن الشرط في تعبير "if" لن يتحقق أبداً.

00:00:29.463 --> 00:00:33.433
في هذا المثال،
تعبير "is_cold or not is_cold"

00:00:33.534 --> 00:00:35.836
ستكون نتيجة تقييمه دائماً صواب أو "true".

00:00:35.936 --> 00:00:39.239
إذا كانت كان الجو بارداً، فستكون قيمة
"is_cold" صواب أو "true"،

00:00:39.339 --> 00:00:43.010
وإذا لم يكن الجو بارداً، فستكون قيمة
"not is_cold" هي صواب أو "true".

00:00:43.110 --> 00:00:47.948
لا فائدة لهذا التعبير كشرط لأنه سيتم
تشغيل الكود في المستوى الأدنى دائماً.

00:00:48.048 --> 00:00:50.751
هذا الكود مقبول في لغة Python،

00:00:50.851 --> 00:00:55.022
لكنه لا يُعتبر تعبير Boolean منطقي،
وإن كان يبدو كذلك.

00:00:55.122 --> 00:00:58.292
السبب هو أن التعبير الموجود
على يمين عامل التشغيل "or"

00:00:58.392 --> 00:01:01.895
ليس تعبيراً منطقياً،
وإنما سلسلة نصيّة أو string.

00:01:01.995 --> 00:01:04.831
سنناقش لاحقاً ما يحدث عند استخدامك

00:01:04.932 --> 00:01:09.136
لكائن غير بوليني أو منطقي
بدلاً من تعبير منطقي.

00:01:09.236 --> 00:01:11.004
يحتاج الأمر إلى إضافة بضعة حروف،

00:01:11.104 --> 00:01:14.675
لكن الكود الآن تعبير منطقي لا لبس فيه.

00:01:14.775 --> 00:01:21.181
يتحقق التعبيران على كلا جانبي
عامل التشغيل المنطقي "or" من شرط ما.

00:01:21.281 --> 00:01:23.250
هذا شرط مقبول،

00:01:23.350 --> 00:01:26.553
لكننا نستطيع التعبير عنه
بشكل أكثر إيجازاً ووضوحاً.

00:01:26.653 --> 00:01:30.123
تعبير "is_cold"
هو تعبير منطقي "boolean" بحد ذاته.

00:01:30.224 --> 00:01:32.593
لذا، نستطيع جعل قراءة الكود أسهل

00:01:32.693 --> 00:01:35.495
عن طريق استخدام المتغير ذاته
بدلاً من التعبير الكامل.

00:01:35.596 --> 00:01:38.665
إذا أردت التأكد مما إذا كان قيمة
تعبير منطقي هي خطأ أو "false"،

00:01:38.765 --> 00:01:41.268
يمكنك استخدام عامل التشغيل "not".

00:01:41.368 --> 00:01:45.339
لنلخص الدروس المستفادة من هذه الأمثلة.

00:01:45.439 --> 00:01:48.041
"true" و"false" كلاهما تعبير منطقي،

00:01:48.141 --> 00:01:51.979
ولكنه من غير المنطقي
استخدام "if true" أو "if false".

00:01:52.079 --> 00:01:57.150
تحمل عوامل التشغيل المنطقية
"and" و"or" و"not" معان محددة

00:01:57.251 --> 00:02:01.288
لا تتطابق تماماً
مع معانيها في اللغة الإنجليزية العادية.

00:02:01.388 --> 00:02:06.593
تأكد من أن تعابيرك المنطقية
يتم تقييمها بالطريقة التي تتوقعها.

00:02:06.693 --> 00:02:12.165
لا تقارن متغيراً ذا قيمة منطقية أو boolean
باستخدام "true =" أو"false ="،

00:02:12.266 --> 00:02:17.204
فهذه المقارنة غير ضرورية
بما أن المتغير هو تعبير منطقي بحد ذاته.

