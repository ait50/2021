WEBVTT
Kind: captions
Language: ar

00:00:02.636 --> 00:00:06.006
التعابير الشرطية التي استخدمناها حتى الآن،

00:00:06.106 --> 00:00:10.043
كانت تعابير منطقية
ناتج تقييمها هو كائن منطقي،

00:00:10.143 --> 00:00:12.846
إما صواب أي true وإما خطأ أي false.

00:00:12.946 --> 00:00:17.584
إذا وضعنا كائناً آخر غير منطقي في عبارة if،

00:00:17.684 --> 00:00:20.454
فستتحقق لغة Python
من قيمته من حيث الصواب والخطأ

00:00:20.554 --> 00:00:24.424
وتستند إلى ذلك في اتخاذ قرار حول تنفيذ أو
عدم تنفيذ الكود الذي في المستوى الأدنى.

00:00:24.525 --> 00:00:29.763
هنا، التعبير الشرطي هو متغيّر يحتوي
على عدد صحيح ونتيجة تقييمه هي true.

00:00:29.863 --> 00:00:32.266
تعدد وثائق لغة Python

00:00:32.366 --> 00:00:36.336
جميع الكائنات التي تعتبر خاطئة
أو false في هذه الحالة.

00:00:36.436 --> 00:00:42.209
أي شيء غير مدرج على أن قيمة الصواب له
هي false سيُعامل معاملة الصواب true.

00:00:42.309 --> 00:00:48.315
في هذا الكود، يحمل المتغير errors
القيمة true لأنه عدد غير صفري،

00:00:48.415 --> 00:00:51.084
لذا يتم طباعة رسالة الخطأ.

00:00:51.185 --> 00:00:54.955
هذه طريقة جميلة لكتابة عبارة "if" موجزة.

00:00:55.055 --> 00:00:58.659
وبالمثل فإنه في هذا المثال
الذي رأيتموه سابقاً،

00:00:58.759 --> 00:01:03.964
ستكون نتيجة تقييم السلسلة النصيّة في الجزء
الثاني من هذا التعبير الشرطي هي true.

00:01:04.064 --> 00:01:07.201
أي أن ناتج تقييم هذه العبارة
سيكون دائماً هو true،

00:01:07.301 --> 00:01:11.271
بغض النظر عن القيمة المخزنة
داخل المتغيّر weather.

00:01:11.371 --> 00:01:14.608
وفي المقابل فإن ناتج تقييم هذا التعبير
سيكون true

00:01:14.708 --> 00:01:16.877
إذا كان المتغيّر weather يحمل السلسلة snow،

00:01:16.977 --> 00:01:22.082
وسيكون ناتج تقييمه false إذا كان
المتغيّر weather يحمل أي سلسلة نصية أخرى.

00:01:22.182 --> 00:01:24.551
إلا أن هذين النوعين من التعابير الشرطية

00:01:24.651 --> 00:01:28.055
ليسا معروفين على نطاق واسع
أو شائعي الاستخدام.

