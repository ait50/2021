WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.559
我们有多种办法可以访问 DataFrame 里的元素

00:00:04.559 --> 00:00:08.375
总地来说 我们可以用行标签和列标签

00:00:08.375 --> 00:00:12.925
来访问行、列和个别元素

00:00:12.925 --> 00:00:14.839
来看些例子

00:00:14.839 --> 00:00:18.164
这是我们在上一个视频里创建的 DataFrame 

00:00:18.164 --> 00:00:21.609
像这样用列标签 我们就可以访问 bikes 一列了

00:00:21.609 --> 00:00:27.269
而输入一个列标签列表 我们就可以访问多个列了

00:00:27.269 --> 00:00:31.195
我们可以用行索引标签来访问某一行

00:00:31.195 --> 00:00:35.034
也可以像这样访问某一行、某一列的某个值

00:00:35.034 --> 00:00:39.729
注意 在访问 DataFrame 的某个元素时

00:00:39.729 --> 00:00:41.604
比如上一个例子

00:00:41.604 --> 00:00:44.224
你应该先写列标签

00:00:44.225 --> 00:00:45.785
然后才是行标签

00:00:45.784 --> 00:00:49.769
如果你先写了行标签 代码就会出错

00:00:49.770 --> 00:00:54.575
我们也可以修改 DataFrame 为其添加行和列

00:00:54.575 --> 00:00:59.275
假设我们想给 DataFrame 添加一个名为 shirts 的列

00:00:59.274 --> 00:01:01.500
为此我们可以先像这样

00:01:01.500 --> 00:01:05.344
为该列定义两个商店的存货量

00:01:05.344 --> 00:01:08.929
这样 DataFrame 末端就会添加一个新列了

00:01:08.930 --> 00:01:11.155
要添加新列

00:01:11.155 --> 00:01:15.159
我们也可以对 DataFrame 的其它列进行算术运算

00:01:15.159 --> 00:01:18.329
比如 我们可以创建一个叫 suits (套装) 的新列

00:01:18.329 --> 00:01:22.614
只需计算列 shirts 和 pants 的总和即可

00:01:22.614 --> 00:01:24.569
假设现在你开了一家新店

00:01:24.569 --> 00:01:28.934
想在 DataFrame 中加一行

00:01:28.935 --> 00:01:31.240
要给 DataFrame 添加行

00:01:31.239 --> 00:01:35.074
首先要为该行新建一个 DataFrame 

00:01:35.075 --> 00:01:38.000
再将其追加给原 DataFrame 

00:01:38.000 --> 00:01:39.754
我们来看具体操作

00:01:39.754 --> 00:01:41.929
这个字典记录了新商店的物品

00:01:41.930 --> 00:01:45.145
我们会用该字典来创建 DataFrame 

00:01:45.144 --> 00:01:50.759
现在我们可以用方法 append 将这一行追加给 DataFrame store_items 了

00:01:50.760 --> 00:01:52.945
追加后

00:01:52.944 --> 00:01:55.939
各列会按字母顺序排列

00:01:55.939 --> 00:01:59.289
我们也可以选择 DataFrame 里原有的数据

00:01:59.290 --> 00:02:02.800
从而给 DataFrame 添加新列

00:02:02.799 --> 00:02:08.659
假设你要给 stores 2 和 3 添加新的手表库存

00:02:08.659 --> 00:02:12.995
所以你要给 DataFrame 添加一个名为 new watches 的列

00:02:12.995 --> 00:02:15.039
假设你希望新的手表库存

00:02:15.039 --> 00:02:19.479
和已有的手表库存一样多

00:02:19.479 --> 00:02:22.949
由于我们只想增加 stores 2 和 3 的库存

00:02:22.949 --> 00:02:24.984
所以我们可以像这样使用索引

00:02:24.985 --> 00:02:30.185
我们也可以把新列插入 DataFrame 的任意位置

00:02:30.185 --> 00:02:33.890
方法 insert 需要指定插入位置

00:02:33.889 --> 00:02:37.054
标签以及我们想添加的列的数据

00:02:37.055 --> 00:02:42.290
我们来用这个方法在 suits 列之前增加一行名为 shoes 的列

00:02:42.289 --> 00:02:47.344
第一个参数为 loc 也就是位置 我们设为 5

00:02:47.344 --> 00:02:50.715
0、1、2、3、4、5

00:02:50.715 --> 00:02:54.780
因此我们会在 watches 列前插入 shoes 列

00:02:54.780 --> 00:02:57.259
第二个参数是标签

00:02:57.259 --> 00:02:59.120
最后一个是数据

00:02:59.120 --> 00:03:01.909
除了添加行和列外

00:03:01.909 --> 00:03:03.349
我们还可以删除行和列

00:03:03.349 --> 00:03:06.620
为此 我们可以用方法 pop 和 drop

00:03:06.620 --> 00:03:10.560
方法 pop 可以删除列

00:03:10.560 --> 00:03:16.395
而使用关键字 axis 方法 drop 不仅可以删除列 还可以删除行

00:03:16.395 --> 00:03:18.159
来看些例子

00:03:18.159 --> 00:03:24.060
我们可以用专门删除列的方法 pop 来删除 new_watches 列

00:03:24.060 --> 00:03:28.509
现在 我们用 drop 来删除 watches 和 shoes 列

00:03:28.509 --> 00:03:32.939
使用该方法删除列时 只需将关键字 axis 设为 1 即可

00:03:32.939 --> 00:03:35.859
还是用这个方法

00:03:35.860 --> 00:03:40.420
把 axis 设为 0 我们就可以删除 store 2 和 store 1  这两行了

00:03:40.419 --> 00:03:44.694
有时候我们需要修改行标签和列标签

00:03:44.694 --> 00:03:49.949
我们来用方法 rename 把 bikes 列的标签改为 hats

00:03:49.949 --> 00:03:56.750
该方法接受一个字典 字典以原标签为键 以新标签为值

00:03:56.750 --> 00:04:00.610
可以看到 bikes 已经改成 hats 了

00:04:00.610 --> 00:04:05.060
现在 用方法 rename 来更改行标签

00:04:05.060 --> 00:04:10.344
我们可以像这样把索引标签 store 3 改为 last store

00:04:10.344 --> 00:04:14.594
注意 这里是把参数 index (索引) 设为了字典

00:04:14.594 --> 00:04:16.394
而在上一个代码单元格中

00:04:16.394 --> 00:04:19.064
我们是把 columns (列) 设为字典的

00:04:19.064 --> 00:04:24.404
我们也可以将索引设为 DataFrame 的任一列 像这样

00:04:24.404 --> 00:04:29.599
现在我们就是用 pants 列里的值作为行索引标签了

