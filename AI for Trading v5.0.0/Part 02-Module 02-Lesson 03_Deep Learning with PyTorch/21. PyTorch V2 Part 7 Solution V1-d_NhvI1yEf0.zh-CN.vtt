WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.665
欢迎回来

00:00:01.665 --> 00:00:07.305
下面说说我是怎么加载图像数据的

00:00:07.305 --> 00:00:11.910
练习的要求是定义一些转换

00:00:11.910 --> 00:00:14.505
使用 ImageFolder 加载实际数据集

00:00:14.505 --> 00:00:17.790
然后使用 torch.utils.DataLoader 类变成 dataloader

00:00:17.790 --> 00:00:21.510
这里涉及到了几个转换方式

00:00:21.510 --> 00:00:27.855
首先将图像变成 255 x 255 正方形

00:00:27.855 --> 00:00:32.430
即使图像是长方形

00:00:32.430 --> 00:00:36.630
也会变成正方形 每边有 255 个像素

00:00:36.630 --> 00:00:39.135
第一个转换是 resize

00:00:39.135 --> 00:00:44.240
resize 将图像变成正方形 每边有 255 个像素

00:00:44.240 --> 00:00:47.120
即使原始图像是长方形

00:00:47.120 --> 00:00:49.735
它也会将图像变成正方形

00:00:49.735 --> 00:00:53.535
然后调用 CenterCrop 并传入 224

00:00:53.535 --> 00:00:59.465
表示在图像中心裁剪出正方形 每边是 224 像素

00:00:59.465 --> 00:01:04.285
然后转换为可以传入网络里的张量

00:01:04.285 --> 00:01:06.080
定义好 transform 后

00:01:06.080 --> 00:01:09.440
将 transform 传入这个 ImageFolder

00:01:09.440 --> 00:01:13.720
并传入数据集的路径 从而创建一个 dataset 对象

00:01:13.720 --> 00:01:15.090
然后将 dataset 对象

00:01:15.090 --> 00:01:17.070
传入 DataLoader

00:01:17.070 --> 00:01:21.640
返回一个生成器 我们可以从中获取图像和标签

00:01:21.640 --> 00:01:26.295
将批次大小设为 32 并将 shuffle 设为 True

00:01:26.295 --> 00:01:31.010
这样的话 

00:01:31.010 --> 00:01:32.325
每次遍历生成器

00:01:32.325 --> 00:01:36.010
它将随机重排图像和标签

00:01:36.010 --> 00:01:37.860
加载下 效果是这样的

00:01:37.860 --> 00:01:40.220
这是一个小狗图像

00:01:40.220 --> 00:01:45.020
这里需要为训练数据和测试数据定义转换

00:01:45.020 --> 00:01:46.730
正如之前提到的

00:01:46.730 --> 00:01:50.090
对于训练数据 你通常需要执行数据增强步骤

00:01:50.090 --> 00:01:51.680
也就是旋转

00:01:51.680 --> 00:01:53.690
调整大小 翻转 等等

00:01:53.690 --> 00:01:58.810
从而创建一个模拟数据集 它包含的图像要比实际多很多

00:01:58.810 --> 00:02:01.265
这么做首先有助于用更多数据训练网络

00:02:01.265 --> 00:02:06.865
其次 使网络能够泛化到不在训练集中的图像

00:02:06.865 --> 00:02:08.980
这是我的转换

00:02:08.980 --> 00:02:12.490
首先随机旋转 30 度

00:02:12.490 --> 00:02:15.140
朝着任一方向旋转 30 度

00:02:15.140 --> 00:02:17.890
然后调用 RandomResizeCrop()

00:02:17.890 --> 00:02:21.545
即随机调整图像大小

00:02:21.545 --> 00:02:26.000
然后从中心裁剪出大小为 224 个像素的正方形

00:02:26.000 --> 00:02:29.090
裁剪之后 调用 RandomHorizontalFlip()

00:02:29.090 --> 00:02:33.150
表示水平翻转 然后更改为张量

00:02:33.150 --> 00:02:36.500
测试转换和前面的差不多

00:02:36.500 --> 00:02:40.205
大小调整为 255 像素 然后从中心裁剪出 224 像素的图像

00:02:40.205 --> 00:02:42.155
最后变成张量

00:02:42.155 --> 00:02:45.860
对于训练数据和测试数据

00:02:45.860 --> 00:02:51.560
传入数据路径和转换

00:02:51.560 --> 00:02:52.790
从图像文件夹里加载数据

00:02:52.790 --> 00:02:56.825
将加载的数据放入数据加载器里 从而从数据集中加载数据

00:02:56.825 --> 00:03:02.010
看看训练加载器里的数据 是这样的

00:03:02.010 --> 00:03:07.600
看看测试加载器里的数据 是这样的

