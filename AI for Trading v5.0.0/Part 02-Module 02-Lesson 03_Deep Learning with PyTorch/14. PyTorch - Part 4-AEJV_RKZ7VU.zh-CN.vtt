WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.419
欢迎回来 在这个 notebook 中

00:00:03.419 --> 00:00:08.724
你将建立自己的神经网络 从而对服装图像进行分类

00:00:08.724 --> 00:00:10.919
我在上一段视频中讲过

00:00:10.919 --> 00:00:14.099
目前而言 MNIST 实际是一个非常普通的数据集

00:00:14.099 --> 00:00:18.914
神经网络获得非常高的准确性 是非常简单的事情

00:00:18.914 --> 00:00:21.625
不过现在 你将使用 Fashion-MNIST

00:00:21.625 --> 00:00:24.179
它是 MNIST 的简单替代品

00:00:24.179 --> 00:00:26.820
我们有 28*28 个灰度图像

00:00:26.820 --> 00:00:28.199
只不过全部是服装

00:00:28.199 --> 00:00:31.903
类的数量多得多

00:00:31.903 --> 00:00:33.494
因此问题

00:00:33.494 --> 00:00:37.019
难得多 需要对 T 恤

00:00:37.020 --> 00:00:38.280
裤子 毛衣

00:00:38.280 --> 00:00:41.219
和鞋子进行分类 而不是手写数字

00:00:41.219 --> 00:00:45.644
所以这是一个更好的数据集表示 你会在实践中用到

00:00:45.645 --> 00:00:50.330
请你建立一个网络 并对其进行训练

00:00:50.329 --> 00:00:53.039
可以在这里定义网络架构

00:00:53.039 --> 00:00:56.359
在这里创建网络

00:00:56.359 --> 00:00:59.884
定义条件和优化器 然后编写训练完整遍历的代码

00:00:59.884 --> 00:01:03.729
建立和训练网络之后

00:01:03.729 --> 00:01:05.310
可以测试网络

00:01:05.310 --> 00:01:08.030
可以进行前向传播遍历 获得对数几率

00:01:08.030 --> 00:01:11.530
计算类的概率 以及网络的输出

00:01:11.530 --> 00:01:15.049
然后从测试集中传入其中一个图像

00:01:15.049 --> 00:01:19.519
检验网络是否能正确预测

00:01:19.519 --> 00:01:22.189
如需了解我的解决方案 请参见下一个 notebook 即第五部分

00:01:22.189 --> 00:01:25.200
我在下一段视频中也会介绍 稍后见

