WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.115
处理数据的形状之后

00:00:02.115 --> 00:00:05.560
我们需要调整数据并传入网络中

00:00:05.560 --> 00:00:08.970
在对于文本中的每个字词使用 skip-gram 结构时

00:00:08.970 --> 00:00:12.480
我们都需要定义上下文窗口（大小为 C）

00:00:12.480 --> 00:00:16.430
然后获取窗口中的所有字词

00:00:16.430 --> 00:00:17.765
窗口是指时间窗口

00:00:17.765 --> 00:00:22.185
例如给定输入字词的前两个字词和后两个字词

00:00:22.185 --> 00:00:25.380
我将窗口大小定义为 C

00:00:25.380 --> 00:00:29.585
而不是具体的前两个字词和后两个字词

00:00:29.585 --> 00:00:32.505
下面这段话摘自 Mikolov 的 Word2Vec 论文

00:00:32.505 --> 00:00:34.890
"Since the more distant words are usually less

00:00:34.890 --> 00:00:37.410
related to the current word than those close to it,

00:00:37.410 --> 00:00:39.690
we give less weight to the distant words by sampling

00:00:39.690 --> 00:00:42.150
less from those words in our training examples.

00:00:42.150 --> 00:00:43.885
If we choose C = 5,

00:00:43.885 --> 00:00:45.195
for each training word,

00:00:45.195 --> 00:00:48.745
we'll randomly select a number R in range [1 : C],

00:00:48.745 --> 00:00:51.590
and then use R words from history and R words

00:00:51.590 --> 00:00:54.885
from the future of the current word as correct labels."

00:00:54.885 --> 00:00:58.130
这段话的意思是我们不能选择太大的窗口

00:00:58.130 --> 00:01:01.910
因为窗口太大的话 上下文就不相关了

00:01:01.910 --> 00:01:04.370
换句话说 好的上下文字词通常是

00:01:04.370 --> 00:01:07.415
最靠近当前字词的字词 而不是离得很远的字词

00:01:07.415 --> 00:01:11.090
我们在定义上下文时 希望引入随机性

00:01:11.090 --> 00:01:14.175
如果将上下文窗口的大小 C 设为 5

00:01:14.175 --> 00:01:18.465
那么我们将创建一个范围 R 它是从 1 到 5 的随机整数

00:01:18.465 --> 00:01:21.835
假设 R = 2

00:01:21.835 --> 00:01:24.800
那么上下文是

00:01:24.800 --> 00:01:27.920
目标字词前后的两个字词

00:01:27.920 --> 00:01:29.750
举个例子

00:01:29.750 --> 00:01:34.410
假设我对这个列表中索引 2处的数字 741 感兴趣

00:01:34.410 --> 00:01:37.070
如果 R 随机设为 2

00:01:37.070 --> 00:01:40.120
那么我们将获取该数字前后的两个标记

00:01:40.120 --> 00:01:45.190
请写一个函数 该函数需要返回这样的上下文字词列表

00:01:45.190 --> 00:01:47.270
该函数叫做 get_target()

00:01:47.270 --> 00:01:49.365
输入参数为字词 ID 列表

00:01:49.365 --> 00:01:50.745
目标字词的索引

00:01:50.745 --> 00:01:52.610
以及上下文窗口的大小

00:01:52.610 --> 00:01:56.915
如果从随机范围 R 中获取字词

00:01:56.915 --> 00:01:59.060
而不是从更大的范围 C 中获取字词

00:01:59.060 --> 00:02:01.700
那么更有可能获得紧挨当前字词的字词

00:02:01.700 --> 00:02:05.070
并且不太可能获得离当前字词很远的字词

00:02:05.070 --> 00:02:08.915
这样我们就有机会使用更靠近目标字词的上下文字词训练网络

00:02:08.915 --> 00:02:13.015
这些字词很有可能与当前字词关系更紧密

00:02:13.015 --> 00:02:15.745
你需要编写这个函数

00:02:15.745 --> 00:02:17.905
请注意几个特殊情况

00:02:17.905 --> 00:02:20.630
如果传入的索引是 0

00:02:20.630 --> 00:02:23.300
或者往前数的字词数量不够

00:02:23.300 --> 00:02:27.505
那么上下文可以从传入字词列表的开头开始

00:02:27.505 --> 00:02:30.710
你可以在这个单元格中测试你的实现代码

00:02:30.710 --> 00:02:33.770
接下来我们将使用该函数批处理数据

00:02:33.770 --> 00:02:36.390
因此一定要正确实现该函数哟

00:02:36.390 --> 00:02:38.875
如果遇到问题或想参考答案

00:02:38.875 --> 00:02:41.000
请观看下个视频

