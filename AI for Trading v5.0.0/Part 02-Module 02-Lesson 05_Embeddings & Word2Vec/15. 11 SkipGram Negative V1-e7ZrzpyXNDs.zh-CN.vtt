WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.310
好的为了定义更高效的 Word2Vec skip-gram 模型

00:00:02.310 --> 00:00:05.730
我们需要完成两项任务

00:00:05.730 --> 00:00:09.885
我将这个模型称为 SkipGramNeg 表示包含负采样功能

00:00:09.885 --> 00:00:13.735
参数包括词汇表和嵌入维度

00:00:13.735 --> 00:00:17.110
还包括噪点分布的参数

00:00:17.110 --> 00:00:20.470
Ok首先 我们需要定义两个嵌入层

00:00:20.470 --> 00:00:22.955
一个针对输入字词 一个针对输出字词

00:00:22.955 --> 00:00:26.235
称之为 in_embed 和 out_embed

00:00:26.235 --> 00:00:27.970
请定义这两个层级

00:00:27.970 --> 00:00:31.190
它们会接受输入或输出目标

00:00:31.190 --> 00:00:35.225
并返回一个维度为 n_embed 的嵌入向量

00:00:35.225 --> 00:00:38.390
建议使用范围是 -1 - 1 的均匀分布

00:00:38.390 --> 00:00:41.770
来初始化这些层级的权重

00:00:41.770 --> 00:00:44.130
我们来看看损失函数

00:00:44.130 --> 00:00:47.090
在定义负采样损失时

00:00:47.090 --> 00:00:49.860
这个损失将接受几个输入参数

00:00:49.860 --> 00:00:53.335
肯定会接受输入字词嵌入 vwi

00:00:53.335 --> 00:00:56.565
还会接受正确输出字词嵌入 uw0

00:00:56.565 --> 00:01:01.355
以及几个错误嵌入 uwi

00:01:01.355 --> 00:01:03.480
你需要在模型定义部分

00:01:03.480 --> 00:01:05.075
定义三个不同的 forward 函数

00:01:05.075 --> 00:01:08.405
从而创建这些嵌入

00:01:08.405 --> 00:01:11.910
第一个 forward_input 应该返回输入嵌入

00:01:11.910 --> 00:01:15.785
即经过输入嵌入层的输入字词

00:01:15.785 --> 00:01:18.260
然后是 forward_output 函数

00:01:18.260 --> 00:01:20.975
它应该返回传入的输出字词的输出向量

00:01:20.975 --> 00:01:23.990
最后是 forward_noise 函数 它比较特殊

00:01:23.990 --> 00:01:26.420
它的参数包括批次大小

00:01:26.420 --> 00:01:29.535
以及进行负采样的噪点样本数量

00:01:29.535 --> 00:01:34.075
此函数首先从传入的噪点分布中获取噪点样本

00:01:34.075 --> 00:01:35.800
如果没有传入分布

00:01:35.800 --> 00:01:38.125
则默认为均匀分布

00:01:38.125 --> 00:01:40.370
使用 torch.multinomial 获取噪点字词样本

00:01:40.370 --> 00:01:45.440
并获得 batch_size*n_samples 个值

00:01:45.440 --> 00:01:49.290
这行代码将字词移到 GPU 上（如果有 GPU 的话）

00:01:49.290 --> 00:01:52.640
要完成这个函数 你需要将这些字词

00:01:52.640 --> 00:01:56.215
传入输出嵌入层并获得相应的嵌入

00:01:56.215 --> 00:01:58.700
获得噪点嵌入后

00:01:58.700 --> 00:02:01.890
应该将这些嵌入变形为

00:02:01.890 --> 00:02:04.540
(batch_size, n_samples, n_embed) 的维度

00:02:04.540 --> 00:02:06.210
好的 请完成这些 forward 函数

00:02:06.210 --> 00:02:09.540
使每个 forward 函数都返回正确的嵌入

00:02:09.540 --> 00:02:11.430
完成这道练习后

00:02:11.430 --> 00:02:13.580
就可以继续训练模型了

00:02:13.580 --> 00:02:16.550
接下来我将介绍我的实现方式

00:02:16.550 --> 00:02:20.000
并演示我是如何定义自定义负采样损失的

