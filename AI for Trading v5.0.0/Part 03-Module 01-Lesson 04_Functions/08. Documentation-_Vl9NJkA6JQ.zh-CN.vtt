WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.660
函数的关键优势之一是

00:00:03.660 --> 00:00:07.560
可以将程序拆分为更小的部分

00:00:07.559 --> 00:00:13.567
使代码更容易编写和阅读

00:00:13.567 --> 00:00:16.649
因为这些代码段（即函数）可以重复使用

00:00:16.649 --> 00:00:20.234
如果程序需要计算多个圆柱体的体积

00:00:20.234 --> 00:00:23.785
它可以多次调用 cylinder_volume 函数

00:00:23.785 --> 00:00:29.070
这样比多次写出该公式简练多了

00:00:29.070 --> 00:00:35.230
函数使代码更容易读懂 因为它们设定了人类可以读懂的名称

00:00:35.229 --> 00:00:38.989
虽然圆柱体体积公式不是太复杂

00:00:38.990 --> 00:00:43.410
但是依然比精确命名的函数难懂

00:00:43.409 --> 00:00:47.444
还有一个技巧可以使函数更容易读懂

00:00:47.445 --> 00:00:51.100
即文档字符串 简称 DocString

00:00:51.100 --> 00:00:54.530
文档字符串是一种注释

00:00:54.530 --> 00:00:58.274
用于解释函数的作用以及使用方式

00:00:58.274 --> 00:01:02.489
这是一个包含文档字符串的 population_density 函数

00:01:02.490 --> 00:01:06.195
文档字符串用三个引号引起来

00:01:06.194 --> 00:01:11.589
文档字符串的第一行简要解释了函数的作用

00:01:11.590 --> 00:01:14.582
如果你觉得信息已经足够了

00:01:14.582 --> 00:01:16.780
可以在文档字符串中只提供这么多的信息

00:01:16.780 --> 00:01:20.415
一行文档字符串完全可接受

00:01:20.415 --> 00:01:25.965
如果你觉得函数比较复杂 需要更长的句子来解释

00:01:25.965 --> 00:01:29.990
可以在一行摘要后面添加更完整的段落

00:01:29.989 --> 00:01:35.949
文档字符串的下个元素是对函数参数的解释

00:01:35.950 --> 00:01:38.173
在此示例中 我们列出了参数

00:01:38.173 --> 00:01:42.359
说明参数的目的以及参数类型应该是什么

00:01:42.359 --> 00:01:47.840
最后 通常会说明函数的输出

00:01:47.840 --> 00:01:51.230
文档字符串的每个部分都是可选的

00:01:51.230 --> 00:01:55.250
但是 提供文档字符串是一个良好的编程习惯

00:01:55.250 --> 00:02:00.140
它们可以帮助你和未来的用户读懂你写的代码

00:02:00.140 --> 00:02:05.239
你可以在下面的链接中详细了解文档字符串惯例

