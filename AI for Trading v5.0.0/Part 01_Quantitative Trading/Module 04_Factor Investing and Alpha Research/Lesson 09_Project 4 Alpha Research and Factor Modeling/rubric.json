{
  "id": 1936,
  "project_id": 539,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|markdown|md|pdf|py|rmd|rst|sql|swift|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "",
  "hide_criteria": false,
  "created_at": "2018-05-30T00:11:50.420Z",
  "updated_at": "2019-06-30T11:43:42.529Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "checkmate_enabled": false,
  "checkmate_metadata": null,
  "available_for_cert_project": false,
  "classroom_node_id": 633169,
  "classroom_project_key": "bb5b86a6-04b6-484f-a844-2724314750ce",
  "language": "en-us",
  "ndkeys": [
    "nd880",
    "nd880-beta",
    "nd880-cn",
    "nd880-ent"
  ],
  "coursekeys": [],
  "sections": [
    {
      "id": 5006,
      "name": "Statistical Risk Model",
      "created_at": "2018-10-07T16:28:56.313Z",
      "updated_at": "2018-10-07T16:29:31.509Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 1936,
      "rubric_items": [
        {
          "id": 14493,
          "section_id": 5006,
          "passed_description": "The function `fit_pca` fits the PCA model with returns.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:29:31.706Z",
          "updated_at": "2018-10-07T16:30:34.184Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Fit PCA",
          "exceedable": false
        },
        {
          "id": 14494,
          "section_id": 5006,
          "passed_description": "The function `factor_betas` gets the factor betas from the PCA model.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:30:34.380Z",
          "updated_at": "2018-10-07T16:31:08.197Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Factor Betas",
          "exceedable": false
        },
        {
          "id": 14495,
          "section_id": 5006,
          "passed_description": "The function `factor_returns` gets the factor returns from the PCA model.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:31:08.392Z",
          "updated_at": "2018-10-07T16:31:35.632Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Factor Returns",
          "exceedable": false
        },
        {
          "id": 14496,
          "section_id": 5006,
          "passed_description": "The function `factor_cov_matrix` gets the factor covariance matrix.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:31:35.867Z",
          "updated_at": "2018-10-07T16:32:21.368Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Factor Covariance Matrix",
          "exceedable": false
        },
        {
          "id": 14497,
          "section_id": 5006,
          "passed_description": "The function `idiosyncratic_var_matrix` gets the idiosyncratic variance matrix.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:32:21.568Z",
          "updated_at": "2018-10-07T16:34:06.270Z",
          "deleted_at": null,
          "optional": false,
          "position": 4,
          "criteria": "Idiosyncratic Variance Matrix",
          "exceedable": false
        },
        {
          "id": 14498,
          "section_id": 5006,
          "passed_description": "The function `idiosyncratic_var_vector` gets the idiosyncratic variance vector.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:32:52.149Z",
          "updated_at": "2018-10-07T16:34:06.280Z",
          "deleted_at": null,
          "optional": false,
          "position": 5,
          "criteria": "Idiosyncratic variance Vector",
          "exceedable": false
        },
        {
          "id": 14499,
          "section_id": 5006,
          "passed_description": "The function `predict_portfolio_risk` gets the predicted portfolio risk.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:34:06.482Z",
          "updated_at": "2018-10-07T16:34:32.599Z",
          "deleted_at": null,
          "optional": false,
          "position": 6,
          "criteria": "Predict using the Risk Model",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5007,
      "name": "Create Alpha Factors",
      "created_at": "2018-10-07T16:34:32.804Z",
      "updated_at": "2018-10-07T16:34:46.279Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 1936,
      "rubric_items": [
        {
          "id": 14500,
          "section_id": 5007,
          "passed_description": "The function `mean_reversion_5day_sector_neutral` generates the mean reversion 5 day sector neutral factor.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:34:46.486Z",
          "updated_at": "2018-10-07T16:35:27.290Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Mean Reversion 5 Day Sector Neutral Factor",
          "exceedable": false
        },
        {
          "id": 14501,
          "section_id": 5007,
          "passed_description": "The function `mean_reversion_5day_sector_neutral_smoothed` generates the mean reversion 5 day sector neutral smoothed factor.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:35:27.486Z",
          "updated_at": "2018-10-07T16:36:08.636Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Mean Reversion 5 Day Sector Neutral Smoothed Factor",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5008,
      "name": "Evaluate Alpha Factors",
      "created_at": "2018-10-07T16:36:08.820Z",
      "updated_at": "2018-10-07T16:36:41.158Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 1936,
      "rubric_items": [
        {
          "id": 14502,
          "section_id": 5008,
          "passed_description": "The function `sharpe_ratio` gets the sharpe ratio for each factor for the entire period.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:36:41.395Z",
          "updated_at": "2018-10-07T16:37:23.903Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Sharpe Ratio of the Alphas",
          "exceedable": false
        },
        {
          "id": 14504,
          "section_id": 5008,
          "passed_description": "The student correctly mentions what would happened if you smooth the momentum factor and why.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:38:00.906Z",
          "updated_at": "2018-10-07T16:52:55.042Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "What do you think would happen if we smooth the momentum factor?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5009,
      "name": "Optimal Portfolio Constrained by Risk Model",
      "created_at": "2018-10-07T16:52:55.240Z",
      "updated_at": "2018-10-07T16:52:58.567Z",
      "deleted_at": null,
      "position": 3,
      "rubric_id": 1936,
      "rubric_items": [
        {
          "id": 14505,
          "section_id": 5009,
          "passed_description": "The function `OptimalHoldings._get_obj` returns the correct objective function.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:52:58.773Z",
          "updated_at": "2018-10-07T16:55:19.434Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Objective Function",
          "exceedable": false
        },
        {
          "id": 14506,
          "section_id": 5009,
          "passed_description": "The function `OptimalHoldings._get_constraints` returns the correct list of constraints.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:53:38.333Z",
          "updated_at": "2018-10-07T16:55:19.445Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Constraints Function",
          "exceedable": false
        },
        {
          "id": 14507,
          "section_id": 5009,
          "passed_description": "The function `OptimalHoldingsRegualization._get_obj` returns the correct objective function.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:55:19.677Z",
          "updated_at": "2018-10-07T16:56:56.549Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Optimize with a Regularization Parameter",
          "exceedable": false
        },
        {
          "id": 14508,
          "section_id": 5009,
          "passed_description": "The function `OptimalHoldingsStrictFactor._get_obj` returns the correct objective function.",
          "exceeded_description": null,
          "created_at": "2018-10-07T16:56:57.665Z",
          "updated_at": "2018-10-07T16:57:15.683Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Optimize with a Strict Factor Constraints and Target Weighting",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 539,
    "name": "Multifactor Model",
    "nanodegree_key": "nd880",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 1144,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 1,
    "created_at": "2018-10-03T21:08:49.522Z",
    "updated_at": "2020-05-31T21:15:24.078Z",
    "price": "8.0",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}