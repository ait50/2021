{
  "data": {
    "lesson": {
      "id": 587326,
      "key": "9196802e-abe7-41d1-a191-e084d6c42817",
      "title": "Time Series Modeling",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn about advanced methods for time series analysis, including ARMA, ARIMA, Kalman Filters, Particle Filters, and recurrent neural networks.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/9196802e-abe7-41d1-a191-e084d6c42817/587326/1544002167585/Time+Series+Modeling+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/9196802e-abe7-41d1-a191-e084d6c42817/587326/1544002164544/Time+Series+Modeling+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 560139,
          "key": "c1380839-d3fb-4d77-9ae7-fecdb6a24c85",
          "title": "Time Series Modeling",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c1380839-d3fb-4d77-9ae7-fecdb6a24c85",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675004,
              "key": "d2d4e961-1f21-46bb-8f29-6f4718f292d0",
              "title": "M2L4 01 Time Series Modeling V4",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "QeIu7GMZl20",
                "china_cdn_id": "QeIu7GMZl20.mp4"
              }
            }
          ]
        },
        {
          "id": 675005,
          "key": "730588a7-2920-4813-b479-ec247b5e2c0d",
          "title": "Autoregressive Models",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "730588a7-2920-4813-b479-ec247b5e2c0d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675006,
              "key": "bb0ade1c-c451-4cb8-8ed9-b153494ffaf0",
              "title": "M2L4 02 Autoregressive Models V5",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "9jE7S4b-oIU",
                "china_cdn_id": "9jE7S4b-oIU.mp4"
              }
            }
          ]
        },
        {
          "id": 560142,
          "key": "76040280-32dc-4f2d-a546-968413ace6d4",
          "title": "Moving Average Models",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "76040280-32dc-4f2d-a546-968413ace6d4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675007,
              "key": "0656ecb3-471f-4638-a4df-83314534b538",
              "title": "M2L4 03 Moving Average Models V5",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1FkCP_dwxjI",
                "china_cdn_id": "1FkCP_dwxjI.mp4"
              }
            }
          ]
        },
        {
          "id": 560144,
          "key": "95e953a7-6c63-47e2-bc9c-ae3a72f6fe8d",
          "title": "Advanced Time Series Models",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "95e953a7-6c63-47e2-bc9c-ae3a72f6fe8d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675008,
              "key": "bb822b9c-fb48-4043-8be3-9f823068dd78",
              "title": "M2L4 05 Advanced Time Series Models V5",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "cj1RCBTDog8",
                "china_cdn_id": "cj1RCBTDog8.mp4"
              }
            },
            {
              "id": 677142,
              "key": "80bf0772-941f-47ea-a9c8-c0aa4d3ef758",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Seasonal Adjustments using ARIMA (SARIMA)\nTime series data tends to have seasonal patterns.  For instance, natural gas prices may increase during winter months, when it’s used for heating homes.  Similarly, it may also increase during peak summer months, when natural gas generators are used to produce the extra electricity that is used for air conditioning.  Retail sales also has expected increases during the holiday shopping season, such as Black Friday in the US (November), and Singles’ Day in China (also in November).\n\nStocks may potentially have seasonal patterns as well. One has to do with writing off losses in order to minimize taxes.  Funds and individual investors have unrealized capital gains or losses when the stock price increases or decreases from the price at which they bought the stock.  Those capital gains or losses become “realized capital gains” or “realized capital losses” when they sell the stock.  At the end of the tax year (which may be December, but not necessarily), an investor may decide to sell their underperforming stocks in order to realize capital losses, which may potentially reduce their taxes.  Then, at the start of the next tax year, they may buy back the same stocks in order to maintain their original portfolio.  This is sometimes referred to as the “January effect.”\n\nRemoving seasonal effects can help to make the resulting time series stationary, and therefore more useful when feeding into an autoregressive moving average model.\n\nTo remove seasonality, we can take the difference between each data point and another data point one year prior.  We’ll refer to this as the “seasonal difference”.  For instance, if you have monthly data, take the difference between August 2018 and August 2017, and do the same for the rest of your data.  It’s common to take the “first difference” either before or after taking the seasonal difference.  If we took the “first difference” from the original time series, this would be taking August 2018 and subtracting July 2018.  Next, to take the seasonal difference of the first difference, this would mean taking the difference between (August 2018 - July 2018) and (August 2017 - July 2017).\n\nYou can check if the resulting time series is stationary, and if so, run this stationary series through an autoregressive moving average model.\n\n\n### Side Note\nKendall Lo, one of the subject matter experts of our course, recommends this book: “Way of the Turtle: The Secret Methods that Turned Ordinary People into Legendary Traders”.  The book is about how a successful investor trained his students (his “turtles”) to follow his trend-following trading strategy.  The book illustrates the concepts of using trading signals, back-testing, position sizing, and risk management.\nThe story is also summarized in this article [Turtle Trading: A Market Legend](https://www.investopedia.com/articles/trading/08/turtle-trading.asp)\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 694233,
          "key": "3a4eb4c9-082d-43b9-a86a-b5b1ad300def",
          "title": "Exercise: ARMA and ARIMA",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3a4eb4c9-082d-43b9-a86a-b5b1ad300def",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 694234,
              "key": "b57e10af-1695-4d4c-a1da-136405746848",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewiqkqmosvvyo",
              "pool_id": "jupyter",
              "view_id": "jupyter-8j5d33jvmh4",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/autoregression_quiz.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 560146,
          "key": "991af487-32f2-4049-837d-dc7345f986f0",
          "title": "Kalman Filter",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "991af487-32f2-4049-837d-dc7345f986f0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675009,
              "key": "77722fd2-7a65-4379-add2-1ba152bf40c4",
              "title": "M2L4 07 Kalman Filter V4",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "CLJhgfMI4Ho",
                "china_cdn_id": "CLJhgfMI4Ho.mp4"
              }
            },
            {
              "id": 560188,
              "key": "9e1c5a4d-f015-45b1-9a8d-c0a2db067da2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Kalman Filters for Pairs Trading\n\nOne way Kalman Filters are used in trading is for choosing the hedge ratio in pairs trading.  We will get into pairs trading and hedge ratios in lesson 13 of this module, but for now, imagine that there’s a magic number that you can estimate from a model, such as a regression model, based on time series data of two stocks.  \n\nEvery day when you get another data point, you can run another regression and get an updated estimate for this number.  So do you take the most recent number every time?  Do you take a moving average?  If so, how many days will you average together?  Will you give each day the same weight when taking the average?  \n\nAll of these kinds of decisions are meant to smooth an estimate of a number that is based on noisy data.  The Kalman Filter is designed to provide this estimate based on both past information and new observations.  So instead of taking a moving average of this estimate, we can use a Kalman Filter.\n\nThe Kalman Filter takes the time series of two stocks, and generate its “smoothed” estimate for this magic number at each new time period.  Kalman Filters are often used in control systems for vehicles such as cars, planes, rockets, and robots.  They’re similar to the application in pairs trading because they take noisy indirect measurements at each new time period in order to estimate state variables (location, direction, speed) of a system .  \n\nKalman Filters are not used in this module’s project, but if you want to learn more, please check out the extracurricular content section: \"Machine Learning\": Introduction to Kalman Filters.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 675010,
          "key": "fb51c68e-0933-4c6d-9da9-95da06611afb",
          "title": "Particle Filter",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "fb51c68e-0933-4c6d-9da9-95da06611afb",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675011,
              "key": "7fae0fa1-0e33-4a96-8d1f-1ddd88363ea7",
              "title": "M2L4 08 Particle Filter V4",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "4KhDUAvwI74",
                "china_cdn_id": "4KhDUAvwI74.mp4"
              }
            },
            {
              "id": 677143,
              "key": "c8ef9bd6-c82f-4869-acbd-745efa007f48",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "For an introduction to particle filters, please check out Sebastian Thrun’s lesson in the free “Intro to Artificial Intelligence” course:\n\n[lesson 16 “HMMs and Filters: Node 18 “Particle Filters”](https://classroom.udacity.com/courses/cs271/lessons/48734405/concepts/487221790923)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 560147,
          "key": "95943908-51a8-46d6-b75d-6238ceb1a556",
          "title": "Recurrent Neural Networks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "95943908-51a8-46d6-b75d-6238ceb1a556",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675012,
              "key": "b28d92ba-eb9e-478c-9f6a-9ddb27a8a549",
              "title": "M2L4 09 Recurrent Neural Networks V5",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "5cYAAHyRHDo",
                "china_cdn_id": "5cYAAHyRHDo.mp4"
              }
            },
            {
              "id": 569504,
              "key": "ced44873-84a4-4b78-97d0-d5ae7d31ca45",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Recurrent Neural Networks are useful for processing sequence data in general, and are often used for Natural Language Processing.  We will cover recurrent neural networks and natural language processing in term 2 of this program.  For an intro to neural networks, please check out the extracurricular content.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 560151,
          "key": "27671c65-8d31-4c9b-a3fb-5b25d7783dd5",
          "title": "Summary",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "27671c65-8d31-4c9b-a3fb-5b25d7783dd5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675013,
              "key": "2bf0f49f-2473-475a-bf32-7002424c5653",
              "title": "M2L4 11 Outro V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "6sheR92KUU8",
                "china_cdn_id": "6sheR92KUU8.mp4"
              }
            }
          ]
        }
      ]
    }
  }
}