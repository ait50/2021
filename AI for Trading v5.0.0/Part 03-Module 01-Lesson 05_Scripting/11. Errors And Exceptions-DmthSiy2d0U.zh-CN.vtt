WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.609
正如你在上个视频中所看到的

00:00:02.609 --> 00:00:05.730
在处理意外的输入时

00:00:05.730 --> 00:00:09.330
尝试处理每种情形会比较麻烦

00:00:09.330 --> 00:00:13.080
实际上在 Python 中有一种简单得多的处理方式

00:00:13.080 --> 00:00:18.570
下面你将学习如何使用 try 和 except 块处理错误

00:00:18.570 --> 00:00:22.644
首先 我们将详细了解 Python 中有哪些错误

00:00:22.644 --> 00:00:26.429
我们已经在这门课程中看到因为多个原因而出现的错误消息

00:00:26.429 --> 00:00:29.195
可以将这些错误分为两大类

00:00:29.195 --> 00:00:32.075
语法错误和异常

00:00:32.075 --> 00:00:35.450
当我们没有遵守正确的 Python 语法规则

00:00:35.450 --> 00:00:39.850
导致 Python 无法解析代码时 就会出现语法错误

00:00:39.850 --> 00:00:43.484
当你出现拼写错误或一开始学习 Python 时

00:00:43.484 --> 00:00:45.585
就有可能遇到这种错误

00:00:45.585 --> 00:00:48.149
在此示例中 我遇到了语法错误

00:00:48.149 --> 00:00:51.269
因为我在该字符串的末尾丢失了右引号

00:00:51.270 --> 00:00:53.325
可以从错误消息中看出这一点

00:00:53.325 --> 00:00:57.680
SyntaxError: EOL while scanning string literal

00:00:57.679 --> 00:00:58.979
另一种错误是异常

00:00:58.979 --> 00:01:04.409
在执行代码的过程中 可能会发生意外情况 这时候就会出现异常

00:01:04.409 --> 00:01:07.694
在此示例中 虽然我们的代码没有语法错误

00:01:07.694 --> 00:01:11.114
但是我们遇到了异常

00:01:11.114 --> 00:01:14.899
因为拼写为 10 的字符串并不是 int 函数的有效参数

00:01:14.900 --> 00:01:18.045
Python 中有不同类型的内置异常

00:01:18.045 --> 00:01:22.769
你可以在这里的错误消息中查看抛出了哪个异常

00:01:22.769 --> 00:01:25.694
valueError 是一种异常类型

00:01:25.694 --> 00:01:29.879
如果向内置操作或函数提供类型正确但是值不合适的参数

00:01:29.879 --> 00:01:34.539
就会发生这种异常

00:01:34.540 --> 00:01:37.300
这是另一个抛出异常的示例

00:01:37.299 --> 00:01:41.489
我们尝试引用一个尚未定义的变量名

00:01:41.489 --> 00:01:44.114
因此出现了 nameError 异常

00:01:44.114 --> 00:01:47.399
这段代码同样没有语法错误

00:01:47.400 --> 00:01:50.150
但是当 Python 执行到这行代码时

00:01:50.150 --> 00:01:53.590
无法找到这个变量的值

00:01:53.590 --> 00:01:56.530
因此抛出异常并停止运行代码

