WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.279
In Python, there are ways to handle

00:00:02.279 --> 00:00:06.504
exceptions so they don't always crush our program when they occur.

00:00:06.504 --> 00:00:10.929
Let's look back at this example that takes an input from the user.

00:00:10.929 --> 00:00:13.038
We saw that when we ran this code,

00:00:13.038 --> 00:00:17.740
it got an error when the user input something that can't be converted to an int.

00:00:17.739 --> 00:00:21.759
We can actually handle this error using a try statement.

00:00:21.760 --> 00:00:22.998
In a try statement,

00:00:22.998 --> 00:00:26.310
the code inside the try block is first run

00:00:26.309 --> 00:00:30.429
and if Python runs into any exceptions while it's running this block,

00:00:30.429 --> 00:00:33.323
it will jump to the code in the except block.

00:00:33.323 --> 00:00:36.460
Here if I run this code and enter the word ten,

00:00:36.460 --> 00:00:41.475
it prints, that's not a valid number and moves on to the rest of the code.

00:00:41.475 --> 00:00:44.024
The program continues to run whether or not

00:00:44.024 --> 00:00:47.350
it runs into an exception during this try block.

00:00:47.350 --> 00:00:52.594
For example, if I have a line after this try statement that prints attempted input,

00:00:52.594 --> 00:00:55.859
you'll see this is printed in both cases.

00:00:55.859 --> 00:01:00.344
If we want this code to keep running until the user inputs a valid number,

00:01:00.344 --> 00:01:03.329
we can use a while loop and break the loop if

00:01:03.329 --> 00:01:07.283
all the code in the try block successfully executes.

00:01:07.284 --> 00:01:12.160
Here, the program keeps taking in input until I enter a valid number.

00:01:12.159 --> 00:01:14.084
If I enter a valid number,

00:01:14.084 --> 00:01:17.844
this statement in the try block doesn't raise an exception.

00:01:17.844 --> 00:01:21.465
So it moves on to the next line where it breaks from the loop.

00:01:21.465 --> 00:01:23.549
However, since it breaks the loop,

00:01:23.549 --> 00:01:25.670
it never prints attempted input.

00:01:25.670 --> 00:01:30.150
If we want this last line to always run after the try statement no matter what,

00:01:30.150 --> 00:01:33.830
there is an optional component of the statement we can use.

00:01:33.829 --> 00:01:37.590
Finally, now, attempted input will be printed when

00:01:37.590 --> 00:01:41.540
the program is exiting this try statement under any conditions,

00:01:41.540 --> 00:01:43.215
whether there is a break statement,

00:01:43.215 --> 00:01:48.150
return statement or error that causes this program to crash within except block.

00:01:48.150 --> 00:01:51.405
You can read more about this in the notes below.

00:01:51.405 --> 00:01:55.765
The finally block is useful for cleaning up actions in your code.

00:01:55.765 --> 00:01:58.409
Later in the lesson, we will use this to close

00:01:58.409 --> 00:02:01.310
a file after attempting to open one in a try statement.

