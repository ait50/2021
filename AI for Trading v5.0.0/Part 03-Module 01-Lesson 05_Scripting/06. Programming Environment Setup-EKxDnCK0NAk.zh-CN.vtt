WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.980
设置编程环境的方式有很多种

00:00:01.980 --> 00:00:06.914
没有哪种方式是最正确的 哪种方式是错误的

00:00:06.915 --> 00:00:10.724
但是 如果你刚开始学习 Python 编程

00:00:10.724 --> 00:00:14.550
或许可以看看我要介绍的这种设置并熟悉相关界面

00:00:14.550 --> 00:00:16.519
这是一个文本编辑器

00:00:16.519 --> 00:00:19.390
这个编辑器称为 Atom

00:00:19.390 --> 00:00:23.440
我在下面的注释中推荐了很多其他编辑器

00:00:23.440 --> 00:00:27.145
文本编辑器与 Word 处理器截然不同

00:00:27.144 --> 00:00:28.917
因此不要弄混了

00:00:28.917 --> 00:00:33.189
需要逐行编写代码 并故意设置一些换行符和缩进

00:00:33.189 --> 00:00:38.004
这些换行符和缩进会显著改变代码的阅读和运行方式

00:00:38.005 --> 00:00:39.820
好的文本编辑器具有一些简单但是很重要的功能

00:00:39.820 --> 00:00:45.159
例如行号和语法突出显示功能

00:00:45.159 --> 00:00:49.000
可以看出 Atom 会以不同的方式

00:00:49.000 --> 00:00:52.965
根据从 Python 语言中识别的单词和对象类型突出显示一些文本

00:00:52.965 --> 00:00:57.740
语法突出显示使代码更容易读懂并且结构更清晰

00:00:57.740 --> 00:01:01.483
还可以防止出现语法错误

00:01:01.482 --> 00:01:05.149
例如 如果我在字符串末尾忘记加上引号

00:01:05.150 --> 00:01:09.395
当这行剩余部分也突出显示为字符串时 我将知道我丢失了引号

00:01:09.394 --> 00:01:11.659
Atom 知道根据 Python 使用语法突出显示功能

00:01:11.659 --> 00:01:15.734
是因为文件名之后的 .py 后缀

00:01:15.734 --> 00:01:19.000
这个后缀告诉 Atom 它正在处理的是 Python 文件

00:01:19.000 --> 00:01:22.719
你可以根据自己的样式需求自定义编辑器的很多功能

00:01:22.719 --> 00:01:27.609
我喜欢使用的一个设置是将 Tab 键的长度设为 4 个空格

00:01:27.609 --> 00:01:31.930
表示当我按下 Tab 键时 它会变成 4 个空格

00:01:31.930 --> 00:01:34.495
你还可以添加很酷的插件

00:01:34.495 --> 00:01:36.355
例如这个 Python linter

00:01:36.355 --> 00:01:39.910
它会使用 Pylint 指出我的代码中的实用功能

00:01:39.909 --> 00:01:42.189
例如 在这行

00:01:42.189 --> 00:01:45.909
pylint 显示了一条警告

00:01:45.909 --> 00:01:49.989
因为我没有遵守 PEP 8 指南 在右括号前面添加了一个空格

00:01:49.989 --> 00:01:54.750
我还添加了这个很酷的插件 使我能够在编辑器中使用终端

00:01:54.750 --> 00:01:58.349
现在我的屏幕上不止 Atom 一个窗口

00:01:58.349 --> 00:02:01.439
我有时候会使用这个终端

00:02:01.439 --> 00:02:06.719
但是通常我都喜欢打开单独的终端窗口并在里面运行脚本

00:02:06.719 --> 00:02:10.830
通常 我无法一次性写出很多代码

00:02:10.830 --> 00:02:14.862
因为会出错 我需要找到问题并调试

00:02:14.861 --> 00:02:18.060
如果有错误 当我运行脚本时 这里将显示该错误

00:02:18.060 --> 00:02:20.280
我在文本编辑器中对代码稍加修改

00:02:20.280 --> 00:02:23.759
然后再次运行脚本 看看输出结果

00:02:23.759 --> 00:02:29.134
如果我看到问题 我将尝试修正该问题 如果一切正常 我将继续往下编写

00:02:29.134 --> 00:02:34.519
我还打开了优达学城课堂 并在浏览器中 Google 一个问题后找到了一个答案

00:02:34.520 --> 00:02:38.344
通常 我需要打开浏览器以查找文档

00:02:38.344 --> 00:02:42.367
或针对遇到的 Bug 搜索解决方案

00:02:42.367 --> 00:02:46.460
从现在开始 我们建议你都以这种方式尝试编写代码

00:02:46.460 --> 00:02:52.250
在文本编辑器中将代码放入新的文件里 别忘了后缀 .py

00:02:52.250 --> 00:02:57.000
确保在终端里进入正确的目录 然后运行脚本

