WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.424
You've seen how helpful it could be to import your own modules.

00:00:04.424 --> 00:00:06.240
But what if I told you there was

00:00:06.240 --> 00:00:10.470
an entire library of built-in modules that just come with Python?

00:00:10.470 --> 00:00:13.679
This is the Python standard library.

00:00:13.679 --> 00:00:18.329
Up here, you see built-in objects we use throughout this course;

00:00:18.329 --> 00:00:22.320
like built-in functions, data types, and exceptions.

00:00:22.320 --> 00:00:26.850
Below that though, are tons of useful modules that you can import.

00:00:26.850 --> 00:00:29.609
Think of this library as a very big set of

00:00:29.609 --> 00:00:33.479
tools that you can use to help you program in Python.

00:00:33.479 --> 00:00:36.089
It provides new types of objects and

00:00:36.090 --> 00:00:39.600
functions for a range of common and specialized tasks.

00:00:39.600 --> 00:00:42.030
Other people have already written

00:00:42.030 --> 00:00:46.103
this code and put it into useful modules for you to use.

00:00:46.103 --> 00:00:50.010
Using modules from the Python standard library to

00:00:50.009 --> 00:00:55.229
easily access and use existing code gives you a lot of programming power.

00:00:55.229 --> 00:00:59.279
The Python standard library is organized into modules.

00:00:59.280 --> 00:01:02.145
Many modules are simply Python files,

00:01:02.145 --> 00:01:05.250
like the Python scripts you've already written and imported.

00:01:05.250 --> 00:01:08.439
Let's import this math module.

00:01:08.439 --> 00:01:12.739
Again, an import statement runs the code in the module.

00:01:12.739 --> 00:01:18.364
Modules typically contain a lot of definitions and usually don't show any output.

00:01:18.364 --> 00:01:20.119
Running the code will make

00:01:20.120 --> 00:01:24.320
all the modules' functions and types of objects available to use.

00:01:24.319 --> 00:01:26.644
Math has a factorial function,

00:01:26.644 --> 00:01:31.399
which finds the product of a number and all the positive integers less than it.

00:01:31.400 --> 00:01:33.830
Four times three, times two,

00:01:33.829 --> 00:01:35.704
times one is 24,

00:01:35.704 --> 00:01:38.420
so math.factorial(4) for prints 24.

00:01:38.420 --> 00:01:44.170
The Python standard library has good documentation for each of its modules,

00:01:44.170 --> 00:01:48.689
and it's a good idea to read the relevant page whenever you use one.

00:01:48.689 --> 00:01:51.914
Here's a documentation for the math module.

00:01:51.915 --> 00:01:56.460
So far, you've seen only one module in the Python standard library.

00:01:56.459 --> 00:01:58.949
It's a good one, but there are many more.

00:01:58.950 --> 00:02:04.409
If you look at the documentation for the whole of the Python standard library,

00:02:04.409 --> 00:02:07.560
modules are listed in groups based on their uses.

00:02:07.560 --> 00:02:12.150
Clicking on a name takes you to the documentation for that module,

00:02:12.150 --> 00:02:16.599
which often includes example code that you should feel free to test out.

