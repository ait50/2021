WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.589
Python 标准库中的某些模块包含大量代码

00:00:05.589 --> 00:00:07.298
为了更好地管理这些代码

00:00:07.298 --> 00:00:12.285
它们被拆分成了子模块并包含在软件包中

00:00:12.285 --> 00:00:17.144
软件包是包含子模块的模块

00:00:17.144 --> 00:00:21.614
子模块用常见的点记法表示

00:00:21.614 --> 00:00:24.359
例如 os 模块适用于处理文件系统

00:00:24.359 --> 00:00:29.879
它有一个子模块 os.path

00:00:29.879 --> 00:00:33.299
专门用来处理路径名称

00:00:33.299 --> 00:00:36.779
子模块的指定方式是

00:00:36.780 --> 00:00:41.777
软件包名称 然后是子模块名称 用点分开

00:00:41.777 --> 00:00:45.884
你可以像这样导入子模块 os.path

00:00:45.884 --> 00:00:50.129
然后按照常规方式使用子模块中的对象

00:00:50.130 --> 00:00:55.275
但是 这种导入语法只适合子模块

00:00:55.274 --> 00:00:58.920
你不能像这样导入模块中的函数

00:00:58.920 --> 00:01:02.579
如果你想使用 os 模块的其他部分

00:01:02.579 --> 00:01:08.784
你可以导入 os 这样的话 依然可以访问 os.path 中的所有内容

00:01:08.784 --> 00:01:13.804
有时候 在使用模块时 会发现命名容易让人困惑

00:01:13.805 --> 00:01:16.730
例如 模块名称可能采用的是

00:01:16.730 --> 00:01:19.790
其中的某个重要类或函数

00:01:19.790 --> 00:01:24.185
在这种情况下 你需要仔细思考导入语句

00:01:24.185 --> 00:01:29.150
这行代码从 datetime 模块中导入了 datetime 类

00:01:29.150 --> 00:01:32.120
注意 接下来使用 datetime

00:01:32.120 --> 00:01:36.070
将指代 datetime 类 而不是 datetime 模块

