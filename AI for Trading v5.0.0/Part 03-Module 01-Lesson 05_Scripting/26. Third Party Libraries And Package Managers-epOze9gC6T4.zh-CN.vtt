WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.040
与大多数语言相比

00:00:02.040 --> 00:00:04.605
Python 包含的标准库非常庞大

00:00:04.605 --> 00:00:07.770
实际上 有人说 Python 就像带有电池

00:00:07.769 --> 00:00:12.195
因为它包含你立即工作所需的库

00:00:12.195 --> 00:00:16.635
但是 标准库并非具有所有你可能想要的内容

00:00:16.635 --> 00:00:21.500
某些任务非常特殊 无法通过标准库实现

00:00:21.500 --> 00:00:24.265
幸运的是 独立开发者编写了

00:00:24.265 --> 00:00:27.894
成千上万的第三方库

00:00:27.894 --> 00:00:30.262
如果这些软件包没有包含在 Python 本身中

00:00:30.263 --> 00:00:32.920
如何获取这些软件包？

00:00:32.920 --> 00:00:35.515
我们可以使用 pip 安装库

00:00:35.515 --> 00:00:38.965
pip 是在 Python 3 中包含的软件包管理器

00:00:38.965 --> 00:00:43.510
pip 是标准 Python 软件包管理器 但并不是唯一的管理器

00:00:43.509 --> 00:00:47.454
另一个热门的管理器是 Anaconda

00:00:47.454 --> 00:00:50.585
该管理器专门针对数据科学

00:00:50.585 --> 00:00:52.545
在这节课中我们将使用 pip

00:00:52.545 --> 00:00:54.615
pip 是一般标准

00:00:54.615 --> 00:00:57.405
我们使用 pip 安装这个库

00:00:57.405 --> 00:01:01.755
该库用于处理时区或非常复杂的任务

00:01:01.755 --> 00:01:04.725
这个命令将下载并安装该软件包

00:01:04.724 --> 00:01:07.679
使我们能够将其导入我们的程序中

00:01:07.680 --> 00:01:11.115
安装完毕后 我们可以使用导入标准库的同一语法

00:01:11.114 --> 00:01:15.435
导入第三方软件包

00:01:15.435 --> 00:01:17.609
在此示例中

00:01:17.609 --> 00:01:21.930
我从该标准库中导入了 timezone 软件包和 datetime 软件包

00:01:21.930 --> 00:01:25.275
标准做法是将第三方库的导入语句

00:01:25.275 --> 00:01:29.810
放在标准库的导入语句后面

00:01:29.810 --> 00:01:33.920
这个示例将用协调世界时 (UTC) 表示的当前时间

00:01:33.920 --> 00:01:38.930
存储在变量 now 中

00:01:38.930 --> 00:01:42.395
然后将此时间转换为印度标准时 (IST)

00:01:42.394 --> 00:01:46.759
并存储到变量 ist_now 中

00:01:46.760 --> 00:01:51.755
大型 Python 程序可能取决于大量第三方库

00:01:51.754 --> 00:01:54.354
为了更轻松地共享这些程序

00:01:54.355 --> 00:02:00.390
程序员经常将项目依赖项放在一个叫做 requirements.txt 的文件中

00:02:00.390 --> 00:02:04.799
这是一个 requirements.txt 文件示例

00:02:04.799 --> 00:02:09.810
该文件的每行都包含软件包的名称和版本号

00:02:09.810 --> 00:02:12.487
版本号是可选的

00:02:12.487 --> 00:02:14.805
但是通常应该包含版本号

00:02:14.805 --> 00:02:19.200
不同版本的库可能变化不大 也可能有巨大差异

00:02:19.199 --> 00:02:20.429
务必使用程序员的作者在编写程序时

00:02:20.430 --> 00:02:25.365
使用的相同库版本

00:02:25.365 --> 00:02:31.600
你可以使用此命令通过 pip 安装项目的所有依赖项

