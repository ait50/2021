WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:03.133
في Python هناك طرق للتعامل مع الاستثناءات

00:00:03.233 --> 00:00:06.400
بحيث لا تُعطّل البرنامج كلما حدثت.

00:00:06.500 --> 00:00:10.833
دعونا نعود إلى هذا المثال
الذي يتلقى إدخالاً من المستخدم.

00:00:10.933 --> 00:00:12.933
رأينا أنه عندما نفّذنا هذا الكود

00:00:13.033 --> 00:00:17.633
صدرت رسالة خطأ عندما أدخل المستخدم نوع
بيانات لا يمكن تحويله إلى عدد صحيح "int".

00:00:17.733 --> 00:00:21.633
يمكننا في الواقع التعامل مع هذا الخطأ
باستخدام عبارة "try" أي "جرّب".

00:00:21.733 --> 00:00:22.867
في عبارة "try"،

00:00:22.967 --> 00:00:26.167
يتم تنفيذ الكود الواقع
داخل كتلة "try" أولاً،

00:00:26.267 --> 00:00:30.300
وإذا واجهت Python أية استثناءات
أثناء تنفيذ هذه الكتلة،

00:00:30.400 --> 00:00:33.200
فستنتقل إلى الكود الواقع
ضمن كتلة "except" أي "باستثناء".

00:00:33.300 --> 00:00:36.333
هنا، إذا نفذتُ هذا الكود
وأدخلتُ كلمة "ten" أي "عشرة"،

00:00:36.433 --> 00:00:38.967
ستظهر العبارة "That's not a valid number"
أي "هذه ليست صيغة رقم صحيحة"

00:00:39.067 --> 00:00:41.333
وسينتقل التنفيذ إلى بقية الكود.

00:00:41.433 --> 00:00:43.867
يستمر البرنامج في العمل سواء

00:00:43.967 --> 00:00:47.200
أصادف استثناء
أثناء تنفيذ كتلة "try" هذه أم لا.

00:00:47.300 --> 00:00:50.967
على سبيل المثال،
إذا كان لدي سطر بعد عبارة "try" هذه

00:00:51.067 --> 00:00:52.733
يطبع العبارة "Attempted input"،

00:00:52.833 --> 00:00:55.700
سترى أنه ستتم طباعة تلك العبارة
في كلتا الحالتين.

00:00:55.800 --> 00:01:00.267
إذا أردنا أن يستمر تنفيذ هذا الكود
إلى أن يُدخل المستخدم صيغة رقم صحيحة،

00:01:00.367 --> 00:01:03.033
يمكننا استخدام حلقة "while"
ثم الخروج منها

00:01:03.133 --> 00:01:07.200
إذا تم تنفيذ الكود كله
الموجود داخل كتلة "try" بالكامل بنجاح.

00:01:07.300 --> 00:01:12.067
هنا، يستمر البرنامج في تلقي المدخلات
إلى أن أدخِل صيغة رقم صحيحة.

00:01:12.167 --> 00:01:13.967
إذا أدخلتُ صيغة رقم صحيحة،

00:01:14.067 --> 00:01:17.733
لن تُظهر هذه العبارة
الواقعة داخل كتلة "try" استثناء،

00:01:17.833 --> 00:01:21.367
وعليه فإنها تنتقل إلى السطر التالي
حيث تخرج من الحلقة.

00:01:21.467 --> 00:01:23.433
لكن بما أن ذلك يقاطع الحلقة،

00:01:23.533 --> 00:01:25.567
فإن العبارة "Attempted input"
لن تتم طباعتها أبداً.

00:01:25.667 --> 00:01:30.033
إذا أردنا لهذا السطر الأخير أن يتم تنفيذه
دائماً بعد عبارة "try" تحت أي ظرف،

00:01:30.133 --> 00:01:34.933
فهناك عنصر اختياري في عبارة "try" يمكننا
استخدامه، ألا وهو "finally" أي "أخيراً".

00:01:35.033 --> 00:01:37.367
الآن ستتم طباعة عبارة "Attempted input"

00:01:37.467 --> 00:01:41.400
عندما يخرج البرنامج من عبارة "try"
مهما كان الظرف،

00:01:41.500 --> 00:01:43.067
سواء أكانت هناك عبارة "break"

00:01:43.167 --> 00:01:48.000
أم عبارة "return" أم حدث خطأ يوقف
تشغيل البرنامج داخل كتلة "except".

00:01:48.100 --> 00:01:51.267
يمكنك قراءة المزيد عن هذا
في الملاحظات أدناه.

00:01:51.367 --> 00:01:55.600
كتلة "finally" مفيدة لإضافة إجراءات
تعالج المسائل العالقة في الكود الذي تكتبه.

00:01:55.700 --> 00:01:58.767
لاحقاً في هذا الدرس،
سوف نستخدم هذا لإغلاق ملف

00:01:58.867 --> 00:02:01.333
بعد محاولة فتح ذلك الملف داخل عبارة "try".

