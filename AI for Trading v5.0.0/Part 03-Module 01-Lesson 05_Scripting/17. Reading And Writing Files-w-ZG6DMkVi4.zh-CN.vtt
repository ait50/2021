WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.330
要使程序真正地发挥作用

00:00:03.330 --> 00:00:06.254
需要与实际数据交互

00:00:06.254 --> 00:00:11.370
图片 网页和数据库都属于文件

00:00:11.369 --> 00:00:14.070
我们在日常的数字操作中

00:00:14.070 --> 00:00:17.925
经常会创建 移动 操纵和读取这些文件

00:00:17.925 --> 00:00:21.420
我们到目前为止使用的数据都是在 Python 脚本中定义的数据

00:00:21.420 --> 00:00:26.820
或者是在执行脚本过程中从用户那获取的原始输入

00:00:26.820 --> 00:00:31.890
接下来 我们将介绍如何在 Python 中读取文件

00:00:31.890 --> 00:00:37.155
以便显著增加可以通过 Python 程序实现的目的

00:00:37.155 --> 00:00:40.425
这样我们便能与来自很多其他来源的更多信息交互

00:00:40.424 --> 00:00:44.070
并处理这些信息

00:00:44.070 --> 00:00:47.895
各种文件在计算机上都具有相似的结构

00:00:47.895 --> 00:00:51.930
由字符构成的字符串会表示一些信息

00:00:51.929 --> 00:00:53.969
特定的文件格式

00:00:53.969 --> 00:00:58.448
通常由文件后缀表示 例如 .py

00:00:58.448 --> 00:01:02.730
.txt .htm .csv 等等

00:01:02.729 --> 00:01:06.224
表示这些字符是如何整理的

00:01:06.224 --> 00:01:09.059
文件中的字符

00:01:09.060 --> 00:01:12.225
由我们与之交互的各种程序解析

00:01:12.224 --> 00:01:15.299
例如 一个图片编辑程序将解析数字图片中的信息

00:01:15.299 --> 00:01:19.620
并将其显示为图片

00:01:19.620 --> 00:01:22.275
然后当我们在程序中编辑该图片时

00:01:22.275 --> 00:01:26.535
我们会使用该程序对文件中的字符进行更改

00:01:26.534 --> 00:01:30.159
在 Python 中 我们可以直接读取这些文件字符

00:01:30.159 --> 00:01:35.344
这种体验和在桌面应用中打开文件截然不同

00:01:35.344 --> 00:01:38.105
在 Python 中打开文件

00:01:38.105 --> 00:01:41.240
会出现一个公用程序接口 适合各种文件

00:01:41.239 --> 00:01:44.824
无需打开一个图形用户界面

00:01:44.825 --> 00:01:49.500
意味着我们可以使用 Python 程序自动处理涉及文件的任务

