WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:02.580
ついに勾配降下アルゴリズムの疑似コードを

00:00:02.580 --> 00:00:05.120
書くためのツールができ

00:00:05.120 --> 00:00:06.830
このようになります

00:00:06.830 --> 00:00:15.170
ステップ1 ランダム重みw1からwnとbで始めます これが直線になり

00:00:15.170 --> 00:00:19.270
ただの直線ではなく シグモイドwx+bによって与えられる全体確率関数です

00:00:19.270 --> 00:00:22.820
今度は すべてのポイントについてエラーを計算し

00:00:22.820 --> 00:00:25.150
誤って分類されたポイントについては

00:00:25.150 --> 00:00:29.230
エラーが高く 正しく分類されたポイントは小くなっています

00:00:29.230 --> 00:00:32.545
今度は座標x1からxnまでのすべてのポイントについて

00:00:32.545 --> 00:00:36.845
学習率αにwiに関するエラー関数をかけたものを加えることによって

00:00:36.845 --> 00:00:42.950
wiを更新します

00:00:42.950 --> 00:00:45.120
またαにbに関するエラー関数の偏微分を

00:00:45.120 --> 00:00:48.440
掛けたものを加えることによってにbを更新します

00:00:48.440 --> 00:00:49.920
これによって新しい重み

00:00:49.920 --> 00:00:52.610
wi素数と新しいバイアスb素数が得られます

00:00:52.610 --> 00:00:55.330
これらの偏微分はすでに計算してあり

00:00:55.330 --> 00:00:58.605
wiに関する微分は

00:00:58.605 --> 00:01:01.295
yハットマイナスyかけるxiであり

00:01:01.295 --> 00:01:05.215
bに関する微分はyハットマイナスyです

00:01:05.215 --> 00:01:08.840
これが重みを更新する方法です

00:01:08.840 --> 00:01:13.350
このプロセスをエラーが小さくなるまで繰り返すか

00:01:13.350 --> 00:01:15.765
一定回数だけ繰り返します

00:01:15.765 --> 00:01:18.840
回数はエポックと呼ばれ 後で学習します

00:01:18.840 --> 00:01:20.100
これは見覚えがあります

00:01:20.100 --> 00:01:21.935
以前に見たことがありませんか

00:01:21.935 --> 00:01:24.300
ポイントを見て 各ポイントが何をしているかを見ます

00:01:24.300 --> 00:01:26.640
自分自身の倍数を直線の重みに加えて

00:01:26.640 --> 00:01:31.640
誤って分類されている場合に直線を近づけます

00:01:31.640 --> 00:01:34.435
パーセプトロンアルゴリズムが何を行うか かなりよくわかります

00:01:34.435 --> 00:01:36.000
次のビデオでは

00:01:36.000 --> 00:01:39.000
どの程度似ているか少し疑わしいので 類似性を見ます

