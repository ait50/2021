WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.770
Okay. So now our goal is to minimize the error function and we'll do it as follows.

00:00:03.770 --> 00:00:05.415
We started some random weights,

00:00:05.415 --> 00:00:09.330
which will give us the predictions σ(Wx+b).

00:00:09.330 --> 00:00:13.839
As we saw, that also gives us a error function given by this formula.

00:00:13.839 --> 00:00:17.324
Remember that the summands are also error functions for each point.

00:00:17.324 --> 00:00:20.339
So each point will give us a larger function if

00:00:20.339 --> 00:00:24.009
it's mis-classified and a smaller one if it's correctly classified.

00:00:24.010 --> 00:00:26.000
And the way we're going to minimize this function,

00:00:26.000 --> 00:00:27.679
is to use gradient decent.

00:00:27.679 --> 00:00:31.114
So here's Mt. Errorest and this is us,

00:00:31.114 --> 00:00:33.439
and we're going to try to jiggle the line around to

00:00:33.439 --> 00:00:36.439
see how we can decrease the error function.

00:00:36.439 --> 00:00:40.979
Now, the error function is the height which is E(W,b),

00:00:40.979 --> 00:00:43.699
where W and b are the weights.

00:00:43.700 --> 00:00:46.520
Now what we'll do, is we'll use gradient decent in order to

00:00:46.520 --> 00:00:50.180
get to the bottom of the mountain at a much smaller height,

00:00:50.179 --> 00:00:56.000
which gives us a smaller error function E of W', b'.

00:00:56.000 --> 00:00:58.680
This will give rise to new weights,

00:00:58.680 --> 00:01:03.334
W' and b' which will give us a much better prediction.

00:01:03.335 --> 00:01:08.000
Namely,  σ(W'x+b').

