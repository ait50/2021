WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:03.575
予測は基本的にアルゴリズムから得る答えです

00:00:03.575 --> 00:00:06.220
離散回答はYesかNoの形式になります

00:00:06.219 --> 00:00:08.256
一方 連続回答は数になり

00:00:08.256 --> 00:00:11.615
通常 0と1の間であり 確率とみなします

00:00:11.615 --> 00:00:13.224
先ほどからの例では

00:00:13.224 --> 00:00:16.664
学生がいて 青は合格 赤は不合格です

00:00:16.664 --> 00:00:21.035
離散アルゴリズムは学生が合格か不合格かを答え

00:00:21.035 --> 00:00:25.679
不合格の学生には0を 合格の学生には1を割り振ります

00:00:25.679 --> 00:00:27.274
一方

00:00:27.274 --> 00:00:29.834
黒い線より遠いポイントほど

00:00:29.835 --> 00:00:32.505
確率は大きくなります

00:00:32.505 --> 00:00:36.240
青い領域のポイントは非常に高い確率になり

00:00:36.240 --> 00:00:40.050
このポイントは85％の確率で青です

00:00:40.049 --> 00:00:43.884
赤い領域のポイントは非常に低い確率になり

00:00:43.884 --> 00:00:48.159
一番下のこのポイントが青である確率は20％です

00:00:48.159 --> 00:00:53.429
線より上のポイントはすべて 青である確率が50％以上です

00:00:53.429 --> 00:00:57.335
見てのとおり 確率は線からの距離の関数です

00:00:57.335 --> 00:01:00.390
離散予測から連続予測に移行する方法は

00:01:00.390 --> 00:01:05.075
アクティベーション関数を左のステップ関数から

00:01:05.075 --> 00:01:07.655
右のシグモイド関数に変更するだけです

00:01:07.655 --> 00:01:10.609
シグモイド関数は単なる関数であり

00:01:10.609 --> 00:01:14.629
大きな正数は1に非常に近い値を与えます

00:01:14.629 --> 00:01:19.219
大きな負数は0に非常に近い値を与えます

00:01:19.219 --> 00:01:22.030
0に近い数の場合

00:01:22.030 --> 00:01:25.599
値は0.5に近くなります

00:01:25.599 --> 00:01:32.684
式はσ(x) = 1/(1 + e(-x)) です

00:01:32.685 --> 00:01:38.245
以前のモデルは直線 正の領域 負の領域で構成されていました

00:01:38.245 --> 00:01:42.010
今は全体が確率空間であり 平面内の各ポイントについて

00:01:42.010 --> 00:01:46.045
確率が与えられ ポイントのラベルは青いポイントについては1

00:01:46.045 --> 00:01:47.969
赤いポイントについては0です

00:01:47.969 --> 00:01:51.370
たとえば このポイントの場合 青である確率は

00:01:51.370 --> 00:01:55.850
50％であり 赤である確率も50％です

00:01:55.849 --> 00:02:00.509
このポイントの場合 青である確率は40%であり

00:02:00.510 --> 00:02:02.975
赤である確率は60％です

00:02:02.974 --> 00:02:06.446
これは青の確率が30％

00:02:06.447 --> 00:02:08.469
赤の確率が70％です

00:02:08.469 --> 00:02:11.439
このポイントの場合 青である確率は80%

00:02:11.439 --> 00:02:14.655
赤である確率は20％です

00:02:14.655 --> 00:02:17.360
この確率空間を求める方法は非常に簡単です

00:02:17.360 --> 00:02:22.800
線形関数Wx+ｂとシグモイド関数を結合するだけです

00:02:22.800 --> 00:02:27.830
左では Wx+bが0 1 2 -1 -2 などのポイントを表す

00:02:27.830 --> 00:02:32.630
直線があります

00:02:32.629 --> 00:02:36.930
平面内のこれらの値のそれぞれにシグモイド関数を適用すると

00:02:36.930 --> 00:02:40.515
各ポイントについて0から1までの数が得られます

00:02:40.514 --> 00:02:44.074
これらの数はポイントが青である確率です

00:02:44.074 --> 00:02:46.439
ポイントが青である確率は

00:02:46.439 --> 00:02:50.454
モデルyハット＝シグモイド(Wx+b)の予測です

00:02:50.455 --> 00:02:53.415
予測が0.5

00:02:53.414 --> 00:02:55.259
0.6 0.7

00:02:55.259 --> 00:02:58.419
0.4 0.3 などの直線が見られます

00:02:58.419 --> 00:03:01.539
見てのとおり 青が濃い領域ほど

00:03:01.539 --> 00:03:04.905
σ(Wx + b)は1に近くなります

00:03:04.905 --> 00:03:07.740
赤が濃い領域ほど

00:03:07.740 --> 00:03:11.115
σ(Wx + b)は0に近くなります

00:03:11.115 --> 00:03:13.240
メインの線では

00:03:13.240 --> 00:03:15.120
Wx+bは0であり

00:03:15.120 --> 00:03:19.319
シグモイドWx+bはちょうど0.5になります

00:03:19.319 --> 00:03:21.384
左は元のパーセプトロンであり

00:03:21.384 --> 00:03:24.250
アクティベーション関数はステップ関数です

00:03:24.250 --> 00:03:26.669
右は新しいパーセプトロンであり

00:03:26.669 --> 00:03:29.944
アクティベーション関数はシグモイド関数です

00:03:29.944 --> 00:03:31.984
新しいパーセプトロンは

00:03:31.985 --> 00:03:33.195
入力を取り

00:03:33.194 --> 00:03:38.301
エッジの重みを掛けて 結果を加え

00:03:38.301 --> 00:03:40.935
シグモイド関数を適用します

00:03:40.935 --> 00:03:45.170
そのため 以前のように0と1を返す代わりに

00:03:45.169 --> 00:03:49.984
0.99や0.67など 0と1の間の値を返します

00:03:49.985 --> 00:03:53.285
以前は学生が合格かどうかを答えていましたが

00:03:53.284 --> 00:03:58.000
今は学生が合格する確率はこのくらいと答えます

