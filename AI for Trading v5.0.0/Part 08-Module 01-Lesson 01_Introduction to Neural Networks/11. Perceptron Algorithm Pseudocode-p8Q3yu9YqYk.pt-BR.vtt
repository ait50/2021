WEBVTT
Kind: captions
Language: pt-BR

00:00:00.200 --> 00:00:01.750
Agora temos
todas as ferramentas

00:00:01.800 --> 00:00:04.000
para descrever
o algoritmo perceptron.

00:00:04.850 --> 00:00:07.850
Começamos com uma equação aleatória
que determina uma linha

00:00:07.900 --> 00:00:10.650
e duas regiões,
a positiva e a negativa.

00:00:11.450 --> 00:00:14.850
Depois movimentamos a linha
para adequá-la cada vez melhor.

00:00:14.900 --> 00:00:17.250
Para tanto,
perguntamos aos pontos como vão.

00:00:17.300 --> 00:00:21.050
Os quatro classificados corretamente
dizem: "Estou bem!"

00:00:21.100 --> 00:00:25.050
Os dois classificados incorretamente
dizem: "Aproxime-se!"

00:00:25.700 --> 00:00:27.400
Vamos ouvir o ponto à direita

00:00:27.450 --> 00:00:31.300
e aplicar o truque
para aproximar a linha dele.

00:00:31.750 --> 00:00:34.000
Prontinho,
agora este ponto está bem.

00:00:34.500 --> 00:00:36.600
Agora vamos ouvir
o ponto à esquerda.

00:00:36.650 --> 00:00:39.500
Ele diz: "Aproxime-se!"
Aplicamos o truque,

00:00:39.550 --> 00:00:41.350
e a linha se aproxima dele.

00:00:42.000 --> 00:00:44.900
Ela até passa por sobre ele,
classificando-o corretamente.

00:00:45.450 --> 00:00:48.350
Agora todos estão
classificados certo e felizes.

00:00:48.800 --> 00:00:52.000
Vamos escrever o pseudocódigo
para esse algoritmo perceptron.

00:00:52.500 --> 00:00:56.050
Começamos com pesos aleatórios,
de p1 a pn e b.

00:00:56.100 --> 00:00:58.600
Isso nos dá a equação px+b,

00:00:58.650 --> 00:01:01.450
a linha e as áreas
positivas e negativas.

00:01:01.900 --> 00:01:03.900
Para cada ponto
classificado incorretamente

00:01:03.950 --> 00:01:06.900
com coordenadas x1 a xn
fazemos o seguinte.

00:01:07.350 --> 00:01:09.150
Se a predição era 0,

00:01:09.200 --> 00:01:12.800
o que significa que o ponto
é positivo em área negativa,

00:01:12.850 --> 00:01:14.800
atualizamos os pesos
assim:

00:01:15.400 --> 00:01:17.350
para i=1...n,

00:01:17.400 --> 00:01:21.300
mudamos pi para pi+alfa*xi,

00:01:21.350 --> 00:01:23.250
onde alfa é
a taxa de aprendizado.

00:01:23.650 --> 00:01:26.100
Neste caso,
estamos usando 0,1.

00:01:26.150 --> 00:01:29.450
Às vezes usamos 0,01 e etc.
Depende.

00:01:30.300 --> 00:01:33.600
Depois, também mudamos
a unidade de viés para b+alfa.

00:01:34.050 --> 00:01:35.400
Isso move a linha na direção

00:01:35.450 --> 00:01:37.300
do ponto classificado
incorretamente.

00:01:38.300 --> 00:01:39.400
Se a predição fosse 1,

00:01:39.450 --> 00:01:42.350
o que significa que o ponto
é negativo em área positiva,

00:01:42.400 --> 00:01:44.600
atualizamos os pesos
de forma parecida,

00:01:44.650 --> 00:01:47.000
só que subtraindo
ao invés de somando.

00:01:47.050 --> 00:01:49.400
Ou seja, para i=1...n,

00:01:49.450 --> 00:01:52.950
mudamos pi para pi-alfa*xi,

00:01:53.750 --> 00:01:57.550
e mudamos a unidade de viés b
para b-alfa.

00:01:58.050 --> 00:02:01.200
A linha se aproxima do ponto
classificado incorretamente.

00:02:02.200 --> 00:02:05.000
Agora, repetimos esse passo
até não termos nenhum erro.

00:02:05.050 --> 00:02:07.400
Ou até termos
um número pequeno de erros.

00:02:07.450 --> 00:02:11.350
Ou determinamos:
"refaça o passo mil vezes e pare."

00:02:11.400 --> 00:02:13.900
Veremos nossas opções
mais adiante nas aulas.

