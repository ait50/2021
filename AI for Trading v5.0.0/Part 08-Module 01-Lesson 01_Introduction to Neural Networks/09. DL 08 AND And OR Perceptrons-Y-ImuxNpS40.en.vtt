WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.700
So, here's something very interesting about perceptrons,

00:00:02.700 --> 00:00:06.540
and it's that some logical operators can be represented as perceptrons.

00:00:06.540 --> 00:00:09.659
Here for example, we have the AND operator,

00:00:09.659 --> 00:00:11.040
and how does that work?

00:00:11.039 --> 00:00:15.570
The AND operator takes two inputs and it returns an output.

00:00:15.570 --> 00:00:17.670
The inputs can be true or false,

00:00:17.670 --> 00:00:21.030
but the output is only true if both of the inputs are true.

00:00:21.030 --> 00:00:24.900
So for instance, if the inputs are true and true,

00:00:24.899 --> 00:00:26.834
then the output is true.

00:00:26.835 --> 00:00:29.265
If the inputs are true and false,

00:00:29.265 --> 00:00:31.080
then the output is false.

00:00:31.079 --> 00:00:34.274
If the inputs are false and true,

00:00:34.274 --> 00:00:36.225
then the output is false.

00:00:36.225 --> 00:00:39.335
Finally, if the inputs are false and false,

00:00:39.335 --> 00:00:41.469
then the output is false.

00:00:41.469 --> 00:00:44.109
Now how do we turn this into a perceptron?

00:00:44.109 --> 00:00:46.729
Well the first step is to turn this table of true,

00:00:46.729 --> 00:00:49.219
false into a table of zeros and ones,

00:00:49.219 --> 00:00:54.009
where the one corresponds to true and zero corresponds to false.

00:00:54.009 --> 00:00:57.844
Now we draw this perceptron over here which works just as before.

00:00:57.844 --> 00:01:01.280
It has a line defined by weights and bias and it has a positive area

00:01:01.280 --> 00:01:05.135
which is colored blue and a negative area which is colored red.

00:01:05.135 --> 00:01:08.210
What this perceptron is going to do is it'll plot each point.

00:01:08.209 --> 00:01:09.979
If the point falls in the positive area,

00:01:09.980 --> 00:01:11.314
then it returns a one,

00:01:11.314 --> 00:01:12.829
and if it falls in the negative area,

00:01:12.829 --> 00:01:14.510
then it returns a zero.

00:01:14.510 --> 00:01:16.910
So let's try it. The one,

00:01:16.909 --> 00:01:18.604
one gets plotted in the positive area.

00:01:18.605 --> 00:01:21.390
So the perceptron returns a one.

00:01:21.400 --> 00:01:25.280
The one zero gets plotted in the negative area.

00:01:25.280 --> 00:01:27.710
So, the perceptron returns a zero.

00:01:27.709 --> 00:01:30.714
The zero, one gets blurred in the negative area.

00:01:30.715 --> 00:01:34.140
So the perceptron returns a zero.

00:01:34.140 --> 00:01:38.159
Finally, the zero, zero also gets plotted in the negative area.

00:01:38.159 --> 00:01:40.854
So the perceptron returns a zero.

00:01:40.855 --> 00:01:44.465
Other logical operators can also be turned into perceptrons.

00:01:44.465 --> 00:01:50.120
For example, here is the OR operator which returns true if any of its two inputs is true.

00:01:50.120 --> 00:01:52.204
That gets turned into this table,

00:01:52.204 --> 00:01:54.004
which gets turned into this perceptron,

00:01:54.004 --> 00:01:56.034
which is very similar as the one before.

00:01:56.034 --> 00:01:59.450
Except the line has different weights on a different bias.

00:01:59.450 --> 00:02:03.049
What are the weights and bias for the AND and the OR preceptor?

00:02:03.049 --> 00:02:06.119
You'll have the chance to play with them in the quiz below.

