WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:03.990
では パーセプトロンアルゴリズムと 勾配降下法を 比較してみましょう

00:00:03.990 --> 00:00:05.845
勾配降下法では

00:00:05.845 --> 00:00:09.535
重みを 変更します  Wi が

00:00:09.535 --> 00:00:13.915
Wi + α(y-ŷ) Xi に なります

00:00:13.915 --> 00:00:15.325
パーセプトロンアルゴリズムでは

00:00:15.325 --> 00:00:17.253
各点で 重みが 変わるわけではなく

00:00:17.253 --> 00:00:18.960
誤分類された点 だけです

00:00:18.960 --> 00:00:21.385
ここで Xが 誤分類された場合

00:00:21.385 --> 00:00:27.525
点のラベルが 正なら Wiに Xiを 加算し

00:00:27.525 --> 00:00:29.785
負なら Wiから Xiを 引いて 重みを変更します

00:00:29.785 --> 00:00:32.327
問題は この 2つが 同じかどうか です

00:00:32.327 --> 00:00:34.920
思い出してみると パーセプトロンアルゴリズムでは

00:00:34.920 --> 00:00:37.350
ラベルは 0と 1です

00:00:37.350 --> 00:00:40.320
予測値の ŷも 0と 1です

00:00:40.320 --> 00:00:43.060
そのため 点が 正しく分類された場合

00:00:43.060 --> 00:00:48.440
yと ŷは 等しいので y-ŷは ゼロとなります

00:00:48.440 --> 00:00:50.205
次に 点のラベルが青の場合

00:00:50.205 --> 00:00:52.095
y=1です

00:00:52.095 --> 00:00:53.220
誤分類の場合

00:00:53.220 --> 00:00:55.950
予測値 ŷはゼロで

00:00:55.950 --> 00:00:59.265
ŷ-yは -1になります

00:00:59.265 --> 00:01:01.050
同様に 点のラベルが赤の場合は

00:01:01.050 --> 00:01:04.105
y=0 で ŷ=1 です

00:01:04.105 --> 00:01:06.180
ということは ŷ-y=0 です

00:01:06.180 --> 00:01:08.300
これは すぐには わかりにくいかも 知れません

00:01:08.300 --> 00:01:10.035
でも 画面を ずっと 見つめていると

00:01:10.035 --> 00:01:13.620
右と左が 同じものであることに 気づくでしょう

00:01:13.620 --> 00:01:15.175
唯一 違う点は 左側では

00:01:15.175 --> 00:01:17.776
ŷが 0と1の間の 任意の値で あり得る一方

00:01:17.776 --> 00:01:19.650
右側では

00:01:19.650 --> 00:01:23.305
ŷが 0か 1の いずれかであることです

00:01:23.305 --> 00:01:25.175
面白いと 思いませんか

00:01:25.175 --> 00:01:28.055
では 勾配降下法について よく調べてみましょう

00:01:28.055 --> 00:01:31.680
パーセプトロンアルゴリズムと 勾配降下法では

00:01:31.680 --> 00:01:36.570
誤分類された点が 線に 近づくよう 指示します

00:01:36.570 --> 00:01:40.770
線が その点を 追い越せば 点が正しい側に 移るからです

00:01:40.770 --> 00:01:43.734
点が 正しく分類された場合は どうでしょうか

00:01:43.734 --> 00:01:47.315
その場合 パーセプトロンアルゴリズムは 何もしないよう 指示します

00:01:47.315 --> 00:01:49.575
勾配降下法では

00:01:49.575 --> 00:01:51.195
重みを 変更します

00:01:51.195 --> 00:01:52.830
それには どんな意味があるのでしょうか

00:01:52.830 --> 00:01:54.480
よく 見てみると

00:01:54.480 --> 00:01:56.640
点が 線に出している 指示は

00:01:56.640 --> 00:01:58.875
「もっと 離れろ」です

00:01:58.875 --> 00:02:01.120
納得ですよね?

00:02:01.120 --> 00:02:03.180
正しく 分類されている点なら つまり

00:02:03.180 --> 00:02:05.895
青い領域にある 青い点なら

00:02:05.895 --> 00:02:08.385
青い領域の もっと深いところへ 行けば

00:02:08.385 --> 00:02:10.740
推定値が 1に近づき

00:02:10.740 --> 00:02:13.060
誤差は さらに小さくなります

00:02:13.060 --> 00:02:16.320
同じことが 赤い領域にある 赤い点についても 言えます

00:02:16.320 --> 00:02:19.590
だから 点が 線に 離れるよう指示するのは 納得できることです

00:02:19.590 --> 00:02:22.925
それこそが 勾配降下法のアルゴリズムです

00:02:22.925 --> 00:02:26.540
誤分類された点は 線に 近づくよう 指示し

00:02:26.540 --> 00:02:30.315
正しく分類された点は 線に 離れるよう 指示します

00:02:30.315 --> 00:02:33.240
線は すべての点の指示を 聞いて

00:02:33.240 --> 00:02:37.000
措置を講じ 最後には かなり良い解に 到達します

