WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:03.714
勾配降下法について より数学的な詳細を勉強しましょう

00:00:03.714 --> 00:00:07.799
この関数は重みの関数であり このようなグラフにできます

00:00:07.799 --> 00:00:10.199
数学的構造になったので

00:00:10.199 --> 00:00:13.639
もうエラレスト山ではなく マッサーホルン山というべきでしょう

00:00:13.640 --> 00:00:17.830
私たちはマッサーホルン山のどこかにいて 下山する必要があります

00:00:17.829 --> 00:00:25.544
関数の入力はW1とW2であり エラー関数はEによって与えられます

00:00:25.545 --> 00:00:29.470
Eの勾配は

00:00:29.469 --> 00:00:35.924
W1とW2に対するEの偏微分のベクター合計によって与えられます

00:00:35.924 --> 00:00:39.289
この勾配は実際には

00:00:39.289 --> 00:00:42.879
エラー関数を最も多く増加したい場合に移動すべき方向を示します

00:00:42.880 --> 00:00:45.679
そのため 勾配の負を取れば

00:00:45.679 --> 00:00:48.884
エラー関数を最も多く減らす方法がわかります

00:00:48.884 --> 00:00:51.536
そして これが これから私たちが行うことです

00:00:51.536 --> 00:00:52.882
今いるポイントで

00:00:52.881 --> 00:00:58.634
そのポイントでのエラー関数の勾配の負を取ります

00:00:58.634 --> 00:01:01.254
そして その方向に歩き出します

00:01:01.255 --> 00:01:02.650
一歩進むと

00:01:02.649 --> 00:01:04.575
より低い位置にいることになります

00:01:04.575 --> 00:01:07.525
これを何度も何度も

00:01:07.525 --> 00:01:12.902
山のふもとにたどり着くまで繰り返します

00:01:12.902 --> 00:01:15.219
これが勾配を計算する方法です

00:01:15.219 --> 00:01:19.724
初期予測yハット=シグモイド(Wx+b)から始めます

00:01:19.724 --> 00:01:22.089
この予測が良くないとします

00:01:22.090 --> 00:01:25.250
エラーが大きく 山の高い所にいるからです

00:01:25.250 --> 00:01:26.765
予測はこのように見えます

00:01:26.765 --> 00:01:32.930
yハット=シグモイド(W1x1+...Wnxn+b)

00:01:32.930 --> 00:01:37.025
エラー関数は 以前に見た式によって与えられます

00:01:37.025 --> 00:01:40.505
しかし ここで重要なのはエラー関数の勾配です

00:01:40.504 --> 00:01:44.899
エラー関数の勾配は

00:01:44.900 --> 00:01:50.170
重みとバイアスに対するエラー関数の偏微分によって形成されるベクターです

00:01:50.170 --> 00:01:54.189
そこで 勾配の負の方向に一歩踏み出します

00:01:54.189 --> 00:01:57.530
以前と同様 劇的変化は不要なので

00:01:57.530 --> 00:02:00.230
より小さい学習率αを導入します

00:02:00.230 --> 00:02:02.630
たとえば 0.1です

00:02:02.629 --> 00:02:05.935
勾配に この数を掛けます

00:02:05.935 --> 00:02:09.140
一歩踏み出すということは

00:02:09.139 --> 00:02:12.204
重みとバイアスを次のように更新することです

00:02:12.205 --> 00:02:15.625
重みwiはwi素数になります

00:02:15.625 --> 00:02:21.562
wi-αかける wiに関するエラー関数の

00:02:21.562 --> 00:02:23.880
偏微分によって与えられます

00:02:23.879 --> 00:02:28.495
バイアスはb素数になり b-αかける

00:02:28.495 --> 00:02:33.545
bに関するエラーの偏微分によって与えられます

00:02:33.544 --> 00:02:37.889
これが より低いエラー関数を持つ予測へと導きます

00:02:37.889 --> 00:02:43.214
そのため 重みW素数 b素数での予測は

00:02:43.215 --> 00:02:48.055
重みWとbでの予測より良いと結論付けることができます

00:02:48.055 --> 00:02:51.000
これが まさに勾配降下法のステップです

