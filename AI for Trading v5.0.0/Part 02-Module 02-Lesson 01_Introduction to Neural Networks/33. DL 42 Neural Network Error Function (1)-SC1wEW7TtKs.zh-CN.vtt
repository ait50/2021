WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.520
我们的目标是训练神经网络

00:00:02.520 --> 00:00:03.715
为了做到这一点

00:00:03.715 --> 00:00:05.950
我们要定义误差函数

00:00:05.950 --> 00:00:10.375
我们再次观察感知器的误差函数

00:00:10.375 --> 00:00:12.135
这是我们的感知器

00:00:12.135 --> 00:00:15.000
左侧我们输入向量是

00:00:15.000 --> 00:00:18.900
各项 x1 直到 xn 和偏置单元 1

00:00:18.900 --> 00:00:23.945
边缘为权重 W1 到 Wn

00:00:23.945 --> 00:00:26.360
b 是偏置单元

00:00:26.360 --> 00:00:30.275
最后我们可以看到这个感知器使用了一个 sigmoid 函数

00:00:30.275 --> 00:00:37.008
预测定义为 y-hat = σ (Wx+b)

00:00:37.008 --> 00:00:39.750
正如我们所见 这个函数可以让我们测量

00:00:39.750 --> 00:00:44.175
对每个点分类好坏的误差

00:00:44.175 --> 00:00:48.565
一般说来 如果正确分类 这是个很小的数字

00:00:48.565 --> 00:00:50.640
测量这个点与线段的距离

00:00:50.640 --> 00:00:53.415
和这个点是否错误分类

00:00:53.415 --> 00:00:57.840
我们如何在多层感知器中定义误差函数呢？

00:00:57.840 --> 00:01:00.000
正如我们所见 预测是

00:01:00.000 --> 00:01:03.740
矩阵乘积和 sigmoid 函数的组合

00:01:03.740 --> 00:01:07.370
但是误差函数确实相同 对不对？

00:01:07.370 --> 00:01:08.817
这可以是完全相同的公式

00:01:08.817 --> 00:01:12.000
除此之外 y-hat 只是更加复杂一点

00:01:12.000 --> 00:01:17.490
并且这个函数告诉我们对某个点误分类的糟糕程度

00:01:17.490 --> 00:01:20.000
除此之外 还可以观察更加复杂的边界

