WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:03.000
ニューラルネットワークとは何かを定義したので

00:00:03.000 --> 00:00:04.810
そのトレーニング方法を学ぶ必要があります

00:00:04.810 --> 00:00:07.290
トレーニングとは実際には

00:00:07.290 --> 00:00:10.495
データをモデル化するためにエッジに必要なパラメーターを意味します

00:00:10.495 --> 00:00:12.180
トレーニング方法を学ぶためには

00:00:12.180 --> 00:00:16.800
出力を求めるために入力をどのように処理するかをよく見る必要があります

00:00:16.800 --> 00:00:19.820
では単純なニューラルネットワークであるパーセプトロンを見てみましょう

00:00:19.820 --> 00:00:23.400
このパーセプトロンはx1 x2という形式のデータポイントを

00:00:23.400 --> 00:00:27.195
受け取り ラベルはY=1です

00:00:27.195 --> 00:00:29.385
これはポイントが青であることを意味します

00:00:29.385 --> 00:00:34.680
パーセプトロンは線形式によって定義され たとえば w1 x1プラスｗ2

00:00:34.680 --> 00:00:41.595
x2プラスBです  w1とw2はエッジの 重みであり Bはノートのバイアスです

00:00:41.595 --> 00:00:43.555
ここでは w1はw2より大きいので

00:00:43.555 --> 00:00:46.200
w1というラベルのエッジをw2というラベルのエッジより

00:00:46.200 --> 00:00:49.820
太く描いて そのことを示します

00:00:49.820 --> 00:00:53.280
では パーセプトロンがすることは ポイントx1 x2をプロットし

00:00:53.280 --> 00:00:57.240
ポイントが青である確率を出力することです

00:00:57.240 --> 00:01:01.173
ここではポイントは赤のエリアにあり 出力は小さな数です

00:01:01.173 --> 00:01:03.795
ポイントが青である可能性は非常に低いからです

00:01:03.795 --> 00:01:07.045
このプロセスをフィードフォワードといいます

00:01:07.045 --> 00:01:11.070
これは良くないモデルであることがわかります ポイントは実際には青だからです

00:01:11.070 --> 00:01:12.570
第3の座標として

00:01:12.570 --> 00:01:14.820
Yが1であるとします

00:01:14.820 --> 00:01:17.010
より複雑なニューラルネットワークの場合も

00:01:17.010 --> 00:01:18.570
プロセスは同じです

00:01:18.570 --> 00:01:22.050
ここに 大きな重みに対応する太いエッジと

00:01:22.050 --> 00:01:26.280
小さな重みに対応する細いエッジがあり ニューラルネットワークは

00:01:26.280 --> 00:01:29.070
上のグラフと

00:01:29.070 --> 00:01:35.025
下のグラフにポイントをプロットし 結果としての出力は上のモデルから小さな数になります

00:01:35.025 --> 00:01:38.580
ポイントが赤のエリアにあるということは 青である確率が低いことを意味し

00:01:38.580 --> 00:01:43.140
 2番目のモデルからの大きな数は

00:01:43.140 --> 00:01:44.895
ポイントが青のエリアにあるために

00:01:44.895 --> 00:01:47.280
青である確率が高いこと意味します

00:01:47.280 --> 00:01:51.650
2つのモデルが組み合わされて この非線形モデルになり

00:01:51.650 --> 00:01:53.180
出力層は

00:01:53.180 --> 00:01:57.485
 ポイントをプロットして ポイントが青である確率を示します

00:01:57.485 --> 00:02:00.620
見てのとおり これは良くないモデルです

00:02:00.620 --> 00:02:03.750
ポイントを赤のエリアに置いていますが ポイントは青だからです

00:02:03.750 --> 00:02:08.280
このプロセスはフィードフォワードと呼ばれます もう少し詳しく見てみましょう

00:02:08.280 --> 00:02:13.070
これは同じニューラルネットワークの別の表記であり バイアスが外側にあります

00:02:13.070 --> 00:02:15.260
重みの行列があります

00:02:15.260 --> 00:02:21.285
行列wの上付き文字1は最初の層を示し エントリーは重みw11

00:02:21.285 --> 00:02:23.310
からw32までです

00:02:23.310 --> 00:02:26.175
バイアスがw31とw32として書かれていますが

00:02:26.175 --> 00:02:30.110
これは利便性のためにすぎません

00:02:30.110 --> 00:02:31.520
次の層にも

00:02:31.520 --> 00:02:36.115
行列があり wの上付き文字2は2番目の層であることを示します

00:02:36.115 --> 00:02:38.840
この層が含んでいる重みから 最初の層の

00:02:38.840 --> 00:02:43.700
線形モデルを組み合わせて 2番目の層の非線形モデルを得る方法がわかります

00:02:43.700 --> 00:02:45.060
次に起こるのは ちょっとした計算です

00:02:45.060 --> 00:02:47.135
入力はx1 x2 1という形式であり

00:02:47.135 --> 00:02:51.000
1はバイアスユニットから来ています

00:02:51.000 --> 00:02:55.660
これに行列w1をかけて これらの出力を求めます

00:02:55.660 --> 00:03:01.250
次に シグモイド関数を適用して 出力を0と1の間の値に変換します

00:03:01.250 --> 00:03:04.130
次にベクターフォーマットでこれらの値にバイアスユニットの1を

00:03:04.130 --> 00:03:08.280
（バイアス単位に）付加された値と二番目の行列とかけます

00:03:08.280 --> 00:03:12.110
これから返される出力をシグモイド関数にスローして

00:03:12.110 --> 00:03:16.290
最終的な出力である yハットが得られます

00:03:16.290 --> 00:03:21.155
yハットはポイントが青のラベルを付けられる予測値または確率です

00:03:21.155 --> 00:03:23.275
これが ニューラルネットワークがすることです

00:03:23.275 --> 00:03:25.760
入力ベクターを取り

00:03:25.760 --> 00:03:29.170
線形モデルとシグモイド関数のシーケンスを適用します

00:03:29.170 --> 00:03:32.825
これらのマップを組み合わせると非常な非線形マップになります

00:03:32.825 --> 00:03:37.310
また 最終的な式は単純なyハット イコール

00:03:37.310 --> 00:03:42.995
w2のシグモイド結合w1のシグモイドをxに適用となります

00:03:42.995 --> 00:03:48.025
冗長性のために これを多層パーセプトロンまたはニューラルネットワークで再び行います

00:03:48.025 --> 00:03:51.105
予測値yハットを計算するには

00:03:51.105 --> 00:03:53.380
ユニットベクターxから始めて

00:03:53.380 --> 00:03:55.560
最初の行列と

00:03:55.560 --> 00:04:00.405
シグモイド関数を適用して2番目の層の値を得ます

00:04:00.405 --> 00:04:05.360
次に2番目の行列ともうひとつのシグモイド関数を適用して

00:04:05.360 --> 00:04:13.315
3番目の層の値を求め 最終的な予測値yハットが得られるまで続けます

00:04:13.315 --> 00:04:16.430
また これはニューラルネットワークが入力ベクターから

00:04:16.430 --> 00:04:20.000
予測値を求めるために使用するフィードフォワードプロセスです

