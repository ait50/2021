WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.245
So, first let's add some math.

00:00:02.245 --> 00:00:07.020
We're going to label the horizontal axis corresponding to the test by the variable x1,

00:00:07.019 --> 00:00:11.329
and the vertical axis corresponding to the grades by the variable x2.

00:00:11.330 --> 00:00:14.250
So this boundary line that separates the blue

00:00:14.250 --> 00:00:17.504
and the red points is going to have a linear equation.

00:00:17.504 --> 00:00:22.820
The one drawn has equation 2x1+x2-18=0.

00:00:22.820 --> 00:00:24.214
What does this mean?

00:00:24.214 --> 00:00:27.629
This means that our method for accepting or rejecting students

00:00:27.629 --> 00:00:31.529
simply says the following: take this equation as our score,

00:00:31.530 --> 00:00:34.685
the score is 2xtest+grades-18.

00:00:34.685 --> 00:00:36.545
Now when the student comes in, we check their score.

00:00:36.545 --> 00:00:38.015
If their score is a positive number,

00:00:38.015 --> 00:00:39.899
then we accept the student and if the score is

00:00:39.899 --> 00:00:42.710
a negative number then we reject the student.

00:00:42.710 --> 00:00:44.460
This is called a prediction.

00:00:44.460 --> 00:00:46.620
We can say by convention that if the score is 0,

00:00:46.619 --> 00:00:49.484
we'll accept a student although this won't matter much at the end.

00:00:49.484 --> 00:00:53.210
And that's it. That linear equation is our model.

00:00:53.210 --> 00:01:00.420
In the more general case, our boundary will be an equation of the following wx1+w2x2+b=0.

00:01:00.420 --> 00:01:04.450
We'll abbreviate this equation in vector notation as wx+b=0,

00:01:04.450 --> 00:01:09.835
where w is the vector w1w2 and x is the vector x1x2.

00:01:09.834 --> 00:01:13.364
And we simply take the product of the two vectors.

00:01:13.364 --> 00:01:15.405
We'll refer to x as the input,

00:01:15.405 --> 00:01:19.000
to w as the weights and b as the bias.

00:01:19.000 --> 00:01:20.983
Now, for a student coordinates x1x2,

00:01:20.983 --> 00:01:26.189
we'll denote a label as Y and the label is what we're trying to predict.

00:01:26.189 --> 00:01:27.810
So if the student gets accepted,

00:01:27.810 --> 00:01:29.280
namely the point is blue,

00:01:29.280 --> 00:01:31.090
then the label is Y+1.

00:01:31.090 --> 00:01:33.338
And if the student gets rejected,

00:01:33.337 --> 00:01:36.809
namely the point is red and then the label is Y=0.

00:01:36.810 --> 00:01:39.825
Thus, each point is in the form

00:01:39.825 --> 00:01:45.810
x1x2Y or Y is 1 for the blue points and 0 for the red points.

00:01:45.810 --> 00:01:48.570
And finally, our prediction is going to be called Y-hat and it will

00:01:48.569 --> 00:01:51.919
be what the algorithm predicts that the label will be.

00:01:51.920 --> 00:01:56.614
In this case, Y-hat is one of the algorithm predicts that the student gets accepted,

00:01:56.614 --> 00:01:59.010
which means the point lies over the line.

00:01:59.010 --> 00:02:03.210
And, Y-hat is 0 if the algorithm predicts that this didn't get rejected,

00:02:03.209 --> 00:02:05.864
which means the point is under the line.

00:02:05.864 --> 00:02:11.507
In math terms, this means that the prediction Y-hat is 1 if wx+b

00:02:11.508 --> 00:02:17.469
is greater than or equal to zero and 0 if wx+b is less than 0.

00:02:17.469 --> 00:02:20.099
So, to summarize, the points above the line have

00:02:20.099 --> 00:02:24.810
Y hat=1 and the points below the line have Y-hat=0.

00:02:24.810 --> 00:02:30.314
And, the blue points have Y=1 and the red points have Y=0.

00:02:30.314 --> 00:02:35.609
And, the goal of the algorithm is to have Y-hat resembling Y as closely as possible,

00:02:35.610 --> 00:02:39.000
which is exactly equivalent to finding the boundary line that keeps

00:02:39.000 --> 00:02:43.009
most of the blue points above it and most of the red points below it.

