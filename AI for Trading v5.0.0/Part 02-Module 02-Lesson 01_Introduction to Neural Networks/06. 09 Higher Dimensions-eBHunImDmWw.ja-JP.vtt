WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:02.549
こんな場合はどうなるか気になる人もいるでしょう

00:00:02.549 --> 00:00:04.904
データ列がもっとあり 試験や成績だけでなく

00:00:04.905 --> 00:00:08.070
生徒のクラスでのランキングなどがある場合です

00:00:08.070 --> 00:00:11.065
3 つのデータ列をどう当てはめるのでしょうか

00:00:11.064 --> 00:00:12.809
ここでの唯一の違いは

00:00:12.810 --> 00:00:14.608
2 次元で処理せず

00:00:14.608 --> 00:00:16.955
3 次元で処理する点です

00:00:16.954 --> 00:00:19.289
このように 3 つの軸があります  x_1 は試験

00:00:19.289 --> 00:00:21.929
x_2 は成績 x_3 はクラスのランキングを表します

00:00:21.929 --> 00:00:23.625
データはこのように見えます

00:00:23.625 --> 00:00:26.899
多数の青い点と赤い点が 3D で飛び散っているようです

00:00:26.899 --> 00:00:29.607
今の方程式では 2D の線になりませんが

00:00:29.608 --> 00:00:34.009
前と似た方程式を使用すると 3D の平面になります

00:00:34.009 --> 00:00:40.434
方程式は w_1_x_1 + w_2_x_2 + w_3_x_3 + b = 0 となり

00:00:40.435 --> 00:00:43.950
この空間を 2 つの領域に区切ります

00:00:43.950 --> 00:00:47.925
この方程式はまだ Wx + b = 0 に縮めることができます

00:00:47.924 --> 00:00:52.489
ただし 現在ベクターには 2 つでなく 3 つのエントリーがあります

00:00:52.490 --> 00:00:54.810
予測としては まだ y ハットは

00:00:54.810 --> 00:00:57.570
Wx + b が 0 以上の場合 1

00:00:57.570 --> 00:01:00.825
Wx + b が 0 未満の場合は 0 になります

00:01:00.825 --> 00:01:04.570
多数の列 たとえば n 個の列があるとどうなるでしょうか

00:01:04.569 --> 00:01:09.429
これも同じことです  データは n 次元空間に飛び散っています

00:01:09.430 --> 00:01:12.120
ここで私は 3 次元を超える次元での表現に苦労しています

00:01:12.120 --> 00:01:17.355
しかし これらの点は n 座標 x_1 x_2

00:01:17.355 --> 00:01:22.245
x_3 ... x_n までとラベル y を持つものにすぎないと考えると

00:01:22.245 --> 00:01:26.865
境界は n-1 次元超平面になります

00:01:26.864 --> 00:01:32.084
これは 2D の線または 3D の平面に対する高次元の等価です

00:01:32.084 --> 00:01:33.209
そして この

00:01:33.209 --> 00:01:36.384
n-1 次元超平面の方程式は w_1_x_1 + w_2_x_2

00:01:36.384 --> 00:01:42.284
+ ... w_n_x_n + b = 0 になります

00:01:42.284 --> 00:01:46.048
これはまだ Wx + b = 0 に縮めることができます

00:01:46.048 --> 00:01:49.040
ここでベクターは n 個のエントリーを持ちます

00:01:49.040 --> 00:01:51.745
予測はまだ前と同じです

00:01:51.745 --> 00:01:55.530
y ハットは Wx + b が 0 以上の場合 1

00:01:55.530 --> 00:02:01.000
Wx + b が 0 未満の場合 y ハットは 0 になります

