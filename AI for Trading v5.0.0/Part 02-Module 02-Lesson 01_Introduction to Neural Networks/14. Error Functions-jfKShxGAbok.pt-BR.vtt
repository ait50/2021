WEBVTT
Kind: captions
Language: pt-BR

00:00:00.267 --> 00:00:02.567
Esta é a visualização
da função de erro.

00:00:02.601 --> 00:00:04.200
Nós estamos
no topo da montanha,

00:00:04.234 --> 00:00:06.900
do Monte Errorest,
e queremos descer,

00:00:06.934 --> 00:00:10.133
mas não é fácil, pois está
nublado e a montanha é alta,

00:00:10.167 --> 00:00:12.700
então nós não temos
uma visão geral.

00:00:12.734 --> 00:00:14.533
Para descermos,
nós olhamos ao redor

00:00:14.567 --> 00:00:18.133
e consideramos as direções
possíveis a serem tomadas.

00:00:18.167 --> 00:00:21.367
Nós escolhemos a que nos faz
descer mais.

00:00:21.401 --> 00:00:23.300
Digamos que seja esta aqui.

00:00:23.933 --> 00:00:26.000
Nós seguimos nesta direção,

00:00:26.034 --> 00:00:29.100
assim diminuímos a altura.

00:00:29.134 --> 00:00:32.500
Após o passo,
nós recomeçamos o processo

00:00:32.534 --> 00:00:34.533
sempre diminuindo a altura

00:00:34.567 --> 00:00:36.633
até descermos
toda a montanha

00:00:36.667 --> 00:00:38.200
e minimizarmos a altura.

00:00:39.200 --> 00:00:42.333
Neste caso, a métrica chave
para resolver o problema

00:00:42.367 --> 00:00:43.900
é a altura.

00:00:43.934 --> 00:00:45.633
Nós chamaremos
a altura de erro,

00:00:45.667 --> 00:00:48.600
que nos informa
como estamos indo

00:00:48.634 --> 00:00:51.400
e distância que estamos
da solução ideal.

00:00:51.434 --> 00:00:54.067
Se continuarmos agindo
para diminuir o erro,

00:00:54.101 --> 00:00:56.700
nós acabaremos
resolvendo o problema

00:00:56.734 --> 00:00:58.633
e descendo
do Monte Errorest.

00:00:59.433 --> 00:01:03.100
Você deve estar pensando
que isso não resolve o problema,

00:01:03.134 --> 00:01:05.267
pois podemos encontrar
um mínimo local,

00:01:05.301 --> 00:01:07.033
que não é o pé da montanha,

00:01:07.067 --> 00:01:08.833
isso é comum
no aprendizado de máquina

00:01:08.867 --> 00:01:11.833
e nós veremos formas
de resolver isso posteriormente.

00:01:11.867 --> 00:01:15.133
É bom lembrar que muitas vezes
o mínimo local

00:01:15.167 --> 00:01:18.133
nos fornece uma solução
para um problema.

00:01:18.167 --> 00:01:20.733
Este método, que veremos
em detalhe mais tarde,

00:01:20.767 --> 00:01:22.567
é chamado de gradiente
descendente.

00:01:23.200 --> 00:01:25.567
Vamos tentar isto
para resolver o problema.

00:01:25.601 --> 00:01:27.267
Qual seria
uma boa função de erro?

00:01:27.301 --> 00:01:30.633
Como poderíamos mostrar
o desempenho do computador?

00:01:30.667 --> 00:01:33.700
Aqui está a nossa linha
com a área positiva e negativa,

00:01:33.734 --> 00:01:36.600
e a pergunta é como informar
ao computador a distância

00:01:36.634 --> 00:01:38.200
perfeita até a solução?

00:01:38.234 --> 00:01:40.867
Talvez nós possamos contar
a quantidade de erros.

00:01:40.901 --> 00:01:43.300
Há dois erros aqui,
que é a nossa altura,

00:01:43.334 --> 00:01:44.500
o nosso erro.

00:01:44.534 --> 00:01:46.867
Assim como fizemos para descer
da montanha,

00:01:46.901 --> 00:01:49.767
nós olhamos as direções
que podemos mover a linha

00:01:49.801 --> 00:01:51.733
a fim de diminuir o erro.

00:01:52.467 --> 00:01:56.233
Movendo nesta direção,
o erro cai para um.

00:01:56.267 --> 00:02:00.733
E se movermos nesta direção,
o erro será zero

00:02:00.767 --> 00:02:02.900
e terminamos, certo?

00:02:02.934 --> 00:02:06.033
Quase.
Há um pequeno problema aqui.

00:02:06.067 --> 00:02:09.500
Nos algoritmos,
nós damos pequenos passos

00:02:09.534 --> 00:02:10.967
devido aos cálculos,

00:02:11.001 --> 00:02:14.733
pois os passos minúsculos
são calculados por derivativos.

00:02:14.767 --> 00:02:17.567
O que acontece se dermos
passos pequenos aqui?

00:02:17.601 --> 00:02:20.733
Nós começamos com dois erros
e movemos um pouco.

00:02:21.767 --> 00:02:23.700
Ainda temos dois erros.

00:02:23.734 --> 00:02:26.567
Movemos novamente
e ainda temos dois erros.

00:02:26.601 --> 00:02:29.200
Mais um pouco,
ainda temos dois.

00:02:29.234 --> 00:02:30.833
Fazemos isso várias vezes.

00:02:30.867 --> 00:02:32.767
Nós não podemos fazer
muitas coisas.

00:02:32.801 --> 00:02:34.933
Isso é como usar
gradiente descendente

00:02:34.967 --> 00:02:38.000
para descer de uma pirâmide
com degraus longos.

00:02:38.034 --> 00:02:41.100
Se estivermos no segundo piso,
que representa dois erros,

00:02:41.134 --> 00:02:44.300
nós sempre veremos
dois erros

00:02:44.334 --> 00:02:47.267
e ficaremos confusos
e sem saber o que fazer.

00:02:47.301 --> 00:02:49.233
Por outro lado,
no Monte Errorest,

00:02:49.267 --> 00:02:52.800
nós detectamos variações
de altura e podemos descobrir

00:02:52.834 --> 00:02:55.933
em qual direção
desceremos mais.

00:02:56.767 --> 00:02:58.067
Em termos matemáticos,

00:02:58.101 --> 00:03:00.333
para usarmos
o gradiente descendente,

00:03:00.367 --> 00:03:02.833
a função de erro
não pode ser discreta,

00:03:02.867 --> 00:03:04.667
ela deve ser contínua.

00:03:04.701 --> 00:03:06.267
O Monte Errorest é contínuo,

00:03:06.301 --> 00:03:08.033
pois pequenas variações
de posição

00:03:08.067 --> 00:03:10.567
serão traduzidas em pequenas
variações de altura,

00:03:10.601 --> 00:03:12.200
mas a pirâmide não é assim,

00:03:12.234 --> 00:03:14.133
pois a altura pula
de dois para um

00:03:14.167 --> 00:03:15.767
e de um para zero.

00:03:15.801 --> 00:03:18.900
Na verdade, a função de erro
precisa ser diferenciável,

00:03:18.934 --> 00:03:20.967
mas nós veremos
isso depois.

00:03:21.001 --> 00:03:24.533
Nós precisamos construir
uma função de erro contínua.

00:03:24.567 --> 00:03:26.300
Nós faremos isso a seguir.

00:03:26.334 --> 00:03:28.100
Estes são os seis pontos,

00:03:28.134 --> 00:03:32.000
quatro estão classificados
corretamente, dois azuis

00:03:32.034 --> 00:03:33.533
e dois vermelhos,

00:03:33.567 --> 00:03:35.967
e dois estão classificados
erroneamente,

00:03:36.001 --> 00:03:38.233
este ponto vermelho
à esquerda

00:03:38.267 --> 00:03:40.233
e o azul à direita.

00:03:41.000 --> 00:03:43.767
A função de erro
dará uma grande penalidade

00:03:43.801 --> 00:03:46.000
aos dois pontos
classificados erroneamente

00:03:46.034 --> 00:03:49.433
e uma pequena penalidade
aos pontos corretos.

00:03:50.133 --> 00:03:53.800
Nós representamos o tamanho
do ponto conforme a penalidade.

00:03:54.433 --> 00:03:56.767
A penalidade é
a distância do limite

00:03:56.801 --> 00:03:58.933
quando o ponto é
classificado erroneamente,

00:03:58.967 --> 00:04:01.800
e é quase zero quando
o ponto está correto.

00:04:02.900 --> 00:04:06.367
Nós veremos a fórmula do erro
posteriormente.

00:04:06.401 --> 00:04:09.233
Nós obtemos o total de erros
adicionando os erros

00:04:09.267 --> 00:04:10.767
dos pontos correspondentes.

00:04:10.801 --> 00:04:13.300
Nós temos um valor alto,
então os pontos errados

00:04:13.334 --> 00:04:15.433
adicionam muito ao erro.

00:04:15.467 --> 00:04:19.367
Nós devemos mover a linha
para diminuir o erro.

00:04:19.401 --> 00:04:22.600
Mas agora podemos fazer
pequenas mudanças

00:04:22.634 --> 00:04:24.267
nos parâmetros da linha

00:04:24.301 --> 00:04:26.267
que se somarão
às pequenas alterações

00:04:26.301 --> 00:04:27.900
na função de erro.

00:04:27.934 --> 00:04:30.267
Se movermos
a linha nesta direção,

00:04:30.301 --> 00:04:33.467
vemos que alguns erros
diminuíram e outros aumentaram,

00:04:33.501 --> 00:04:37.200
mas, se observarmos a soma,
ela diminui.

00:04:37.234 --> 00:04:40.633
Isso é porque classificamos
corretamente os dois pontos

00:04:40.667 --> 00:04:43.033
que tinham sido classificados
erroneamente.

00:04:43.067 --> 00:04:45.600
Quando conseguirmos construir
uma função de erro

00:04:45.634 --> 00:04:46.933
com esta propriedade,

00:04:46.967 --> 00:04:49.467
nós podemos utilizar
gradiente descendente

00:04:49.501 --> 00:04:51.500
para resolver o problema.

00:04:51.534 --> 00:04:55.133
Nós estamos no topo
do Monte Errorest.

00:04:55.167 --> 00:04:57.933
Nós estamos no alto,
pois nosso erro é grande.

00:04:57.967 --> 00:05:00.567
Como podemos ver,
o erro é uma altura,

00:05:00.601 --> 00:05:03.233
que é a soma das áreas
azul e vermelha.

00:05:04.067 --> 00:05:07.033
Nós exploramos para ver
em qual direção descemos mais

00:05:07.067 --> 00:05:11.900
ou qual direção move a linha
para remover mais o erro.

00:05:11.934 --> 00:05:14.233
Nós seguimos nesta direção.

00:05:15.133 --> 00:05:16.333
Na montanha,

00:05:16.367 --> 00:05:18.767
nós descemos um passo
e o gráfico reduz o erro

00:05:18.801 --> 00:05:21.333
classificando corretamente
um dos pontos.

00:05:21.367 --> 00:05:24.167
Nós fazemos novamente.
Calculamos o erro,

00:05:24.201 --> 00:05:27.833
observamos para ver
onde descemos mais

00:05:27.867 --> 00:05:30.033
e seguimos nesta direção.

00:05:30.067 --> 00:05:32.167
Isso nos desce da montanha.

00:05:32.800 --> 00:05:36.800
À esquerda, reduzimos a altura
e descemos da montanha.

00:05:36.834 --> 00:05:41.733
À direita, nós reduzimos o erro
para o menor valor possível

00:05:41.767 --> 00:05:44.300
e conseguimos classificar
os pontos.

00:05:45.100 --> 00:05:49.033
A pergunta é como definimos
a função de erro?

00:05:49.067 --> 00:05:50.600
É isso que faremos a seguir.

