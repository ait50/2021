WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.685
你已经知道 PC 是什么

00:00:03.685 --> 00:00:07.800
下面我将讲解关于如何使用 PC 的重要概念

00:00:07.799 --> 00:00:12.570
实际上 我们通常并不使用所有 PC

00:00:12.570 --> 00:00:17.475
只是使用部分 PC 并且从第一个 PC 开始

00:00:17.475 --> 00:00:20.920
我们认为它能解释方差的大部分

00:00:20.920 --> 00:00:23.590
稍后我会解释这句话的意思

00:00:23.589 --> 00:00:28.379
例如 对于这个二维数据集

00:00:28.379 --> 00:00:31.894
如果我们决定只使用第一个 PC

00:00:31.894 --> 00:00:36.234
而不使用每个数据点的 x 坐标和 y 坐标

00:00:36.234 --> 00:00:40.159
我们仅使用一个坐标

00:00:40.159 --> 00:00:44.574
它表示点与第一个基向量维度的距离

00:00:44.575 --> 00:00:49.859
这是同一数据集的低维表示法

00:00:49.859 --> 00:00:55.354
如果数据近似地沿着一条线分布 这种方法最合理

00:00:55.354 --> 00:00:57.669
在这个新表示法中

00:00:57.670 --> 00:01:00.469
我们丢失了关于原始数据点

00:01:00.469 --> 00:01:05.789
与第一个 PC 垂直的方向的距离这一信息

00:01:05.790 --> 00:01:08.395
但是 如果这些距离很小

00:01:08.394 --> 00:01:11.164
并没有丢失多少信息

00:01:11.165 --> 00:01:14.420
如果数据有很多维度

00:01:14.420 --> 00:01:17.775
如何决定要使用多少个 PC？

00:01:17.775 --> 00:01:20.505
这取决于具体应用

00:01:20.504 --> 00:01:24.469
但一种方法是计算每个 PC 能解释的方差量

00:01:24.469 --> 00:01:30.135
并丢弃解释方差量最少的 PC

00:01:30.135 --> 00:01:35.365
似乎比较合理 但是如何定量实施呢？

00:01:35.364 --> 00:01:41.435
我们知道沿着每个维度的方差在 PCA 中是很重要的量

00:01:41.435 --> 00:01:44.210
实际上 原始基向量下的总方差

00:01:44.209 --> 00:01:48.334
等于新基向量下的总方差

00:01:48.334 --> 00:01:50.699
我来解释下

00:01:50.700 --> 00:01:54.159
先从之前已有的三个数据点开始

00:01:54.159 --> 00:01:57.465
这些数据点已经均值居中

00:01:57.465 --> 00:02:01.750
沿着原始水平维度的方差

00:02:01.750 --> 00:02:05.614
等于这些长度的平方和

00:02:05.614 --> 00:02:09.139
沿着原始垂直维度的方差

00:02:09.139 --> 00:02:12.454
等于这些长度的平方和

00:02:12.455 --> 00:02:15.455
根据勾股定理

00:02:15.455 --> 00:02:20.060
所有这些长度的平方和等于

00:02:20.060 --> 00:02:25.175
每个点到原点的距离的平方和

00:02:25.175 --> 00:02:28.750
当我们找到新的 PC 基向量时

00:02:28.750 --> 00:02:32.610
我们可以计算沿着新维度的方差

00:02:32.610 --> 00:02:37.825
但是因为每个维度依然与其他维度正交

00:02:37.824 --> 00:02:41.449
所以每个维度的方差之和

00:02:41.449 --> 00:02:47.464
依然等于每个点到原点的距离平方

00:02:47.465 --> 00:02:49.490
因为所有数据点的方差之和

00:02:49.490 --> 00:02:53.659
由它们到中心的距离决定

00:02:53.659 --> 00:02:56.490
所以总方差之和不变

00:02:56.490 --> 00:02:59.555
无论你选择哪种基向量

00:02:59.555 --> 00:03:02.510
这个量 即每个数据点

00:03:02.509 --> 00:03:05.539
到原点的距离平方和

00:03:05.539 --> 00:03:08.259
称为数据的总方差

00:03:08.259 --> 00:03:10.465
你已经知道

00:03:10.465 --> 00:03:12.740
每个主成分

00:03:12.740 --> 00:03:14.969
即数据的每个新维度

00:03:14.969 --> 00:03:19.484
都关联总方差的一部分

00:03:19.485 --> 00:03:22.855
第一个 PC 关联最多的方差

00:03:22.854 --> 00:03:24.625
第二个 PC 关联次多的方差

00:03:24.625 --> 00:03:26.425
以此类推

00:03:26.425 --> 00:03:30.740
为了决定要保留多少个 PC

00:03:30.740 --> 00:03:33.379
我们可以看看数据沿着每个维度的方差

00:03:33.379 --> 00:03:38.870
并丢弃数据沿着它变化最小的维度

00:03:38.870 --> 00:03:44.480
从这个角度来说 PCA 是一种降维算法

00:03:44.479 --> 00:03:49.250
当我们丢弃只能解释很少的数据差异的维度时

00:03:49.250 --> 00:03:51.500
我们丢弃了一些信息

00:03:51.500 --> 00:03:56.530
但是保留了大部分差异 所以保留了大部分信息

