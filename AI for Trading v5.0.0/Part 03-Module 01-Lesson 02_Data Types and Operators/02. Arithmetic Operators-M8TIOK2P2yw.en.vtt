WEBVTT
Kind: captions
Language: en

00:00:01.940 --> 00:00:04.185
In the last video,

00:00:04.184 --> 00:00:09.074
you saw this line of Python that computes the sum of 3 and 5.

00:00:09.074 --> 00:00:13.274
The plus sign and this line is an arithmetic operator.

00:00:13.275 --> 00:00:16.265
Python has several arithmetic operators

00:00:16.265 --> 00:00:19.560
most of which follow the usual rules of Mathematics.

00:00:19.559 --> 00:00:22.259
Let's look at the first four,

00:00:22.260 --> 00:00:29.804
in Python addition and subtraction are performed with the usual symbols, plus and minus.

00:00:29.804 --> 00:00:32.887
Multiplication uses an asterisk,

00:00:32.887 --> 00:00:35.864
and division uses a forward slash.

00:00:35.865 --> 00:00:40.989
Here you can see that multiplication happens before addition.

00:00:40.988 --> 00:00:43.109
This is because Python follows

00:00:43.109 --> 00:00:49.155
Mathematical Order of Operations which you can get a refresher on in the notes below.

00:00:49.155 --> 00:00:51.660
If you want addition to come first,

00:00:51.659 --> 00:00:54.329
you can enclose this part in parentheses.

00:00:54.329 --> 00:00:57.375
Moving on from those four,

00:00:57.375 --> 00:01:00.450
here's the operator for exponentiation.

00:01:00.450 --> 00:01:05.625
You can raise one number to the power of another with two asterisks.

00:01:05.625 --> 00:01:12.076
For example, this line prints three to the power of two which results in nine.

00:01:12.076 --> 00:01:15.069
There's another operator that is sometimes

00:01:15.069 --> 00:01:18.909
mistaken for the exponentiation operator. The caret.

00:01:18.909 --> 00:01:23.649
This actually performs a more obscure operation called bitwise XOR.

00:01:23.650 --> 00:01:30.010
This is an arithmetic operator that doesn't follow the usual rules of Mathematics.

00:01:30.010 --> 00:01:34.734
Bitwise operators are not something you need to know for this course but,

00:01:34.734 --> 00:01:38.500
if you're interested there's information about this in the notes below.

00:01:38.500 --> 00:01:43.290
All you need to remember is that if you perform exponentiation,

00:01:43.290 --> 00:01:45.690
you use two asterisks and not with

00:01:45.689 --> 00:01:50.219
a caret or you'll accidentally produce very confusing results.

00:01:50.219 --> 00:01:56.265
Another useful operator is this percent sign which performs the modulo operation.

00:01:56.265 --> 00:02:01.515
It returns the remainder after you've divided the first number by the second.

00:02:01.515 --> 00:02:07.890
In this example, nine divided by two is four with a remainder of one.

00:02:07.890 --> 00:02:12.090
So this line would print one since modulo gives us the remainder.

00:02:12.090 --> 00:02:18.254
You might also find use for integer division denoted by two forward slashes.

00:02:18.254 --> 00:02:23.625
It divides one integer by another but rather than giving the exact answer,

00:02:23.625 --> 00:02:26.835
it rounds down the answer down to an integer.

00:02:26.835 --> 00:02:32.474
Seven divided by two is three point five which rounds down to three.

00:02:32.474 --> 00:02:36.329
Notice it rounds down even if the answer is negative.

00:02:36.330 --> 00:02:41.700
In this case, negative three point five was rounded down to negative four.

00:02:41.699 --> 00:02:44.909
There are other categories of operators that we'll learn about

00:02:44.909 --> 00:02:49.449
soon but these are all the arithmetic operators in Python.

