WEBVTT
Kind: captions
Language: en

00:00:02.899 --> 00:00:08.009
One thing you might have noticed is that in a single line of Python,

00:00:08.009 --> 00:00:11.550
whitespace doesn't really affect how your code works.

00:00:11.550 --> 00:00:18.675
For example, this will give exactly the same output as this, however.

00:00:18.675 --> 00:00:22.890
That doesn't mean that these lines are equally good lines of code.

00:00:22.890 --> 00:00:26.310
Learning how to write clear and readable code is

00:00:26.309 --> 00:00:30.945
critical for others in your company and future you to understand.

00:00:30.945 --> 00:00:35.100
Here are some best practices for code style in Python.

00:00:35.100 --> 00:00:37.785
When you call a function like print,

00:00:37.784 --> 00:00:41.804
put the opening parentheses straight after the name of the function,

00:00:41.804 --> 00:00:45.255
like here. Not like this.

00:00:45.255 --> 00:00:49.905
Don't put extra spaces immediately inside the parentheses either.

00:00:49.905 --> 00:00:53.700
So, this is good. But this isn't.

00:00:53.700 --> 00:00:55.830
If you are mixing operators with

00:00:55.829 --> 00:00:59.744
different priorities like multiplication and subtraction,

00:00:59.744 --> 00:01:03.254
then you might like to add a space around the lower priority,

00:01:03.255 --> 00:01:05.234
in this case subtraction,

00:01:05.234 --> 00:01:07.754
to make the code easier to read.

00:01:07.754 --> 00:01:13.204
See how this is slightly harder to comprehend for operation order.

00:01:13.204 --> 00:01:16.914
Don't write extremely long lines of code.

00:01:16.915 --> 00:01:18.895
They're hard to understand.

00:01:18.894 --> 00:01:25.704
People commonly limit themselves to lines that are 79 or 99 characters long.

00:01:25.704 --> 00:01:28.539
If you feel like you need to write longer lines,

00:01:28.540 --> 00:01:34.735
consider rewriting, simplifying, or separating your code into multiple lines.

00:01:34.734 --> 00:01:38.709
These conventions come from the Python developers guide,

00:01:38.709 --> 00:01:43.209
which has a style guide called PEP 8, which is linked below.

00:01:43.209 --> 00:01:45.039
There's a lot in there.

00:01:45.040 --> 00:01:48.555
Don't worry, you don't need to digest it all now.

00:01:48.555 --> 00:01:51.620
Why are these conventions important?

00:01:51.620 --> 00:01:55.691
Although how you format the code doesn't affect how it runs,

00:01:55.691 --> 00:01:59.210
following standard style guidelines makes code

00:01:59.209 --> 00:02:03.694
easier to read and consistent among different developers on a team.

00:02:03.694 --> 00:02:06.649
So, it's a good idea to follow the guidelines,

00:02:06.650 --> 00:02:09.080
even with one line expressions.

00:02:09.080 --> 00:02:15.560
It will be useful to refer back to PEP 8 once in a while to get your Python style right.

00:02:15.560 --> 00:02:20.585
Later, we'll also learn about tools that can check your code for you,

00:02:20.585 --> 00:02:24.260
and provide suggestions based on PEP 8 guidelines.

