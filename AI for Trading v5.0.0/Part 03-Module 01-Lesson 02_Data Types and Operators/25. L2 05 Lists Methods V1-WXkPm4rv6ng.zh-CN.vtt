WEBVTT
Kind: captions
Language: zh-CN

00:00:02.240 --> 00:00:07.634
我们来看一个适合列表的新字符串方法 叫做 join()

00:00:07.634 --> 00:00:10.800
join() 将列表当做参数

00:00:10.800 --> 00:00:15.385
返回由列表元素组成并用分隔符字符串相连的字符串

00:00:15.384 --> 00:00:18.929
在此示例中 我们使用字符串“\n”作为分隔符

00:00:18.929 --> 00:00:22.934
使每个元素之间都有一个换行符

00:00:22.934 --> 00:00:24.769
fore 换行符 aft

00:00:24.769 --> 00:00:29.545
换行符 starboard 换行符 port

00:00:29.545 --> 00:00:32.820
我们还可以在连接时使用其他字符串作为分隔符

00:00:32.820 --> 00:00:35.429
在此示例中 我们使用了连字符

00:00:35.429 --> 00:00:37.799
请务必注意用英文逗号分隔

00:00:37.799 --> 00:00:40.949
每个要连接的列表项

00:00:40.950 --> 00:00:42.405
忘记这么做的话

00:00:42.405 --> 00:00:43.905
不会触发错误

00:00:43.905 --> 00:00:46.969
但是会出现意外结果

00:00:46.969 --> 00:00:48.524
在下面的示例中

00:00:48.524 --> 00:00:53.894
忘记在 Garcia 和 O'Kelly 之间加上逗号会形成以下结果

00:00:53.895 --> 00:00:56.910
注意 Garcia 和 O'Kelly 之间缺少连字符

00:00:56.909 --> 00:01:02.059
这两个字符串连到了一起

00:01:02.060 --> 00:01:06.375
这是因为 Python 的默认字符串字面量是相连到一起

00:01:06.375 --> 00:01:09.745
如果 join() 返回的不是期望的结果

00:01:09.745 --> 00:01:11.939
检查是否缺少逗号

00:01:11.939 --> 00:01:18.474
此外注意 如果我们尝试连接字符串之外的数据 join() 将触发错误

00:01:18.474 --> 00:01:23.699
因为该列表中包含整数 所以出现了错误

00:01:23.700 --> 00:01:29.109
最后 实用方法 append() 会将元素添加到列表末尾

00:01:29.109 --> 00:01:33.079
接下来 你将练习处理列表并学习更多列表方法

