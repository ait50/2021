WEBVTT
Kind: captions
Language: pt-BR

00:00:01.667 --> 00:00:03.801
LISTS E OPERADORES DE ASSOCIAÇÃO,
PARTE 2

00:00:03.868 --> 00:00:07.467
Além de acessar
elementos individuais em uma lista,

00:00:07.534 --> 00:00:09.968
podemos utilizar a notação
de fatiamento Python

00:00:10.000 --> 00:00:12.634
para acessar uma subsequência
de uma lista.

00:00:12.667 --> 00:00:17.267
Isso significa utilizar índices
para fatiar partes de um objeto

00:00:17.300 --> 00:00:19.434
como uma string
ou uma lista.

00:00:19.467 --> 00:00:22.000
Um exemplo
deixa isso bem claro.

00:00:22.033 --> 00:00:24.734
Veja esta lista de meses.

00:00:25.767 --> 00:00:30.701
Podemos fatiar a terceiro trimestre
do ano desta forma.

00:00:30.734 --> 00:00:33.801
O índice à esquerda
dos dois pontos, seis,

00:00:33.834 --> 00:00:35.901
é onde o fatiamento começa.

00:00:35.968 --> 00:00:39.701
Ele continua
até o segundo índice, nove.

00:00:39.734 --> 00:00:42.934
Perceba que seis
é o índice de julho,

00:00:42.968 --> 00:00:45.834
mas nove
é o índice de outubro.

00:00:45.901 --> 00:00:48.000
O limite inferior
é inclusivo,

00:00:48.033 --> 00:00:51.067
mas o superior é exclusivo.

00:00:51.100 --> 00:00:53.300
Existem alguns atalhos
de fatiamento

00:00:53.367 --> 00:00:56.167
que simplificam
situações comuns.

00:00:56.200 --> 00:01:00.767
Se desejarmos fatiar algo
que comece do início da lista,

00:01:00.834 --> 00:01:03.701
podemos omitir
o índice de início desta forma.

00:01:04.367 --> 00:01:09.434
Se desejamos fatiar algo
até o fim da lista,

00:01:09.467 --> 00:01:12.901
podemos omitir
o índice final desta forma.

00:01:12.968 --> 00:01:17.167
List é um tipo, assim como
string, float e int.

00:01:17.234 --> 00:01:18.701
Dos tipos que vimos,

00:01:18.767 --> 00:01:21.901
"list" se parece mais
com "string".

00:01:21.934 --> 00:01:24.400
Ambos suportam
a função "LEN",

00:01:24.434 --> 00:01:27.234
a de indexação
e a de fatiamento.

00:01:27.267 --> 00:01:30.067
Vemos aqui que o comprimento
de uma string

00:01:30.133 --> 00:01:32.000
é o número de caracteres,

00:01:32.033 --> 00:01:36.067
e o da list
é o número de elementos.

00:01:36.100 --> 00:01:38.734
A indexação a partir do zero
serve aos dois,

00:01:38.767 --> 00:01:42.167
bem como o fatiamento
baseado nos índices.

00:01:42.200 --> 00:01:44.000
Outras coisas
que eles suportam

00:01:44.033 --> 00:01:47.434
são os operadores de associação
"in" e "not in".

00:01:47.501 --> 00:01:50.434
O "in" avalia
se o objeto à esquerda

00:01:50.467 --> 00:01:53.334
está incluso no objeto
à direita.

00:01:53.400 --> 00:01:56.601
O "not in" avalia
se o objeto à esquerda

00:01:56.634 --> 00:02:00.133
não está incluso
no objeto à direita.

00:02:00.200 --> 00:02:04.434
Aqui vemos se a string "her"
está nesta string,

00:02:04.501 --> 00:02:06.234
que está bem aqui.

00:02:06.267 --> 00:02:08.968
Porém, "domingo"
não está na lista,

00:02:09.000 --> 00:02:10.701
pois ela só mostra os meses.

