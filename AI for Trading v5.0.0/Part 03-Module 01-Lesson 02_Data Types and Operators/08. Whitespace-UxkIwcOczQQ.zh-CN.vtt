WEBVTT
Kind: captions
Language: zh-CN

00:00:02.899 --> 00:00:08.009
你可能注意到了一点 在一行 Python 代码中

00:00:08.009 --> 00:00:11.550
空格并不会影响到代码的运行效果

00:00:11.550 --> 00:00:18.675
例如 这行代码和这行代码的输出完全一样

00:00:18.675 --> 00:00:22.890
但是 这并不表示这行代码是同样很好的代码

00:00:22.890 --> 00:00:26.310
学习如何编写易于读懂的清晰代码

00:00:26.309 --> 00:00:30.945
对公司内的其他同事以及日后阅读来说非常重要

00:00:30.945 --> 00:00:35.100
下面介绍下 Python 中的代码样式最佳做法

00:00:35.100 --> 00:00:37.785
在调用 print 等函数时

00:00:37.784 --> 00:00:41.804
将左括号直接放在函数名称之后

00:00:41.804 --> 00:00:45.255
就像这样 而不是这样

00:00:45.255 --> 00:00:49.905
也不要在括号后面加上多余的空格

00:00:49.905 --> 00:00:53.700
这个很好 这个不行

00:00:53.700 --> 00:00:55.830
如果使用了多种运算符并且优先级不同

00:00:55.829 --> 00:00:59.744
例如乘法和减法

00:00:59.744 --> 00:01:03.254
则需要在优先级低的运算符周围加上空格

00:01:03.255 --> 00:01:05.234
这里是减号周围

00:01:05.234 --> 00:01:07.754
使代码更容易阅读

00:01:07.754 --> 00:01:13.204
这样不太容易看出运算顺序

00:01:13.204 --> 00:01:16.914
一行代码不要太长

00:01:16.915 --> 00:01:18.895
这样很难看懂

00:01:18.894 --> 00:01:25.704
人们通常能读懂一行有 79 - 99 个字符的代码

00:01:25.704 --> 00:01:28.539
如果你觉得一行需要更长

00:01:28.540 --> 00:01:34.735
则考虑重新编写 简化或将代码分成多行

00:01:34.734 --> 00:01:38.709
这些规范摘自 Python 开发者指南

00:01:38.709 --> 00:01:43.209
有一个叫做 PEP 8 的样式指南 下面给出了链接

00:01:43.209 --> 00:01:45.039
其中列出了很多条目

00:01:45.040 --> 00:01:48.555
别担心 你不需要立即理解所有内容

00:01:48.555 --> 00:01:51.620
这些规范为何很重要？

00:01:51.620 --> 00:01:55.691
虽然代码格式不会影响到代码的运行

00:01:55.691 --> 00:01:59.210
但是遵守标准样式指南使代码更容易读懂

00:01:59.209 --> 00:02:03.694
并且在团队内的多个开发者之间保持一致性

00:02:03.694 --> 00:02:06.649
因此建议你遵守这些指南

00:02:06.650 --> 00:02:09.080
即使只是一行代码

00:02:09.080 --> 00:02:15.560
建议偶尔参考下 PEP 8 以便采用正确的 Python 样式

00:02:15.560 --> 00:02:20.585
稍后 我们将学习根据 PEP 8 指南

00:02:20.585 --> 00:02:24.260
帮助检查代码并提供建议的工具

