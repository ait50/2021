WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.169
到目前为止 我们已经了解了

00:00:04.169 --> 00:00:08.519
在 Python 中处理数据的两种方式 即运算符和函数

00:00:08.519 --> 00:00:10.529
我们使用了这样的运算符

00:00:10.529 --> 00:00:14.904
它们会对运算符两侧的两个值进行处理

00:00:14.904 --> 00:00:18.460
还使用了 print 和 len 等函数

00:00:18.460 --> 00:00:21.780
函数和运算符非常相似

00:00:21.780 --> 00:00:25.400
实际上 唯一区别是它们的外观

00:00:25.399 --> 00:00:30.919
函数输入放入括号里 而不是放在运算符旁边

00:00:30.920 --> 00:00:35.525
函数具有描述性名称 而不是简短的符号

00:00:35.524 --> 00:00:40.725
还有处理值的第三种技巧 即方法

00:00:40.725 --> 00:00:44.695
学习方法的最佳方式是看一个示例

00:00:44.695 --> 00:00:47.466
看看这个 title() 方法

00:00:47.466 --> 00:00:49.375
方法和函数相关

00:00:49.375 --> 00:00:55.024
但是和函数不同的是 方法与特定类型的对象有关

00:00:55.024 --> 00:01:00.640
也就是说 不同的方法取决于要处理的数据类型

00:01:00.640 --> 00:01:04.564
在此示例中 对象是一个字符串

00:01:04.564 --> 00:01:08.694
值是 Sebastian Thrun 我们要调用其 title() 方法

00:01:08.694 --> 00:01:12.527
该方法返回一个职称形式的字符串

00:01:12.528 --> 00:01:16.885
也就是每个单词的首字母都大写

00:01:16.885 --> 00:01:20.728
因此 方法是属于某个对象的函数

00:01:20.728 --> 00:01:24.799
例如字符串对象

00:01:24.799 --> 00:01:27.750
我们再看另一个字符串方法 islower()

00:01:27.750 --> 00:01:33.719
islower() 方法会检查字符串中的字符是否为小写形式

00:01:33.719 --> 00:01:37.510
在此示例中 字符串对象是 sebastian thrun

00:01:37.510 --> 00:01:40.020
islower() 返回 true

00:01:40.019 --> 00:01:43.109
因为没有大写字母

00:01:43.109 --> 00:01:46.635
你可能注意到了 当我们调用方法 islower() 和 title() 时

00:01:46.635 --> 00:01:49.350
我们使用括号 但是并没有像调用函数那样

00:01:49.349 --> 00:01:53.079
在括号里放入任何内容

00:01:53.079 --> 00:01:56.989
括号里的输入称为参数

00:01:56.989 --> 00:02:02.024
因为方法是属于对象的特殊函数

00:02:02.025 --> 00:02:06.090
对象始终是方法的第一个参数

00:02:06.090 --> 00:02:09.330
因此 虽然括号里什么也没有

00:02:09.330 --> 00:02:13.285
但是 islower() 和 title() 的确具有参数

00:02:13.284 --> 00:02:17.250
参数伪装成了字符串对象

00:02:17.250 --> 00:02:22.500
我们来尝试一个包含多个参数（而不仅仅只是对象本身）的方法 叫做 count()

00:02:22.500 --> 00:02:30.064
这里 count() 方法返回字符串中出现子字符串“fish”的次数

00:02:30.064 --> 00:02:33.079
对象是字符串

00:02:33.080 --> 00:02:36.230
“one fish, two fish, red fish, blue fish”

00:02:36.229 --> 00:02:39.109
方法是 .count

00:02:39.110 --> 00:02:43.000
单词 fish 在该字符串中出现了四次

