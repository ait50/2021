WEBVTT
Kind: captions
Language: ar

00:00:00.434 --> 00:00:05.806
إن فهم كيفية أداء العمليات الحسابية
في لغة Python مفيد،

00:00:05.906 --> 00:00:11.712
لكن فهم كيفية استخدام المتغيّرات بإمكانه
أن يجعل Python أكثر من مجرد آلة حاسبة.

00:00:11.812 --> 00:00:17.384
إن لاستخدام المتغيّرات ميّزات عديدة
تجعلها أفضل من الأعداد المجردة.

00:00:17.484 --> 00:00:22.055
دعونا نبدأ. إن إنشاء متغيّر جديد
في Python أمر بسيط.

00:00:22.155 --> 00:00:25.826
هذا متغيّر يُخزن
عدد سكان مدينة Mountain View.

00:00:25.926 --> 00:00:30.797
اسم المتغيّر في هذا المثال
هو mv_population.

00:00:30.898 --> 00:00:38.405
علامة يساوي" = " هي علامة الإسناد
وقيمة المتغيّر هي 74728.

00:00:38.505 --> 00:00:42.376
لاحظ أن هذا ليس مجرد تعبير عن المساواة

00:00:42.476 --> 00:00:47.414
كما في الرياضيات
حيث س = ص و ص = س لهما المعنى ذاته.

00:00:47.514 --> 00:00:50.584
في Python، علامة يساوي " = " هي عامل تشغيل

00:00:50.684 --> 00:00:55.322
يُسند القيمة التي على اليمين
إلى اسم المتغير الذي على اليسار.

00:00:55.422 --> 00:00:58.592
بعبارة أخرى،
أياً كانت العبارة التي على الجانب الأيسر

00:00:58.692 --> 00:01:02.296
فهي الآن اسم للقيمة الموجودة
على الجانب الأيمن.

00:01:02.396 --> 00:01:04.965
لنطلع على مثال آخر.

00:01:05.065 --> 00:01:08.101
يعرّف السطر الأول "x" على أن قيمتها 2،

00:01:08.202 --> 00:01:15.108
ويعرّف السطر الثاني "y" على أنها قيمة "x"
والتي تتم طباعتها في السطر الثالث.

00:01:15.209 --> 00:01:19.079
لاحظ أنه يمكننا استخدام
اسم المتغيّر للوصول إلى قيمته.

00:01:19.179 --> 00:01:23.217
في هذا السطر،
احتجنا فقط إلى اسم المتغيّر "x"

00:01:23.317 --> 00:01:26.386
لتعريف "y" على أنها قيمتها، ألا وهي 2.

00:01:26.486 --> 00:01:29.156
كذلك في السطر التالي،

00:01:29.256 --> 00:01:33.627
استطعنا طباعة
قيمة "y" باستخدام الاسم "y" فقط.

00:01:33.727 --> 00:01:36.430
إذا حاولت الوصول إلى قيمة متغيّر ما

00:01:36.530 --> 00:01:39.433
لم يتم تعريفه مسبقاً،
فستظهر لك رسالة الخطأ هذه.

00:01:39.533 --> 00:01:42.035
الخطأ مشروح بوضوح في رسالة الخطأ،

00:01:42.135 --> 00:01:44.938
الاسم "z" غير معرّف.

