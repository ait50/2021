WEBVTT
Kind: captions
Language: en

00:00:00.270 --> 00:00:01.780
And I would say the answer's yes.

00:00:01.780 --> 00:00:07.520
You could make it so that the cluster centers sit right on top of each other,

00:00:07.520 --> 00:00:10.180
and the separation line looks like this.

00:00:10.180 --> 00:00:13.500
And all the top points are associated to the top cluster center,

00:00:13.500 --> 00:00:17.370
and all the bottom points are associated to the bottom cluster center.

00:00:17.370 --> 00:00:19.815
Granted, it's unlikely, to have init-,

00:00:19.815 --> 00:00:21.100
,initialization like this, but

00:00:21.100 --> 00:00:26.600
if it happens, then the algorithm would believe this is one cluster.

00:00:26.600 --> 00:00:28.350
And this is another cluster.

00:00:28.350 --> 00:00:31.410
If we re-run it and you initialize differently.

00:00:31.410 --> 00:00:33.120
Say one of the cluster centers sits over here.

00:00:34.180 --> 00:00:35.960
Then a separation line will fall like that.

00:00:37.270 --> 00:00:40.190
And the classes would automatically resolve themselves.

00:00:40.190 --> 00:00:43.130
It's unlikely, but there exists a bad local minimum,

00:00:43.130 --> 00:00:44.759
even in the example I showed you over here.

00:00:46.220 --> 00:00:47.200
Now as a rule of thumb,

00:00:47.200 --> 00:00:51.190
the more cluster centers you have, the more local minima you find.

00:00:51.190 --> 00:00:56.170
But they exist, as a result, you are forced to run the algorithm multiple times.

