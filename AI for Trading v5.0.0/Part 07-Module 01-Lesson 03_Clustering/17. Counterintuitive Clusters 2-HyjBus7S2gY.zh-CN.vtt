WEBVTT
Kind: captions
Language: zh-CN

00:00:00.270 --> 00:00:01.780
我的答案是 是

00:00:01.780 --> 00:00:07.520
你可以把这些聚类中心设置得正好位于彼此的上方

00:00:07.520 --> 00:00:10.180
分隔线看起来像这样

00:00:10.180 --> 00:00:13.500
所有上方的点与上方的聚类中心相关联

00:00:13.500 --> 00:00:17.370
所有下方的点则与下方的聚类中心相关联

00:00:17.370 --> 00:00:19.815
虽然不太可能

00:00:19.815 --> 00:00:21.100
不过假设有这样的初始设置

00:00:21.100 --> 00:00:26.600
如果发生这样的情况 则算法会认为这是一个聚类

00:00:26.600 --> 00:00:28.350
而这是另一个聚类

00:00:28.350 --> 00:00:31.410
如果我们重新运行 并且采取不同的初始设置

00:00:31.410 --> 00:00:33.120
比如 一个聚类中心位于这里

00:00:34.180 --> 00:00:35.960
则分隔线会是这样

00:00:37.270 --> 00:00:40.190
这些类会自动地互相分开

00:00:40.190 --> 00:00:43.130
虽然不太可能 但确实有一个不合理的局部最小值

00:00:43.130 --> 00:00:44.759
即使在我展示的这个例子中也是这样

00:00:46.220 --> 00:00:47.200
那么 根据经验法则

00:00:47.200 --> 00:00:51.190
如果你有越多的聚类中心 就能找到越多的局部最小值

00:00:51.190 --> 00:00:56.170
但这种情况其实存在 所以 大家得用这个将算法多次运行

