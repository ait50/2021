WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:02.820
And the answer is positive, and I prove it to you.

00:00:02.820 --> 00:00:07.228
Suppose you put one cluster center right between those two points over here and

00:00:07.228 --> 00:00:09.110
the other two somewhere in here.

00:00:09.110 --> 00:00:11.380
It doesn't even have an error.

00:00:11.380 --> 00:00:15.520
In your assignment step, you will find that pretty much everything left of

00:00:15.520 --> 00:00:20.330
this line would be allocated to the left cluster center.

00:00:20.330 --> 00:00:21.262
And as a result,

00:00:21.262 --> 00:00:25.142
this is the point where the total rubber band distance is minimized.

00:00:25.142 --> 00:00:27.410
So this cluster is very stable.

00:00:27.410 --> 00:00:28.400
These two guys over here,

00:00:28.400 --> 00:00:33.500
however, separate between themselves the data on the right.

00:00:33.500 --> 00:00:36.350
And they will fight for the same data points and

00:00:36.350 --> 00:00:39.920
end up somewhere partitioning the cloud on the right side.

00:00:39.920 --> 00:00:44.456
And that is a stable solution because in the assignment step, nothing changes.

00:00:44.456 --> 00:00:47.350
This guy will still correspond to all the guys over here, and

00:00:47.350 --> 00:00:49.380
these guys will correspond to the guys over here.

00:00:49.380 --> 00:00:51.498
That's called a local minimum.

00:00:51.498 --> 00:00:54.960
And it really depends on the initialization of the cluster centers.

00:00:54.960 --> 00:00:58.710
If you had chosen these three cluster centers as your initial guesses,

00:00:58.710 --> 00:01:00.600
you would never move away from it.

00:01:00.600 --> 00:01:04.300
Thus, make sure it's really important in clustering to be aware of

00:01:04.300 --> 00:01:07.200
the fact it's a local hill climbing algorithm.

00:01:07.200 --> 00:01:10.600
And it can give you suboptimal solutions that, if you divide them again,

00:01:10.600 --> 00:01:11.520
it gives you a better solution.

00:01:11.520 --> 00:01:14.110
Obviously, in this case with three cluster centers,

00:01:14.110 --> 00:01:18.250
you want them over here, over here and just one on the right side over here.

