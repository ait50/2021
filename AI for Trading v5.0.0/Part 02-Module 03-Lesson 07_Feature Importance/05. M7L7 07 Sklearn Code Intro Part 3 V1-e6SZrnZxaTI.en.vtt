WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.569
Okay. So first let's get familiar with exploring

00:00:03.569 --> 00:00:08.115
the tree data structure in scikit-learn or rather the tree class.

00:00:08.115 --> 00:00:11.009
So the source code for tree is here and it has

00:00:11.009 --> 00:00:14.324
useful comments about the attributes in the tree class.

00:00:14.324 --> 00:00:18.549
So once we click on this link to the source code,

00:00:18.890 --> 00:00:23.490
I'm going to ask you to search for this text in there,

00:00:23.489 --> 00:00:28.875
because that's where you'll see some useful information about the class tree.

00:00:28.875 --> 00:00:32.100
So for instance, there's node count,

00:00:32.100 --> 00:00:34.755
there's children left and children right,

00:00:34.755 --> 00:00:39.765
and you can see I've actually copied this comment into the notebook.

00:00:39.765 --> 00:00:41.880
So let's go back to the notebook.

00:00:41.880 --> 00:00:45.440
So here, to grab the tree,

00:00:45.439 --> 00:00:48.989
we're just going to get the attribute tree underscore.

00:00:49.299 --> 00:00:53.089
The tree data are stored in lists.

00:00:53.090 --> 00:00:55.725
Okay. Think of these as just arrays.

00:00:55.725 --> 00:00:59.179
Each node is also assigned an integer zero,

00:00:59.179 --> 00:01:01.189
one, two and so forth.

00:01:01.189 --> 00:01:05.239
Each node's value for some attribute is stored at

00:01:05.239 --> 00:01:09.804
the index location that equals that nodes assigned integer.

00:01:09.805 --> 00:01:12.740
So this will make more sense once we see the example.

00:01:12.739 --> 00:01:17.500
So for example, node zero is going to be the root node.

00:01:17.500 --> 00:01:20.030
So the root node is going to be assigned the integer zero.

00:01:20.030 --> 00:01:22.855
Okay. So the root node is at the top of the tree.

00:01:22.855 --> 00:01:26.055
There is a list called children left.

00:01:26.055 --> 00:01:31.695
So index location zero contains the left child of node zero.

00:01:31.694 --> 00:01:35.494
Okay. So that's essentially what this comment is saying right here.

00:01:35.495 --> 00:01:38.105
But we can see this in the code as well.

00:01:38.105 --> 00:01:41.359
If you were to just run tree zero dot children left.

00:01:41.359 --> 00:01:43.489
Okay, let me type this out,

00:01:43.489 --> 00:01:49.390
tree zero is just the name I gave to this variable that stores model dot tree underscore.

00:01:49.390 --> 00:01:52.810
Tree zero dot children left,

00:01:53.000 --> 00:01:56.579
and you can see at index zero.

00:01:56.579 --> 00:01:58.875
You have the value one.

00:01:58.875 --> 00:02:08.009
One means that is the node that is the left child of node zero. So I'll read this out.

00:02:08.009 --> 00:02:09.215
So in this tree,

00:02:09.215 --> 00:02:11.560
the next positions are zero,

00:02:11.560 --> 00:02:14.800
one, two, three, and four.

00:02:14.800 --> 00:02:18.340
These are the other numbers for identifying each node in the tree.

00:02:18.340 --> 00:02:21.300
Node zero is the root node.

00:02:21.300 --> 00:02:25.719
Nodes one and two are the left and right child of the root node.

00:02:25.719 --> 00:02:28.900
Okay. To see this, you can see at index zero,

00:02:28.900 --> 00:02:30.849
you have the number one.

00:02:30.849 --> 00:02:36.389
That means that the root nodes left child is node one.

00:02:36.389 --> 00:02:41.744
Okay. Then this children right array, at index zero,

00:02:41.745 --> 00:02:49.770
you see the number two and that means that nodes zero's right child is node number two.

00:02:49.770 --> 00:02:53.990
So that's why I say here, in the list children left at index zero,

00:02:53.990 --> 00:02:58.705
we see one, and for children right list at index zero, we see two.

00:02:58.705 --> 00:03:02.015
Negative one, which you see a couple of times here,

00:03:02.014 --> 00:03:06.019
negative one is used to denote that there's no child for that node.

00:03:06.020 --> 00:03:09.830
Node one has no left or right child.

00:03:09.830 --> 00:03:15.935
So the children left list at index one we see a negative one.

00:03:15.935 --> 00:03:19.655
Similarly in children right at index one,

00:03:19.655 --> 00:03:22.254
the value is also negative one.

00:03:22.254 --> 00:03:26.719
You can actually see this in the visual of the tree if we scroll back up.

00:03:26.719 --> 00:03:28.879
This is node zero,

00:03:28.879 --> 00:03:32.750
its left child is node one and you can see it's a leaf node,

00:03:32.750 --> 00:03:37.000
so it has no left child and it has no right child.

