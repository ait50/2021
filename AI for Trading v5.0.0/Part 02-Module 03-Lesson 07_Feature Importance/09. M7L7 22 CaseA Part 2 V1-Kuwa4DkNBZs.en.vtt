WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.779
Here's also a helper function to calculate the permutation weighed.

00:00:03.779 --> 00:00:07.724
In other words, we're calculating this part of the formula.

00:00:07.724 --> 00:00:10.484
So, we'll just import factorial.

00:00:10.484 --> 00:00:14.969
You can see here that the inputs will be either the size of

00:00:14.970 --> 00:00:21.164
S and the size of set S or the size of M which is the total number of features.

00:00:21.164 --> 00:00:24.000
So, taking these two inputs,

00:00:24.000 --> 00:00:30.809
we just take the factorial of S times the factorial of M minus S minus one,

00:00:30.809 --> 00:00:34.699
which you see here, divided by the factorial of M,

00:00:34.700 --> 00:00:36.609
which you see here.

00:00:36.609 --> 00:00:42.350
So, we can try it out. So, when the size of S is two and there are three features total,

00:00:42.350 --> 00:00:44.495
then the answer should be equal to

00:00:44.494 --> 00:00:48.564
this expression which boils down to one divided by three.

00:00:48.564 --> 00:00:51.509
If we try this function ourselves,

00:00:51.509 --> 00:00:53.849
we see that it becomes 0.33,

00:00:53.850 --> 00:00:55.649
which is what we expect.

00:00:55.649 --> 00:01:02.409
Now, here's an example with case A and then you have to practice the other cases.

00:01:02.409 --> 00:01:08.229
So, case say calculate the prediction of a model that uses features zero and one,

00:01:08.230 --> 00:01:13.135
also then, calculate the prediction of a model that only uses feature one.

00:01:13.135 --> 00:01:14.760
So, calculate the difference.

00:01:14.760 --> 00:01:17.885
So, that's the marginal contribution of feature zero.

00:01:17.885 --> 00:01:20.480
So, first, the function,

00:01:20.480 --> 00:01:23.225
the model when it has features zero and one.

00:01:23.224 --> 00:01:29.069
So, we'll get the subset of features zero and one that's stored in here in S_union_i,

00:01:29.069 --> 00:01:34.409
then we will fit it to the model, like this.

00:01:34.409 --> 00:01:39.289
Remember, for the sample input for which we'll calculate feature importance,

00:01:39.290 --> 00:01:41.870
we chose values of one for all other features.

00:01:41.870 --> 00:01:44.405
So, what I'm saying is that, back up here,

00:01:44.405 --> 00:01:50.795
we were choosing the sample values for which we'll calculate local feature importance.

00:01:50.795 --> 00:01:54.799
We're saying, this is a case where an observation has feature zero,

00:01:54.799 --> 00:01:58.500
one, and two all have the value of one.

00:01:59.689 --> 00:02:05.120
So, now if we were just to try to make a prediction using the model that we fit and

00:02:05.120 --> 00:02:09.710
passing in this np array like this, then we'll get an error.

00:02:09.710 --> 00:02:12.775
So, let's just see what the error says.

00:02:12.775 --> 00:02:15.444
So, it says expected 2D array,

00:02:15.444 --> 00:02:17.780
got 1D array instead.

00:02:17.780 --> 00:02:21.930
Reshape your data either using array.reshape negative one,

00:02:21.930 --> 00:02:26.780
one if your data has a single feature or array.reshape one,

00:02:26.780 --> 00:02:31.175
negative one if it contains a single sample.

00:02:31.175 --> 00:02:34.594
So, we're going to reshape the data so that it represents

00:02:34.593 --> 00:02:40.370
a sample one row which means it has one row and one or more columns.

00:02:40.370 --> 00:02:43.835
In this case, it has two columns and one row.

00:02:43.835 --> 00:02:49.580
So, we're just using reshape specifying that we want one row and then

00:02:49.580 --> 00:02:53.150
the negative one is saying choose the number of columns

00:02:53.150 --> 00:02:56.435
for me so that it actually uses all the original data.

00:02:56.435 --> 00:02:58.354
So, in this case, there's two of these.

00:02:58.354 --> 00:03:01.564
Sum is going to be like this.

00:03:01.564 --> 00:03:04.120
So, it's going to be two columns one row.

00:03:04.120 --> 00:03:08.810
Now, we can put that sample input and make a prediction.

00:03:08.810 --> 00:03:14.224
So, the prediction of the model when it has features zero and one is one.

00:03:14.224 --> 00:03:18.139
So, when feature zero and one are both one,

00:03:18.139 --> 00:03:20.689
the prediction of the model is one.

00:03:20.689 --> 00:03:25.590
In other words, if true and true, then true.

