WEBVTT
Kind: captions
Language: zh-CN

00:00:00.389 --> 00:00:03.730
那么在建立模型之后 我们想知道它的性能如何

00:00:03.730 --> 00:00:06.131
这是一个有难度的问题 但在这部分

00:00:06.131 --> 00:00:09.635
我们将学习一些不同的指标 通过它们来了解模型的好坏

00:00:09.635 --> 00:00:11.519
我们来看两个主要示例

00:00:11.519 --> 00:00:16.381
第一个示例中的模型用于检测特定疾病

00:00:16.382 --> 00:00:19.920
判断就诊者是健康还是患病

00:00:19.920 --> 00:00:23.750
第二个示例是一个垃圾邮件检测器 将帮助我们确定

00:00:23.750 --> 00:00:25.940
电子邮件是否为垃圾邮件

00:00:25.940 --> 00:00:27.140
例如 左边

00:00:27.140 --> 00:00:30.899
是来自奶奶的电子邮件 你不想将它标记为垃圾邮件

00:00:30.899 --> 00:00:33.670
右边很明显是一封垃圾邮件

00:00:33.670 --> 00:00:35.800
你要将其送到垃圾邮件文件夹

00:00:35.799 --> 00:00:38.239
我们来看看用于诊断疾病的模型

00:00:38.240 --> 00:00:39.850
总共有四种情况

00:00:39.850 --> 00:00:43.990
当就诊者患病 且模型阳性确诊断为患病时

00:00:43.990 --> 00:00:47.980
这是一名患者 我需要让他入院进行进一步检查或治疗

00:00:47.979 --> 00:00:50.239
这种情况我们称之为真阳性

00:00:50.240 --> 00:00:53.550
当就诊者未患病 而且模型阳性确诊断为健康时

00:00:53.549 --> 00:00:55.679
这是一名健康就诊者 可以直接回家

00:00:55.679 --> 00:00:57.789
此情况我们称之为真阴性

00:00:57.789 --> 00:01:01.664
当就诊者患病而模型错误诊断为健康时

00:01:01.664 --> 00:01:02.813
这是个错误

00:01:02.813 --> 00:01:06.402
说明我们在让患者未接受治疗的情况下回家了

00:01:06.402 --> 00:01:08.040
这称为假阴性

00:01:08.040 --> 00:01:09.560
最终当就诊者健康

00:01:09.560 --> 00:01:13.700
而模型错误诊断为患病时 这也是错误的

00:01:13.700 --> 00:01:17.469
说明我们让一名未患病者入院进行进一步检查或治疗

00:01:17.469 --> 00:01:19.579
这称为假阳性

00:01:19.579 --> 00:01:21.640
现在我们介绍一个所谓的混淆矩阵

00:01:21.640 --> 00:01:24.721
这是一个用于描述模型性能的表

00:01:24.721 --> 00:01:27.254
在这个模型中 我们有 10,000 个患者

00:01:27.254 --> 00:01:30.670
其中有 1,000 是患病的 并且被阳性确诊断为患病

00:01:30.670 --> 00:01:32.506
我们称之为真阳性

00:01:32.506 --> 00:01:35.799
有 200 人是患病的 而被错误诊断为健康

00:01:35.799 --> 00:01:37.525
我们称之为假阴性

00:01:37.525 --> 00:01:40.938
有 800 名就诊者是健康的 而被错误诊断为患病

00:01:40.938 --> 00:01:42.699
我们称之为假阳性

00:01:42.700 --> 00:01:45.268
最后 有 8,000 名就诊者是健康的

00:01:45.268 --> 00:01:49.460
并被阳性确诊断为健康 我们称之为真阴性 

00:01:49.459 --> 00:01:52.649
混淆矩阵只是存储这四个值的表格

00:01:52.650 --> 00:01:54.576
现在我们来看一下用于检测垃圾邮件的模型

00:01:54.575 --> 00:01:56.489
共有四种可能的情况

00:01:56.489 --> 00:01:59.309
当我们收到垃圾邮件 并且分类器阳性确地将其发送到我们的垃圾邮件

00:01:59.310 --> 00:02:01.600
文件夹时 这为真阳性

00:02:01.599 --> 00:02:02.609
当我们收到垃圾邮件

00:02:02.609 --> 00:02:06.670
而分类器错误地将其发送到我们的收件箱时 这为假阴性

00:02:06.670 --> 00:02:09.500
当我们收到奶奶的阳性常邮件 而分类器

00:02:09.500 --> 00:02:13.259
错误地将它发送到我们的垃圾邮件文件夹时 此为假阳性

00:02:13.259 --> 00:02:14.599
最后 当我们收到阳性常邮件

00:02:14.599 --> 00:02:19.109
分类器阳性确地将其发送到我们的收件箱时 此为真阴性

00:02:19.110 --> 00:02:21.730
我们也可以找到这个模型的混淆矩阵

00:02:21.729 --> 00:02:23.469
这里共有 1000 封电子邮件

00:02:23.469 --> 00:02:24.453
其中

00:02:24.453 --> 00:02:27.215
100 封垃圾邮件被阳性确发送到垃圾邮件文件夹

00:02:27.215 --> 00:02:30.747
170 封垃圾邮件被错误发送到收件箱中

00:02:30.747 --> 00:02:34.198
30 封非垃圾邮件被错误发送到垃圾邮件文件夹

00:02:34.199 --> 00:02:38.530
最后 700 封非垃圾邮件被阳性确发送到收件箱中

00:02:38.530 --> 00:02:40.469
这是它的混淆矩阵

00:02:40.469 --> 00:02:42.680
现在轮到你创建一个混淆矩阵了

00:02:42.680 --> 00:02:45.498
看看这些数据 其中蓝点为阳性

00:02:45.497 --> 00:02:47.036
红点为阴性

00:02:47.036 --> 00:02:50.816
我们训练的模型是一条将它们分开的直线 阳性点区域

00:02:50.816 --> 00:02:54.210
在上 阴性点区域在下

00:02:54.210 --> 00:02:57.740
现在 填写以下混淆矩阵中的四个空白处

00:02:57.740 --> 00:03:02.620
分别写上真阳性、真阴性、假阳性

00:03:02.620 --> 00:03:03.430
和假阴性

