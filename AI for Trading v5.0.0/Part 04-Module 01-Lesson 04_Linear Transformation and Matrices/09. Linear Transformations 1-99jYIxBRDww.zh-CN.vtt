WEBVTT
Kind: captions
Language: zh-CN

00:00:11.519 --> 00:00:16.269
大家好 有一个知识点

00:00:16.269 --> 00:00:18.660
它虽然能统合线性代数的其它知识点

00:00:18.660 --> 00:00:21.179
但却容易被线性代数的初学者所忽略

00:00:21.179 --> 00:00:22.454
那就是这个知识点

00:00:22.454 --> 00:00:24.859
线性变换的概念

00:00:24.859 --> 00:00:26.774
及其与矩阵的关系

00:00:26.774 --> 00:00:29.079
本视频将重点讲解

00:00:29.079 --> 00:00:32.179
二维线性变换

00:00:32.179 --> 00:00:35.524
及其与矩阵-向量乘法的关系

00:00:35.524 --> 00:00:40.140
具体来讲 我想介绍一种矩阵与向量相乘的思路

00:00:40.140 --> 00:00:42.649
这种思路不用死记硬背

00:00:42.649 --> 00:00:46.994
首先 我们先来解释线性变换这个术语

00:00:46.994 --> 00:00:50.179
变换其实是函数好听点的说法

00:00:50.179 --> 00:00:52.020
本质上就是一种接受输入

00:00:52.020 --> 00:00:56.660
并输出相应结果的事物 具体来讲 在线性代数中

00:00:56.659 --> 00:00:59.719
变换就是要接受某个矢量

00:00:59.719 --> 00:01:01.799
然后输出另一个矢量

00:01:01.799 --> 00:01:05.209
既然这两者是同一种事物

00:01:05.209 --> 00:01:06.729
那为什么我们不说 “函数” 而要说 “变换” 呢？

00:01:06.730 --> 00:01:11.725
这是因为 “变换” 一词更直观地体现了输入与输出之间的关系

00:01:11.724 --> 00:01:14.619
向量函数

00:01:14.620 --> 00:01:16.448
最好借助运动来理解

00:01:16.448 --> 00:01:19.310
变换接受一些输入向量

00:01:19.310 --> 00:01:20.875
并输出相应输出向量的过程

00:01:20.875 --> 00:01:25.295
可以想象为输入向量朝输出向量移动的过程

00:01:25.295 --> 00:01:28.150
而要将变换作为整体来理解

00:01:28.150 --> 00:01:31.385
我们可以想象所有可能输入向量

00:01:31.385 --> 00:01:34.605
朝相应的输出向量移动的场景

00:01:34.605 --> 00:01:37.424
要把向量看作箭头

00:01:37.424 --> 00:01:39.334
同时想象所有向量 可能会很乱

00:01:39.334 --> 00:01:40.994
所以 正如我在上个视频提到的

00:01:40.995 --> 00:01:44.625
我们可以不把向量看作一个个箭头

00:01:44.625 --> 00:01:45.959
而是当成一个个点

00:01:45.959 --> 00:01:48.569
每个点对应每个向量头部所在的位置

00:01:48.569 --> 00:01:53.129
这样一来 要研究任意可能输入向量移动到相应输出向量的变换过程

00:01:53.129 --> 00:01:56.844
就可以想象空间各点移动到另一个点所处位置的场景

00:01:56.844 --> 00:01:59.459
二维变换中

00:01:59.459 --> 00:02:02.829
要更好地理解变换的整体形状

00:02:02.829 --> 00:02:06.194
我个人喜欢想象无限网格上各点做运动的场景

00:02:06.194 --> 00:02:09.354
有时候我还会将原始网格保留在背景里

00:02:09.354 --> 00:02:11.584
以便作为点运动起点

00:02:11.585 --> 00:02:13.900
和终点的参照

00:02:13.960 --> 00:02:19.320
不同变换移动空间各点的效果

00:02:19.319 --> 00:02:21.534
不得不承认 很漂亮

00:02:21.534 --> 00:02:23.219
看起来像是在压缩

00:02:23.219 --> 00:02:25.169
和扭曲空间本身

00:02:25.169 --> 00:02:30.229
你应该不难想象 自由变换看起来可能会很复杂

00:02:30.229 --> 00:02:34.479
好在线性代数涉及的变换很特殊

00:02:34.479 --> 00:02:38.764
很容易理解 我们称之为线性变换

00:02:38.764 --> 00:02:43.414
从几何的角度讲 线性变换需要满足两个特点

00:02:43.414 --> 00:02:47.194
所有线都必须是直线 不能弯曲

00:02:47.194 --> 00:02:50.180
原点必须固定不动

00:02:50.180 --> 00:02:54.030
比如 这个肯定不是线性变换

00:02:54.030 --> 00:02:55.844
因为所有线都弯曲了

00:02:55.844 --> 00:02:58.745
这个虽然都是直线

00:02:58.745 --> 00:03:00.590
但也不是线性变换

00:03:00.590 --> 00:03:02.295
因为原点位置发生了变化

00:03:02.294 --> 00:03:04.179
这个原点位置不变

00:03:04.180 --> 00:03:05.990
线看起来也没有弯曲

00:03:05.990 --> 00:03:08.240
但这是因为你只看到了网格的横线

00:03:08.240 --> 00:03:09.430
和纵线

00:03:09.430 --> 00:03:11.340
如果你观察斜线

00:03:11.340 --> 00:03:13.479
就会发现这并不全是线性的

00:03:13.479 --> 00:03:16.079
斜线发生了扭曲

00:03:16.080 --> 00:03:19.450
总地来说 线性变换时

00:03:19.449 --> 00:03:22.899
网格线应保持平行且等距分布

00:03:22.900 --> 00:03:25.750
有些线性变换很容易想象

00:03:25.750 --> 00:03:27.854
比如围绕原点进行旋转

00:03:27.854 --> 00:03:31.119
也有些比较复杂 很难用语言描述

