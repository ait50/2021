WEBVTT
Kind: captions
Language: pt-BR

00:00:00.050 --> 00:00:01.324
Começamos com o Bagging.

00:00:01.374 --> 00:00:04.462
Eis os nossos dados em forma
de pontos vermelhos e azuis.

00:00:04.512 --> 00:00:07.097
Para simplificar,
diremos que os aprendizes fracos

00:00:07.147 --> 00:00:09.073
serão o aprendiz
mais simples possível:

00:00:09.123 --> 00:00:11.667
uma árvore de decisão
de um nó só.

00:00:11.717 --> 00:00:14.630
Todas são ou linhas horizontais,
ou verticais

00:00:14.680 --> 00:00:16.715
que dizem:
"Deste lado, tudo é positivo,

00:00:16.765 --> 00:00:18.782
daquele é negativo."

00:00:18.832 --> 00:00:21.327
Voltando aos dados,
façamos o seguinte.

00:00:21.377 --> 00:00:23.404
Como nossos dados
podem ser muitos,

00:00:23.454 --> 00:00:26.004
em geral, não queremos
treinar muitos modelos

00:00:26.054 --> 00:00:27.380
com o mesmo conjunto.

00:00:27.430 --> 00:00:29.499
Isso seria muito caro.

00:00:29.549 --> 00:00:32.057
Em vez disso,
usaremos subconjuntos dele

00:00:32.107 --> 00:00:35.787
e treinaremos um aprendiz fraco
em cada subconjunto.

00:00:35.837 --> 00:00:39.014
Depois vemos
como combinar esses aprendizes.

00:00:39.064 --> 00:00:41.156
Aqui está
o primeiro subconjunto de dados,

00:00:41.206 --> 00:00:44.323
e o primeiro aprendiz
é este aqui.

00:00:44.373 --> 00:00:46.221
Nós nos lembraremos dele.

00:00:46.271 --> 00:00:48.373
Aqui está
nosso segundo subconjunto

00:00:48.423 --> 00:00:49.915
e nosso segundo aprendiz.

00:00:49.965 --> 00:00:52.824
Se parece que estou dando sorte
com meus dados e aprendizes,

00:00:52.874 --> 00:00:53.889
estou, sim.

00:00:53.939 --> 00:00:55.624
Esses aprendizes
podem ser péssimos,

00:00:55.674 --> 00:00:57.006
mas, com dados abundantes,

00:00:57.056 --> 00:00:58.596
escolher
um subconjunto aleatório

00:00:58.646 --> 00:01:00.902
normalmente nos dá
uma boa intuição sobre os dados.

00:01:00.952 --> 00:01:03.079
Fora que agiliza o processo.

00:01:03.129 --> 00:01:06.507
Por fim, nosso terceiro subconjunto
e nosso terceiro aprendiz.

00:01:06.557 --> 00:01:09.041
Perceba que nunca particiono
os dados.

00:01:09.091 --> 00:01:12.599
Temos toda a liberdade
de repetir pontos nos subconjuntos,

00:01:12.649 --> 00:01:15.422
e até a ignorar alguns pontos.

00:01:15.472 --> 00:01:19.178
A cada passo,
escolhemos um subconjunto aleatório.

00:01:19.228 --> 00:01:21.340
E agora temos aprendizes
de três semanas.

00:01:21.390 --> 00:01:24.090
Como combiná-los?
Que tal votando?

00:01:24.457 --> 00:01:27.352
Nós os sobrepomos aos dados
e dizemos:

00:01:27.402 --> 00:01:30.095
se dois ou mais disserem "azul",
então azul.

00:01:30.145 --> 00:01:33.142
E se dois ou mais
disserem "vermelho", vermelho.

00:01:33.192 --> 00:01:34.574
Com um número par de modelos,

00:01:34.624 --> 00:01:37.041
podemos desfazer empates
como quisermos.

00:01:37.091 --> 00:01:39.177
Embora,
com tantos pontos e modelos,

00:01:39.227 --> 00:01:42.450
seja difícil imaginar um empate.
Mas acontece.

00:01:42.500 --> 00:01:46.118
E voilà. Isto é o que obtemos
após os modelos votarem.

00:01:46.168 --> 00:01:48.665
É isso.
Esse é o algoritmo Bagging.

