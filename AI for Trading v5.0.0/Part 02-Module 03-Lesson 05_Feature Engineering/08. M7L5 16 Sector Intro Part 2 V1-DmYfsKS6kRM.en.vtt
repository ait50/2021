WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.379
So, here is some starter code to help you with the quiz.

00:00:04.379 --> 00:00:06.660
Let's get all the unique sector codes,

00:00:06.660 --> 00:00:09.285
then use the double equal comparison operator

00:00:09.285 --> 00:00:12.359
to check when the sector code equals a particular value.

00:00:12.359 --> 00:00:16.094
This returns a series of true-false Boolean values.

00:00:16.094 --> 00:00:19.099
For some functions that we'll use later in a later lesson,

00:00:19.100 --> 00:00:21.240
it's easier to work with integers,

00:00:21.239 --> 00:00:22.934
with numbers, instead of Booleans.

00:00:22.934 --> 00:00:26.594
So, we can also convert these true-false Booleans into integers.

00:00:26.594 --> 00:00:28.320
So, true would become one,

00:00:28.320 --> 00:00:30.435
and false would become zero.

00:00:30.434 --> 00:00:37.570
So here, if you were to look at, oops sorry.

00:00:37.969 --> 00:00:41.054
I'm going to add a new cell here.

00:00:41.054 --> 00:00:48.149
If we were to look at the DataFrame all_factors and grab the column sector code,

00:00:48.149 --> 00:00:50.810
I'm just going to look at a couple of rows.

00:00:50.810 --> 00:00:57.535
You can see here that each ticker has a sector code category associated with it.

00:00:57.534 --> 00:01:00.009
So, we just want to get all the unique values of that,

00:01:00.009 --> 00:01:05.045
so we can actually just pass it through the set constructor, okay?

00:01:05.045 --> 00:01:07.835
And we'll use all of them.

00:01:07.834 --> 00:01:12.579
So, these are all the values that the sector code takes on, okay?

00:01:12.579 --> 00:01:16.659
So here, we're going to set that to this variable.

00:01:17.030 --> 00:01:20.465
We're also going to practice using the equals operator.

00:01:20.465 --> 00:01:22.460
So what this does is it says,

00:01:22.459 --> 00:01:26.114
when that sector code is equal to zero,

00:01:26.114 --> 00:01:27.890
then true, otherwise false.

00:01:27.890 --> 00:01:31.685
So you can see here this is true, false.

00:01:31.685 --> 00:01:36.420
Actually, I could just print this out just to make it more clear.

00:01:37.599 --> 00:01:39.929
From zero to five,

00:01:39.930 --> 00:01:43.130
you can see that when a category is zero, then it's true.

00:01:43.129 --> 00:01:44.974
When it's zero, it's true.

00:01:44.974 --> 00:01:46.594
When it's not zero,

00:01:46.594 --> 00:01:49.564
then it's false, okay?

00:01:49.564 --> 00:01:52.045
Also as I mentioned,

00:01:52.045 --> 00:01:53.760
it will be easier later on,

00:01:53.760 --> 00:01:58.100
so we'll do this now, to convert the Booleans into integers.

00:01:58.099 --> 00:01:59.750
So we'll use astype.

00:01:59.750 --> 00:02:02.180
So now, true becomes one,

00:02:02.180 --> 00:02:05.160
and false becomes zero, okay?

