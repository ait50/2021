WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.710
我们来讨论人生

00:00:01.710 --> 00:00:04.650
一生中 人们都会犯两个错误

00:00:04.650 --> 00:00:08.330
一个是使用苍蝇拍消灭哥斯拉

00:00:08.330 --> 00:00:12.330
另一个是使用火箭炮消灭苍蝇

00:00:12.330 --> 00:00:16.125
使用苍蝇拍消灭哥斯拉有什么问题呢？

00:00:16.125 --> 00:00:18.114
因为我们过于简化问题

00:00:18.114 --> 00:00:22.379
我们找到的解决方法过于简单 不会奏效

00:00:22.379 --> 00:00:25.539
在机器学习中 这叫欠拟合

00:00:25.539 --> 00:00:29.442
使用火箭炮消灭苍蝇有什么问题呢？

00:00:29.443 --> 00:00:32.850
这样过于复杂 会导致解决方法很糟糕

00:00:32.850 --> 00:00:37.840
和额外的复杂性 这时我们可以使用更简单的解决方法

00:00:37.840 --> 00:00:41.160
在机器学习中 这叫过拟合

00:00:41.159 --> 00:00:45.049
我们观察在分类问题中过拟合和欠拟合是如何出现的

00:00:45.049 --> 00:00:46.875
假如我们有下列数据

00:00:46.875 --> 00:00:49.259
需要进行分类

00:00:49.259 --> 00:00:52.324
这里什么规则可以发挥效果呢？

00:00:52.325 --> 00:00:54.435
看起来是个很简单的问题 对不对

00:00:54.435 --> 00:00:59.820
右侧是狗 而左侧是除了狗以外的东西

00:00:59.820 --> 00:01:02.310
如果我们使用以下规则会怎么样？

00:01:02.310 --> 00:01:04.394
我们说右侧是动物

00:01:04.394 --> 00:01:08.280
而左侧是除了动物以外的东西

00:01:08.280 --> 00:01:10.644
这个答案并不太好吧？

00:01:10.644 --> 00:01:11.819
问题是什么呢？

00:01:11.819 --> 00:01:15.729
这过于简单了 不能使整个数据集正确分类

00:01:15.730 --> 00:01:21.270
明白了吗？ 它错误分类了这只猫 因为猫是动物

00:01:21.269 --> 00:01:23.170
这是欠拟合

00:01:23.170 --> 00:01:26.200
这就像是使用苍蝇拍消灭哥斯拉

00:01:26.200 --> 00:01:30.174
有时候我们会因为偏差把它当做误差

00:01:30.174 --> 00:01:32.769
现在下列规则会怎么样？

00:01:32.769 --> 00:01:37.185
我们说右侧的狗是黄色 橙色或灰色的

00:01:37.185 --> 00:01:43.900
左侧是黄色 橙色或灰色狗以外的东西

00:01:43.900 --> 00:01:49.285
从技术上来讲 如果对数据分类正确 这是正确的

00:01:49.284 --> 00:01:51.924
因为只是说狗和狗以外的东西可以有效

00:01:51.924 --> 00:01:55.390
感觉我们太过具体

00:01:55.390 --> 00:01:58.087
不过这个问题更加概念化 对不对？

00:01:58.087 --> 00:02:00.605
这里我们如何观察问题呢？

00:02:00.605 --> 00:02:05.512
其中一种观察方法是引入测试集

00:02:05.512 --> 00:02:08.159
如果我们的测试集是这里的狗

00:02:08.159 --> 00:02:12.805
我们可以想象 良好的分类器会把它放在右侧 与其他狗在一起

00:02:12.805 --> 00:02:19.599
不过因为狗不是黄色 橙色和灰色的 分类器把它放在左侧

00:02:19.599 --> 00:02:21.984
正如我们所说 这里问题在于

00:02:21.985 --> 00:02:25.105
分类器太过具体

00:02:25.104 --> 00:02:29.519
它可以很好地拟合数据 却无法进行泛化

00:02:29.520 --> 00:02:31.390
这是过拟合

00:02:31.389 --> 00:02:35.009
这就像是使用火箭炮消灭苍蝇

00:02:35.009 --> 00:02:39.264
有时候我们会因为方差把过拟合当做误差

00:02:39.264 --> 00:02:44.489
我绘制过拟合和欠拟合的方式是复习准备考试时

00:02:44.490 --> 00:02:47.665
欠拟合像是没有复习充分 考试失利

00:02:47.664 --> 00:02:52.179
好的模型是学习充分 在考试中表现良好

00:02:52.180 --> 00:02:54.254
过拟合像是没有学习

00:02:54.254 --> 00:02:57.359
而是逐字记忆整本教材

00:02:57.360 --> 00:03:00.750
我们也许能机械地回答教材上的问题

00:03:00.750 --> 00:03:05.125
却无法合理进行泛化 回答测试中的问题

00:03:05.125 --> 00:03:08.324
不过现在我们来观察这在神经网络中的样子

00:03:08.324 --> 00:03:10.334
我们再来说这些数据

00:03:10.335 --> 00:03:14.099
其中蓝点被标记为正 红点被标记为负

00:03:14.099 --> 00:03:18.219
这里我们有三只小熊

00:03:18.219 --> 00:03:22.504
中间是一个良好的模型 可以较好地拟合数据

00:03:22.504 --> 00:03:26.424
左侧的模型欠拟合 因为它过于简单

00:03:26.425 --> 00:03:30.788
这个模型试图把数据拟合到这个线段上 但是数据过于复杂

00:03:30.788 --> 00:03:33.270
右侧的模型过拟合 因为它

00:03:33.270 --> 00:03:36.870
使用过于复杂的曲线拟合数据

00:03:36.870 --> 00:03:42.465
注意右侧的模型确实可以很好地拟合术语 因为它没有错误

00:03:42.465 --> 00:03:46.344
而中间这个模型出现了错误

00:03:46.344 --> 00:03:50.789
我们可以看到中间这个模型可能更好地泛化

00:03:50.789 --> 00:03:54.584
中间的模型把这个点看做噪音

00:03:54.585 --> 00:03:59.564
而右侧的模型会因此困惑 试图较好地填充它

00:03:59.564 --> 00:04:01.859
现在中间的模型很有可能是

00:04:01.860 --> 00:04:05.685
具有稍微复杂结构的神经网络 例如这个

00:04:05.685 --> 00:04:10.284
左侧的模型可能是过于简单的结构

00:04:10.284 --> 00:04:12.210
例如整个神经网络只是一个感知器

00:04:12.210 --> 00:04:15.366
因为模型是线性的

00:04:15.366 --> 00:04:17.160
右侧的模型可能是

00:04:17.160 --> 00:04:21.790
具有多层和多个权重的高级复杂神经网络

00:04:21.790 --> 00:04:23.250
现在有个很糟糕的消息

00:04:23.250 --> 00:04:27.274
实际上很难为一个神经网络找到正确的结构

00:04:27.274 --> 00:04:29.250
我们经常会最终要么出现

00:04:29.250 --> 00:04:32.730
左侧过于简单的结构

00:04:32.730 --> 00:04:37.110
要么是右侧过于复杂的结构

00:04:37.110 --> 00:04:39.270
问题是我们应该怎么办？

00:04:39.269 --> 00:04:43.519
这像是试图试穿一条裤子

00:04:43.519 --> 00:04:45.389
如果我们找不到尺寸

00:04:45.389 --> 00:04:49.435
我们要不要尝试更大或更小的裤子呢？

00:04:49.435 --> 00:04:51.540
实际上选择

00:04:51.540 --> 00:04:53.610
稍大一点的裤子

00:04:53.610 --> 00:04:56.918
然后选一条腰带之类的东西 可以更适合 这也是不错的方法

00:04:56.918 --> 00:04:58.574
这就是我们要做的

00:04:58.574 --> 00:05:00.509
我们可能会在

00:05:00.509 --> 00:05:03.389
过于复杂模型的一侧犯错

00:05:03.389 --> 00:05:07.000
然后我们运用特定技巧 避免过拟合

