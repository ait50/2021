WEBVTT
Kind: captions
Language: ja-JP

00:00:00.000 --> 00:00:05.000
このコードが カルマンフィルター全体を 実行します

00:00:05.000 --> 00:00:08.000
コードは 測定値の要素を すべて調べて 測定値と

00:00:08.000 --> 00:00:11.000
同数の 動きがある つまり n個あると 仮定します

00:00:11.000 --> 00:00:16.000
muと sigmaを こちらの再帰方程式で 更新します

00:00:16.000 --> 00:00:19.000
そして n番目の測定値と 測定値の不確かさを 代入します

00:00:19.000 --> 00:00:22.000
同じことを 動きの 予測についても 行います

00:00:22.000 --> 00:00:26.000
muと sigmaの 再帰的な更新に n番目の動きと

00:00:26.000 --> 00:00:30.000
動きの不確かさを 使い 最後に すべてを出力します

00:00:30.000 --> 00:00:34.000
実行ボタンを 押すと 測定値の 最初の更新が

00:00:34.000 --> 00:00:37.000
およそ 5.0だと わかります

00:00:37.000 --> 00:00:39.000
4.98です

00:00:39.000 --> 00:00:42.000
これは 筋が通っています  なぜなら 初期の不確かさは 非常に大きな値でした

00:00:42.000 --> 00:00:46.000
測定値は 5で 測定値の不確かさは 比較的小さい値です

00:00:46.000 --> 00:00:50.000
実際に 計算された σの2乗は 3.98で

00:00:50.000 --> 00:00:53.000
これは 4や 1000より よい値です  4より 少しいい値ですね

00:00:53.000 --> 00:00:56.000
測定値自体の 確かさが わずかに高まったことになります

00:00:56.000 --> 00:00:58.000
ここで 1の動きを 適用すると

00:00:58.000 --> 00:01:00.000
値は 5.9になります

00:01:00.000 --> 00:01:04.000
不確かさが 2だけ増えて 3.9だったのが 5.98になります

00:01:04.000 --> 00:01:07.000
そして 次の更新で 6が来ます

00:01:07.000 --> 00:01:09.000
測定値は 5.99となり

00:01:09.000 --> 00:01:13.000
不確かさは 2.39に下がります

00:01:13.000 --> 00:01:16.000
もう一度 1だけ 動くと

00:01:16.000 --> 00:01:19.000
予測値は 6.99になります

00:01:19.000 --> 00:01:21.000
不確かさは 高まります

00:01:21.000 --> 00:01:24.000
測定値 7が来たときの 予測値は 6.997で ほぼ 7です

00:01:24.000 --> 00:01:26.000
不確かさが 下がります

00:01:26.000 --> 00:01:29.000
右に 2だけ 動いて

00:01:29.000 --> 00:01:31.000
測定値が 10 そして再び 1だけ 動きます

00:01:31.000 --> 00:01:33.000
最後に 残ったのは 動きです

00:01:33.000 --> 00:01:36.000
最終結果を 見ると 推定値は ほぼ11です

00:01:36.000 --> 00:01:40.000
これは 10に 1を 足した値です

00:01:40.000 --> 00:01:43.000
不確かさは 動きの後で 4.0

00:01:43.000 --> 00:01:46.000
測定値の後で 2.0です

00:01:46.000 --> 00:01:48.000
今 書いたコードは

00:01:48.000 --> 00:01:52.000
1D用の カルマンフィルターを 実行します

00:01:52.000 --> 00:01:54.000
これを 見ると

00:01:54.000 --> 00:01:56.000
更新関数が 実行するのは

00:01:56.000 --> 00:02:00.000
比較的 単純な 等式であり

00:02:00.000 --> 00:02:02.000
予測関数は

00:02:02.000 --> 00:02:04.000
さらに単純な 加算のみを 行います

00:02:04.000 --> 00:02:07.000
それを 測定値のシーケンスと 動きのシーケンス そして

00:02:07.000 --> 00:02:09.000
関連する 不確かさに 適用して

00:02:09.000 --> 00:02:12.000
ここにある 小さなコードが

00:02:12.000 --> 00:02:14.000
1Dの カルマンフィルターを完全に 実行します

00:02:14.000 --> 00:02:17.000
これって すごいですよね

00:02:17.000 --> 00:02:19.000
では 別の値を 代入してみましょう

00:02:19.000 --> 00:02:22.000
初期の位置について 確かだという自信が あるとしましょう

00:02:22.000 --> 00:02:24.000
本当は 間違っています0とします

00:02:24.000 --> 00:02:26.000
本当は 5なのに 0としてみます

00:02:26.000 --> 00:02:28.000
不確かさを とても小さな値に 設定します

00:02:28.000 --> 00:02:31.000
この場合 最終的な予測は どうなると思いますか?

00:02:31.000 --> 00:02:33.000
実行ボタンを 押すと

00:02:33.000 --> 00:02:35.000
最終的な 推定値に 影響が及ぶことが わかります

00:02:35.000 --> 00:02:38.000
11ではなくて 10.5です

00:02:38.000 --> 00:02:42.000
どこで このようになるかと 言うと

00:02:42.000 --> 00:02:46.000
測定値の 最初の更新後 位置は 0だと 信じ込んでいます

00:02:46.000 --> 00:02:49.000
1.24の -10乗です

00:02:49.000 --> 00:02:52.000
でも 不確かさは 非常に小さく こちらの この値より 小さいです

00:02:52.000 --> 00:02:55.000
動きの更新を 適用します1を 足します

00:02:55.000 --> 00:02:57.000
不確かさが 高まります

00:02:57.000 --> 00:02:59.000
さて 次の測定値の 6が 来たとき

00:02:59.000 --> 00:03:01.000
測定値の正しさが 信じられなくなっています

00:03:01.000 --> 00:03:06.000
なぜなら 不確かさが 2まで上がり 0.001より ずっと大きいからです

00:03:06.000 --> 00:03:10.000
更新後の 位置を 2.666にします

00:03:10.000 --> 00:03:13.000
これは 1から大きく アップしています  不確かさは 下がります

00:03:13.000 --> 00:03:15.000
動きを 適用して 3.66にします

00:03:15.000 --> 00:03:17.000
不確かさは 高まります

00:03:17.000 --> 00:03:19.000
今度は もっと大幅に 更新したくなっています

00:03:19.000 --> 00:03:21.000
7という値を 見て 5.1まで上げます

00:03:21.000 --> 00:03:26.000
なぜ もっと上げないかと いうと 間違った事前推定値に 大きな信頼を 寄せているからです

00:03:26.000 --> 00:03:29.000
この信頼が 最後まで 後を引きます

00:03:29.000 --> 00:03:33.000
実際は 11なのに 10.5と予測し

00:03:33.000 --> 00:03:36.000
不確かさは 3.98となります

00:03:36.000 --> 00:03:38.000
一部は 修正しました

00:03:38.000 --> 00:03:41.000
正しい方向へ 引っ張りましたが 十分でなかったのは

00:03:41.000 --> 00:03:44.000
最初の 間違った自信が 大きすぎて

00:03:44.000 --> 99:59:59.999
式全体に 影響してしまったからです

