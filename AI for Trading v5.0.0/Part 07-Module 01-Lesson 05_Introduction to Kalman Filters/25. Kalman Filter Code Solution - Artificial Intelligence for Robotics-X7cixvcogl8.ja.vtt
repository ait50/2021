WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:05.000
このコードはカルマンフィルタすべてを実装します

00:00:05.000 --> 00:00:11.000
観測回数と同じ動作数をインデックスnで表し
すべての観測配列に関して実行します

00:00:11.000 --> 00:00:16.000
この繰り返しの式を使いμとσを更新していきます

00:00:16.000 --> 00:00:19.400
ここにn番目の観測値と
観測の不確実性を代入すれば

00:00:19.400 --> 00:00:22.000
動作でも予測部分と同じことをします

00:00:22.000 --> 00:00:26.000
n番目の動作と動作の不確実性を用いて

00:00:26.000 --> 00:00:30.000
μとσを繰り返し更新して結果を出力します

00:00:30.000 --> 00:00:34.000
Runボタンを押せば
1回目の観測更新の結果が出ます

00:00:34.000 --> 00:00:38.000
4．98なので約5です

00:00:38.000 --> 00:00:42.000
初期状態の不確実性が大きかったので当然です

00:00:42.000 --> 00:00:46.000
5に対し不確実性は相対的に小さくなります

00:00:46.000 --> 00:00:50.000
実際σ²の結果は3．98です

00:00:50.000 --> 00:00:52.000
4や1，000よりは いい値です

00:00:52.000 --> 00:00:56.000
4より少しいいですし
観測よりわずかに確実性が増します

00:00:56.000 --> 00:01:00.000
動作1を適用すると5．9になります

00:01:00.000 --> 00:01:04.000
不確実性は3．9から5．98に2だけ増加します

00:01:04.000 --> 00:01:09.000
次の更新は観測値6の時で結果は5．99になります

00:01:09.000 --> 00:01:13.000
不確実性は2．39に減少します

00:01:13.000 --> 00:01:20.000
また1だけ右に動き予測値が6．99になり
不確実性は増加します

00:01:20.000 --> 00:01:26.000
観測値7で約7になり不確実性は減少します

00:01:26.000 --> 00:01:31.000
2動き観測値は9、1動き観測値は10になります

00:01:31.000 --> 00:01:36.000
最後に1動き最終的な予測値は約11です

00:01:36.000 --> 00:01:40.000
10＋1の結果です

00:01:40.000 --> 00:01:46.000
動作後の不確実性は4．0で
観測後の不確実性は2．0です

00:01:46.000 --> 00:01:52.000
このコードは一次元のカルマンフィルタ全体を
実装していることになります

00:01:52.000 --> 00:01:59.000
ここにあるupdate関数は非常にシンプルな数式です

00:01:59.000 --> 00:02:04.000
足し算だけの単純なpredict関数もあります

00:02:04.000 --> 00:02:09.000
2つの関数をある程度の不確実性がある
観測と動作の数列に適用します

00:02:09.000 --> 00:02:14.000
一次元のカルマンフィルタ全体を
この短いコードが記述しているのです

00:02:14.000 --> 00:02:19.000
非常に驚くべきことですね
では他の値も代入してみましょう

00:02:19.000 --> 00:02:22.000
初期位置について確実性が高い場合です

00:02:22.000 --> 00:02:26.000
この0は間違いです　本来なら5であるべきです

00:02:26.000 --> 00:02:31.000
不確実性が非常に低いと想定し
最後の予測がどうなるか予想してください

00:02:31.000 --> 00:02:36.000
Runボタンを押せば
最終的な予測に影響すると分かります

00:02:36.000 --> 00:02:38.000
11ではなく10．5です

00:02:38.000 --> 00:02:42.000
この現象が起こる理由はまず第一に

00:02:42.000 --> 00:02:46.000
最初の観測更新後に位置が0だと
確信しているためです

00:02:46.000 --> 00:02:49.000
これは1．24の－10乗です

00:02:49.000 --> 00:02:52.000
しかし不確実性はこれよりもさらに小さくなります

00:02:52.000 --> 00:02:57.000
動作を更新し1を加えると不確実性が増します

00:02:57.000 --> 00:03:01.000
次の観測値は6ですが
より一層この値を信じようとします

00:03:01.000 --> 00:03:06.000
不確実性が基本的に0．001から2になったからです

00:03:06.000 --> 00:03:10.000
位置は2．666に更新されます

00:03:10.000 --> 00:03:13.000
位置は1からは急増しましたが
不確実性は減少しました

00:03:13.000 --> 00:03:17.000
動作により予測値は3．66となり
不確実性は高くなります

00:03:17.000 --> 00:03:21.000
さらに進めましょう
観測値が7の時更新された予測値は5．1

00:03:21.000 --> 00:03:26.000
間違った初期値に確信があるため
本来の位置は得られません

00:03:26.000 --> 00:03:29.000
そのため最終的な位置は

00:03:29.000 --> 00:03:33.000
11ではなく10．5という予想になります

00:03:33.000 --> 00:03:38.000
不確実性は3．98となり
値を少し修正することができましたが

00:03:38.000 --> 00:03:41.000
すべてを修正することはできませんでした

00:03:41.000 --> 00:03:47.000
誤った初期信念は
数式全体に大きな影響を与えてしまうのです

