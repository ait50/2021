WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.774
Word2vec 是一种正向嵌入

00:00:03.774 --> 00:00:08.849
最近有人提出几种非常有潜力的相关方法

00:00:08.849 --> 00:00:14.429
用于词表示法的 GloVe（全局向量）正是其中之一

00:00:14.429 --> 00:00:17.054
它尝试利用同现统计法

00:00:17.054 --> 00:00:20.300
直接优化每个词的向量表示法

00:00:20.300 --> 00:00:24.269
而 word2vec 进行的是辅助预测任务

00:00:24.269 --> 00:00:30.359
首先 对于指定语料库中的所有词对 ij

00:00:30.359 --> 00:00:36.090
计算词 j 在词 i 的上下文中出现的概率 P(j | i)

00:00:36.090 --> 00:00:39.295
“j 在 i 的上下文中出现”是什么意思？

00:00:39.295 --> 00:00:43.525
意思是词 j 出现在词 i 附近

00:00:43.524 --> 00:00:44.835
与它相邻或者

00:00:44.835 --> 00:00:46.890
相隔几个词

00:00:46.890 --> 00:00:50.984
统计文本集中 i 和 j 出现这种情况的所有次数

00:00:50.984 --> 00:00:53.939
然后将计数标准化 获得概率

00:00:53.939 --> 00:00:59.309
然后 对每个词初始化一个随机向量 实际是两个向量

00:00:59.310 --> 00:01:02.640
一个代表作为上下文的词

00:01:02.640 --> 00:01:07.284
另一个代表作为目标的词 很好

00:01:07.284 --> 00:01:09.200
现在 对于任何词对 ij

00:01:09.200 --> 00:01:13.500
我们想让其词向量的点积

00:01:13.500 --> 00:01:18.045
Wi 乘以 Wj 等于其同现概率

00:01:18.045 --> 00:01:21.540
以此为目标 利用适当损失函数

00:01:21.540 --> 00:01:24.845
可以通过迭代方式优化这些词向量

00:01:24.844 --> 00:01:27.390
结果应为一组向量 这个向量捕捉了

00:01:27.390 --> 00:01:31.489
各个词之间的相似性和差异性

00:01:31.489 --> 00:01:33.780
从另一个角度看

00:01:33.780 --> 00:01:35.579
我们实质上是将

00:01:35.579 --> 00:01:39.689
同现概率矩阵分解成两个小矩阵

00:01:39.689 --> 00:01:42.454
这是 GloVe 的基本概念

00:01:42.454 --> 00:01:43.984
听起来很好

00:01:43.984 --> 00:01:46.900
但是为什么使用同现概率？

00:01:46.900 --> 00:01:48.580
假设有两个语境词

00:01:48.579 --> 00:01:50.694
ice 和 steam

00:01:50.694 --> 00:01:54.139
以及两个目标词 solid 和 water

00:01:54.140 --> 00:01:59.370
相比 steam 来讲 在 ice 的上下文中 你更容易想到 solid 对吧？

00:01:59.370 --> 00:02:03.840
但是 water 在两个上下文中出现的概率基本相等

00:02:03.840 --> 00:02:06.020
至少我们是这样认为的

00:02:06.019 --> 00:02:10.724
令人吃惊的是 这正是同现概率所反映的东西

00:02:10.724 --> 00:02:12.280
在较大语料库中

00:02:12.280 --> 00:02:15.145
你会发现 P(solid | ice)

00:02:15.145 --> 00:02:19.150
与 P(solid | steam) 的比远远大于 1

00:02:19.150 --> 00:02:25.270
而 P(water | ice) 与 P(water | steam) 的比接近 1

00:02:25.270 --> 00:02:27.985
因此可以看出 同现概率

00:02:27.985 --> 00:02:31.570
已经表现出我们想要捕捉的某些特征

00:02:31.569 --> 00:02:34.000
实际上 相比使用原始概率值

00:02:34.000 --> 00:02:38.919
一种改进方法是优化概率的比

00:02:38.919 --> 00:02:41.514
这里有很多微妙之处

00:02:41.514 --> 00:02:46.869
最明显的就是 同现概率矩阵是巨大的

00:02:46.870 --> 00:02:48.129
同时

00:02:48.129 --> 00:02:51.204
同现概率值一般非常低

00:02:51.205 --> 00:02:54.840
因此可以对这些值的对数进行处理

00:02:54.840 --> 00:02:57.724
我建议你阅读介绍 GloVe 的原论文

00:02:57.724 --> 00:03:01.000
以便更好理解这种技术

