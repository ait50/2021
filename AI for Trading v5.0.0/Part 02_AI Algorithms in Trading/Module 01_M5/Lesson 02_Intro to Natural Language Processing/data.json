{
  "data": {
    "lesson": {
      "id": 781697,
      "key": "c311a3b7-4c0c-4124-82df-ebd6b3c2d658",
      "title": "Intro to Natural Language Processing",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn how to build a Natural Language Processing pipeline.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/c311a3b7-4c0c-4124-82df-ebd6b3c2d658/781697/1549058873194/Intro+to+Natural+Language+Processing+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/c311a3b7-4c0c-4124-82df-ebd6b3c2d658/781697/1549058870142/Intro+to+Natural+Language+Processing+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 310535,
          "key": "862291a6-df26-4ef8-9c44-04e278de3dcb",
          "title": "NLP Overview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "862291a6-df26-4ef8-9c44-04e278de3dcb",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 325055,
              "key": "1856e235-c7a6-46ea-bc7f-dc62623acbc9",
              "title": "Welcome to NLP",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "g-AlFF61p0I",
                "china_cdn_id": "g-AlFF61p0I.mp4"
              }
            }
          ]
        },
        {
          "id": 310536,
          "key": "2b13e2e4-8ef8-45bd-8cb2-1e299573ddc5",
          "title": "Structured Languages",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2b13e2e4-8ef8-45bd-8cb2-1e299573ddc5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 325695,
              "key": "c2267470-a256-4306-b540-b8ea17eb88dc",
              "title": "Structured Languages",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "NsmqUIHlk6U",
                "china_cdn_id": "NsmqUIHlk6U.mp4"
              }
            },
            {
              "id": 330193,
              "key": "c23b7432-f13e-4788-b49d-72373c5f4653",
              "title": "Statement Types",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c23b7432-f13e-4788-b49d-72373c5f4653",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Consider each of the following Python statements, and assign an appropriate label that best identifies what type of statement  it is."
                },
                "concepts_label": "Statement",
                "answers_label": "Type",
                "concepts": [
                  {
                    "text": "```python\ndef square(x): return (x * x)\n```",
                    "correct_answer": {
                      "id": "a1497117382284",
                      "text": "Function definition"
                    }
                  },
                  {
                    "text": "```python\nfor i in range(10): print(i)\n```",
                    "correct_answer": {
                      "id": "a1497117781398",
                      "text": "Loop"
                    }
                  },
                  {
                    "text": "```python\na = 5\n```",
                    "correct_answer": {
                      "id": "a1497117899996",
                      "text": "Assignment"
                    }
                  },
                  {
                    "text": "```python\nsquare(3)\n```",
                    "correct_answer": {
                      "id": "a1497117916337",
                      "text": "Function call"
                    }
                  },
                  {
                    "text": "```python\nif a > 3: print(square(a))\n```",
                    "correct_answer": {
                      "id": "a1497117983056",
                      "text": "Conditional"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1497117781398",
                    "text": "Loop"
                  },
                  {
                    "id": "a1497117983056",
                    "text": "Conditional"
                  },
                  {
                    "id": "a1497118096784",
                    "text": "Increment"
                  },
                  {
                    "id": "a1497117382284",
                    "text": "Function definition"
                  },
                  {
                    "id": "a1497117899996",
                    "text": "Assignment"
                  },
                  {
                    "id": "a1497117916337",
                    "text": "Function call"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 310537,
          "key": "de90f175-ffea-4171-a082-da9ca71517b2",
          "title": "Grammar",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "de90f175-ffea-4171-a082-da9ca71517b2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 325057,
              "key": "ff4f17c0-b48e-43c8-a338-b2d49c1ec713",
              "title": "Grammar",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Jw3dA7xmoQ4",
                "china_cdn_id": "Jw3dA7xmoQ4.mp4"
              }
            },
            {
              "id": 330224,
              "key": "17c0f4d4-6dbc-44dc-b3aa-802ab2877e17",
              "title": "Grammar",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "17c0f4d4-6dbc-44dc-b3aa-802ab2877e17",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Here is a _grammar_, specified in a simple notation known as **Backus-Naur Form** or BNF <sup>[1]</sup>:\n\n> _S_ &rarr; 0 _S_ 0<br />\n> _S_ &rarr; 1 _S_ 1<br />\n> _S_ &rarr; 00<br />\n> _S_ &rarr; 11<br />\n\nWhich of the following _sentences_ are valid according to this grammar?\n\n<sup>[1]</sup> _For a quick review, check out this brief segment on [grammars](https://classroom.udacity.com/courses/cs101/lessons/48299949/concepts/487192400923) from our Intro to Computer Science course._",
                "answers": [
                  {
                    "id": "a1497132008930",
                    "text": "00",
                    "is_correct": true
                  },
                  {
                    "id": "a1497135610699",
                    "text": "10111101",
                    "is_correct": true
                  },
                  {
                    "id": "a1497135631489",
                    "text": "000111001",
                    "is_correct": false
                  },
                  {
                    "id": "a1497135640805",
                    "text": "101",
                    "is_correct": false
                  },
                  {
                    "id": "a1497135683173",
                    "text": "110011",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 310538,
          "key": "26d80520-a000-45f4-90fd-68f494c29865",
          "title": "Unstructured Text",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "26d80520-a000-45f4-90fd-68f494c29865",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 325058,
              "key": "a571ad81-7339-4693-ba78-30217bd72981",
              "title": "Unstructured Text",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OmwSdaec5vU",
                "china_cdn_id": "OmwSdaec5vU.mp4"
              }
            },
            {
              "id": 330227,
              "key": "306358c7-d0c1-42af-b03b-3e02344bdd1f",
              "title": "Identify Parts of Speech",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "306358c7-d0c1-42af-b03b-3e02344bdd1f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Let's see if you can identify parts of speech! Here is a sample English sentence:\n\n> She works at IBM.\n\nFor each word in the sentence, label it with the correct part of speech. Here a _named entity_ is essentially a _proper noun_."
                },
                "concepts_label": "Word",
                "answers_label": "Part of Speech",
                "concepts": [
                  {
                    "text": "She",
                    "correct_answer": {
                      "id": "a1497136593289",
                      "text": "pronoun"
                    }
                  },
                  {
                    "text": "works",
                    "correct_answer": {
                      "id": "a1497136861284",
                      "text": "verb"
                    }
                  },
                  {
                    "text": "at",
                    "correct_answer": {
                      "id": "a1497136866334",
                      "text": "preposition"
                    }
                  },
                  {
                    "text": "IBM",
                    "correct_answer": {
                      "id": "a1497136875521",
                      "text": "named entity"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1497136861284",
                    "text": "verb"
                  },
                  {
                    "id": "a1497137171904",
                    "text": "article"
                  },
                  {
                    "id": "a1497136866334",
                    "text": "preposition"
                  },
                  {
                    "id": "a1497136875521",
                    "text": "named entity"
                  },
                  {
                    "id": "a1497136593289",
                    "text": "pronoun"
                  },
                  {
                    "id": "a1497137163270",
                    "text": "interjection"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 330228,
          "key": "255aab5f-4c2f-4d2f-a320-aabfb6d6bc53",
          "title": "Counting Words",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "255aab5f-4c2f-4d2f-a320-aabfb6d6bc53",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 330243,
              "key": "84fb8636-fba7-414b-af9b-e6d2c690eef2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Let's implement a simple function that is often used in Natural Language Processing: Counting word frequencies.\n\nConsider this passage of text:\n\n> As I was waiting, a man came out of a side room, and at a glance I was sure he must be Long John. His left leg was cut off close by the hip, and under the left shoulder he carried a crutch, which he managed with wonderful dexterity, hopping about upon it like a bird. He was very tall and strong, with a face as big as a ham—plain and pale, but intelligent and smiling. Indeed, he seemed in the most cheerful spirits, whistling as he moved about among the tables, with a merry word or a slap on the shoulder for the more favoured of his guests.\n\n&mdash; _Excerpt from Treasure Island, by Robert Louis Stevenson._\n\nIn the following coding exercise, we have provided code to load the text from a file, call the function `count_words()` to obtain word counts (which you need to implement), and print the 10 most common and least common unique words.\n\n_Complete the portions marked as TODO to count how many times each unique word occurs in the text._\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 330360,
              "key": "462395ab-7741-48b3-ade0-dd830ebb3bd1",
              "title": "",
              "semantic_type": "QuizAtom",
              "is_public": true,
              "instructor_notes": "",
              "user_state": {
                "node_key": "462395ab-7741-48b3-ade0-dd830ebb3bd1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "instruction": null,
              "question": {
                "title": "Count words",
                "semantic_type": "ProgrammingQuestion",
                "evaluation_id": "6516269154172928",
                "initial_code_files": [
                  {
                    "text": "\"\"\"Count words.\"\"\"\n\ndef count_words(text):\n    \"\"\"Count how many times each unique word occurs in text.\"\"\"\n    counts = dict()  # dictionary of { <word>: <count> } pairs to return\n    \n    # TODO: Convert to lowercase\n    \n    # TODO: Split text into tokens (words), leaving out punctuation\n    # (Hint: Use regex to split on non-alphanumeric characters)\n    \n    # TODO: Aggregate word counts using a dictionary\n    \n    return counts\n\n\ndef test_run():\n    with open(\"input.txt\", \"r\") as f:\n        text = f.read()\n        counts = count_words(text)\n        sorted_counts = sorted(counts.items(), key=lambda pair: pair[1], reverse=True)\n        \n        print(\"10 most common words:\\nWord\\tCount\")\n        for word, count in sorted_counts[:10]:\n            print(\"{}\\t{}\".format(word, count))\n        \n        print(\"\\n10 least common words:\\nWord\\tCount\")\n        for word, count in sorted_counts[-10:]:\n            print(\"{}\\t{}\".format(word, count))\n\n\nif __name__ == \"__main__\":\n    test_run()\n",
                    "name": "count_words.py"
                  },
                  {
                    "text": "As I was waiting, a man came out of a side room, and at a glance I was sure he must be Long John. His left leg was cut off close by the hip, and under the left shoulder he carried a crutch, which he managed with wonderful dexterity, hopping about upon it like a bird. He was very tall and strong, with a face as big as a ham—plain and pale, but intelligent and smiling. Indeed, he seemed in the most cheerful spirits, whistling as he moved about among the tables, with a merry word or a slap on the shoulder for the more favoured of his guests.",
                    "name": "input.txt"
                  }
                ]
              },
              "answer": null
            }
          ]
        },
        {
          "id": 310539,
          "key": "3733d4b0-948d-41f2-9350-7cdab3dfb63d",
          "title": "Context Is Everything",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3733d4b0-948d-41f2-9350-7cdab3dfb63d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 325059,
              "key": "1ff78b96-d7e2-44d8-bae7-435ae5122c55",
              "title": "Context",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "J-4pfu2w1C0",
                "china_cdn_id": "J-4pfu2w1C0.mp4"
              }
            },
            {
              "id": 330454,
              "key": "e3f3ece3-913a-4173-ad90-8722e5016ff9",
              "title": "Contextual Dependence",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e3f3ece3-913a-4173-ad90-8722e5016ff9",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "Can you think of a similar sentence, in English or your own native language, where some contextual or background knowledge is needed to understand the intended meaning?"
              },
              "answer": {
                "text": "Thank you for your response! Please share your example with your peers in the Slack group.",
                "video": null
              }
            }
          ]
        },
        {
          "id": 339939,
          "key": "dd4d1944-a66c-40ea-a5b4-469abfc9ca44",
          "title": "NLP and Pipelines",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dd4d1944-a66c-40ea-a5b4-469abfc9ca44",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 339944,
              "key": "2f7722fa-f903-4f65-b079-47a5eb2cb0ed",
              "title": "Natural Language Processing",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "UQBxJzoCp-I",
                "china_cdn_id": "UQBxJzoCp-I.mp4"
              }
            }
          ]
        },
        {
          "id": 339972,
          "key": "f133cf85-6f21-411d-949b-ac405be883b3",
          "title": "How NLP Pipelines Work",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f133cf85-6f21-411d-949b-ac405be883b3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 339974,
              "key": "40bc6840-872a-4041-880c-19c469fa46bf",
              "title": "NLP M1-L1 01 NLP Pipeline",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vJx6oKlu_MM",
                "china_cdn_id": "vJx6oKlu_MM.mp4"
              }
            }
          ]
        },
        {
          "id": 339975,
          "key": "39539f1f-81fc-42c6-b960-9678392916ee",
          "title": "Text Processing",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "39539f1f-81fc-42c6-b960-9678392916ee",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 339978,
              "key": "bdf67ea2-312b-4662-a37f-578d09e5c31f",
              "title": "Text Processing",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "Source: https://en.wikipedia.org/wiki/Kingfisher",
              "video": {
                "youtube_id": "pqheVyctkNQ",
                "china_cdn_id": "pqheVyctkNQ.mp4"
              }
            }
          ]
        },
        {
          "id": 339979,
          "key": "ede61d65-eea9-40f2-aa0d-a9ee7030a9d8",
          "title": "Feature Extraction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ede61d65-eea9-40f2-aa0d-a9ee7030a9d8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 339980,
              "key": "ab6729aa-9b93-473d-8058-467e33b3baab",
              "title": "Feature Extraction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "WordNet visualization tool: http://mateogianolio.com/wordnet-visualization/",
              "video": {
                "youtube_id": "UgENzCmfFWE",
                "china_cdn_id": "UgENzCmfFWE.mp4"
              }
            }
          ]
        },
        {
          "id": 339981,
          "key": "abc420ac-83f0-4b33-8cfb-e46c059f7990",
          "title": "Modeling",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "abc420ac-83f0-4b33-8cfb-e46c059f7990",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 339982,
              "key": "7fbdbf9d-aa93-4765-935c-1a3e182cadd3",
              "title": "Modeling",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "P4w_2rkxBvE",
                "china_cdn_id": "P4w_2rkxBvE.mp4"
              }
            }
          ]
        }
      ]
    }
  }
}